%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 220 581 621 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[1.889764 20 div 0 0 1.889764 20 div neg 141 10 div 6212 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
33 Setcolor
 (drawpoly) 14 [ -34]
[5250 1271 3964 530 750 2382 750 2969 2036 3710 5250 1858 5250 1271 
] dogrey 
33 Setcolor
/absolu true def
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
 (drawsegs) 12 [ 3]
[3964 1117 750 2969 3964 1117 5250 1858 3964 1117 3964 530 
] dogrey 
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
[] 0 setdash
0 Setcolor
/closeflag false def
 (drawpoly) 14 [ 0]
[5250 1271 3964 530 750 2382 750 2969 2036 3710 5250 1858 5250 1271 
] dogrey 
0 Setcolor
/absolu true def
[] 0 setdash
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.3) 424 2919 0  0.00 [424 2819 172 99] Show
%Latex:\myput{424}{1321}{5}{-0.3}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2969 673 2925 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2969 711 2947 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2896 711 2874 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2822 711 2800 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2749 711 2727 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.1) 457 2626 0  0.00 [457 2526 139 99] Show
%Latex:\myput{457}{1614}{5}{0.1}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2676 673 2632 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[750 2676 3964 824 
] dogrey 
 (drawsegs) 4 [ 0]
[3964 824 5250 1565 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[750 2676 711 2654 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2602 711 2580 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2529 711 2507 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2456 711 2434 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.5) 457 2332 0  0.00 [457 2232 139 99] Show
%Latex:\myput{457}{1908}{5}{0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2382 673 2338 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Z) 300 2685 0 270.00 [300 2585 61 99] Show
%Latex:\myput{300}{1555}{5}{Z}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-2.0) 5404 2034 0  0.00 [5404 1934 172 99] Show
%Latex:\myput{5404}{2206}{5}{-2.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[5250 1858 5327 1902 
] dogrey 
 (drawsegs) 4 [ 0]
[5036 1981 5074 2003 
] dogrey 
 (drawsegs) 4 [ 0]
[4821 2105 4859 2127 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.5) 4761 2404 0  0.00 [4761 2304 172 99] Show
%Latex:\myput{4761}{1836}{5}{-1.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[4607 2228 4684 2272 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[4607 2228 3321 1487 
] dogrey 
 (drawsegs) 4 [ 0]
[3321 1487 3321 900 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[4393 2352 4431 2374 
] dogrey 
 (drawsegs) 4 [ 0]
[4179 2475 4217 2497 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.0) 4118 2775 0  0.00 [4118 2675 172 99] Show
%Latex:\myput{4118}{1465}{5}{-1.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[3964 2599 4041 2643 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[3964 2599 2678 1858 
] dogrey 
 (drawsegs) 4 [ 0]
[2678 1858 2678 1271 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[3750 2722 3788 2744 
] dogrey 
 (drawsegs) 4 [ 0]
[3536 2846 3574 2868 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.5) 3475 3145 0  0.00 [3475 3045 172 99] Show
%Latex:\myput{3475}{1095}{5}{-0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[3321 2969 3398 3013 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[3321 2969 2035 2228 
] dogrey 
 (drawsegs) 4 [ 0]
[2035 2228 2035 1641 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[3107 3093 3145 3115 
] dogrey 
 (drawsegs) 4 [ 0]
[2893 3216 2931 3238 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.0) 2833 3516 0  0.00 [2833 3416 139 99] Show
%Latex:\myput{2833}{724}{5}{0.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[2679 3340 2756 3384 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[2679 3340 1393 2599 
] dogrey 
 (drawsegs) 4 [ 0]
[1393 2599 1393 2012 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[2464 3463 2502 3485 
] dogrey 
 (drawsegs) 4 [ 0]
[2250 3587 2288 3609 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.5) 2190 3886 0  0.00 [2190 3786 139 99] Show
%Latex:\myput{2190}{354}{5}{0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[2036 3710 2113 3754 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(X) 4032 3401 0  0.00 [4032 3301 66 99] Show
%Latex:\myput{4032}{839}{5}{X}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.5) 424 3145 0  0.00 [424 3045 172 99] Show
%Latex:\myput{424}{1095}{5}{-0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2969 673 3013 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2969 711 2991 
] dogrey 
 (drawsegs) 4 [ 0]
[911 3062 872 3084 
] dogrey 
 (drawsegs) 4 [ 0]
[1071 3154 1032 3176 
] dogrey 
 (drawsegs) 4 [ 0]
[1232 3247 1193 3269 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.0) 1100 3516 0  0.00 [1100 3416 139 99] Show
%Latex:\myput{1100}{724}{5}{0.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[1393 3340 1316 3384 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[1393 3340 4607 1488 
] dogrey 
 (drawsegs) 4 [ 0]
[4607 1488 4607 901 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[1393 3340 1354 3362 
] dogrey 
 (drawsegs) 4 [ 0]
[1554 3432 1515 3454 
] dogrey 
 (drawsegs) 4 [ 0]
[1714 3525 1675 3547 
] dogrey 
 (drawsegs) 4 [ 0]
[1875 3617 1836 3639 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.5) 1743 3886 0  0.00 [1743 3786 139 99] Show
%Latex:\myput{1743}{354}{5}{0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[2036 3710 1959 3754 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Y) 1008 3771 0  0.00 [1008 3671 66 99] Show
%Latex:\myput{1008}{469}{5}{Y}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
0 Setcolor
[] 0 setdash
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2143 3321 2180 3321 2143 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2140 3321 2177 3321 2140 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2128 3321 2165 3321 2128 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2126 3321 2162 3321 2126 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2143 3386 2180 3321 2143 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2143 3257 2180 3321 2143 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2114 3321 2150 3321 2114 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2140 3386 2177 3321 2140 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2140 3257 2177 3321 2140 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2111 3321 2148 3321 2111 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2128 3386 2166 3321 2128 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2128 3257 2166 3321 2128 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2099 3321 2136 3321 2099 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2126 3386 2163 3321 2126 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2126 3257 2163 3321 2126 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2096 3321 2133 3321 2096 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2166 3411 2202 3411 2166 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2114 3386 2151 3321 2114 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2114 3257 2151 3321 2114 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2084 3321 2121 3321 2084 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2111 3386 2148 3321 2111 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2111 3257 2148 3321 2111 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2082 3321 2118 3321 2082 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2151 3411 2188 3411 2151 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2099 3386 2136 3321 2099 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2099 3257 2136 3321 2099 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2070 3321 2106 3321 2070 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2096 3386 2133 3321 2096 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2096 3257 2133 3321 2096 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2067 3321 2104 3321 2067 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2166 3476 2203 3411 2166 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2166 3347 2203 3411 2166 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2136 3411 2173 3411 2136 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2084 3386 2121 3321 2084 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2084 3257 2121 3321 2084 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2055 3321 2092 3321 2055 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2082 3386 2119 3321 2082 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2082 3257 2119 3321 2082 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2052 3321 2089 3321 2052 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2151 3476 2188 3411 2151 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2151 3347 2188 3411 2151 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2122 3411 2158 3411 2122 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2070 3386 2107 3321 2070 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2070 3257 2107 3321 2070 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2040 3321 2077 3321 2040 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2067 3386 2104 3321 2067 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2067 3257 2104 3321 2067 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2037 3321 2074 3321 2037 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2136 3476 2173 3411 2136 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2136 3347 2173 3411 2136 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2107 3411 2144 3411 2107 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2055 3386 2092 3321 2055 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2055 3257 2092 3321 2055 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2026 3321 2062 3321 2026 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2052 3386 2089 3321 2052 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2052 3257 2089 3321 2052 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2023 3321 2060 3321 2023 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2122 3476 2159 3411 2122 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2122 3347 2159 3411 2122 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2092 3411 2129 3411 2092 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2040 3386 2077 3321 2040 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2040 3257 2077 3321 2040 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2011 3321 2048 3321 2011 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2037 3386 2075 3321 2037 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2037 3257 2075 3321 2037 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2008 3321 2045 3321 2008 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2107 3476 2144 3411 2107 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2107 3347 2144 3411 2107 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2078 3411 2114 3411 2078 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2026 3386 2063 3321 2026 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2026 3257 2063 3321 2026 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2023 3386 2060 3321 2023 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2023 3257 2060 3321 2023 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2092 3476 2129 3411 2092 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2092 3347 2129 3411 2092 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2063 3411 2100 3411 2063 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2011 3386 2048 3321 2011 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3321 2011 3257 2048 3321 2011 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2008 3386 2045 3321 2008 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3321 2008 3257 2045 3321 2008 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2078 3476 2115 3411 2078 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2078 3347 2115 3411 2078 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2048 3411 2085 3411 2048 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2063 3476 2100 3411 2063 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2063 3347 2100 3411 2063 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2034 3411 2070 3411 2034 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2048 3476 2085 3411 2048 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2048 3347 2085 3411 2048 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2034 3476 2071 3411 2034 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3411 2034 3347 2071 3411 2034 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2229 2970 1843 2748 2229 2970 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[1843 2748 1843 2528 1843 2748 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2229 2750 2229 2970 2229 2750 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2229 2750 1843 2528 2229 2750 
] dogrey 
4 Setcolor
/absolu true def
0 Setcolor
5 Thickness
[] 0 setdash
[] 0 setdash
 (drawsegs) 12 [ 0]
[2036 3123 5250 1271 2036 3123 750 2382 2036 3123 2036 3710 
] dogrey 
[] 0 setdash
[] 0 setdash
15 Thickness
4 Setcolor
%Latex:\end{picture}
 showpage

 end saved restore 


