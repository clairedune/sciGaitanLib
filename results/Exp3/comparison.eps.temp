%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 220 581 621 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[1.889764 20 div 0 0 1.889764 20 div neg 141 10 div 6212 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
3 Setcolor
5 Thickness
750 530 4500 3180 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
3 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 530 750 3710 5250 3710 5250 530 750 530 
] dogrey 
33 Setcolor
/absolu true def
3 Setcolor
[] 0 setdash
3 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3710 750 530 
] dogrey 
 (drawsegs) 4 [ 3]
[1200 3710 1200 530 
] dogrey 
 (drawsegs) 4 [ 3]
[1650 3710 1650 530 
] dogrey 
 (drawsegs) 4 [ 3]
[2100 3710 2100 530 
] dogrey 
 (drawsegs) 4 [ 3]
[2550 3710 2550 530 
] dogrey 
 (drawsegs) 4 [ 3]
[3000 3710 3000 530 
] dogrey 
 (drawsegs) 4 [ 3]
[3450 3710 3450 530 
] dogrey 
 (drawsegs) 4 [ 3]
[3900 3710 3900 530 
] dogrey 
 (drawsegs) 4 [ 3]
[4350 3710 4350 530 
] dogrey 
 (drawsegs) 4 [ 3]
[4800 3710 4800 530 
] dogrey 
 (drawsegs) 4 [ 3]
[5250 3710 5250 530 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3710 5250 3710 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3392 5250 3392 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3074 5250 3074 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2756 5250 2756 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2438 5250 2438 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2120 5250 2120 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1802 5250 1802 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1484 5250 1484 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1166 5250 1166 
] dogrey 
 (drawsegs) 4 [ 3]
[750 848 5250 848 
] dogrey 
 (drawsegs) 4 [ 3]
[750 530 5250 530 
] dogrey 
[] 0 setdash
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[1605 1134 90 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4305 1134 90 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[1605 3042 90 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4305 3042 90 64 0 23040 
] dogrey 
0 Setcolor
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1700 1151 1749 1137 1798 1124 1847 1113 1896 1102 1945 1093 1993 1085 2041 1078 2088 1072 2135 1067 
2182 1063 2228 1060 2274 1059 2319 1058 2364 1058 2408 1059 2452 1060 2495 1063 2538 1067 2580 1071 
2621 1077 2662 1083 2702 1090 2741 1097 2779 1106 2817 1115 2854 1125 2890 1135 2925 1146 2959 1158 
2993 1171 3025 1184 3057 1197 3088 1211 3117 1226 3146 1241 3174 1256 3201 1272 3227 1289 3252 1306 
3276 1323 3299 1340 3321 1358 3342 1376 3362 1395 3381 1413 3399 1432 3416 1451 3431 1470 3446 1490 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4336 1225 4320 1283 4302 1338 4284 1391 4264 1442 4243 1491 4221 1538 4198 1583 4174 1627 4149 1669 
4123 1709 4096 1748 4068 1785 4040 1820 4011 1854 3982 1887 3952 1918 3922 1947 3891 1975 3859 2002 
3827 2028 3795 2052 3763 2075 3731 2096 3698 2117 3665 2136 3632 2154 3599 2171 3566 2186 3533 2201 
3500 2214 3467 2227 3434 2238 3401 2248 3369 2257 3337 2265 3305 2273 3274 2279 3242 2284 3211 2288 
3181 2292 3151 2295 3121 2296 3092 2297 3064 2297 3036 2297 3008 2296 2982 2293 2955 2291 2930 2287 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1594 3014 1543 2953 1496 2894 1454 2834 1416 2776 1382 2717 1352 2660 1326 2602 1303 2546 1284 2490 
1268 2435 1256 2380 1247 2327 1240 2274 1237 2222 1237 2171 1239 2120 1245 2071 1252 2023 1263 1975 
1275 1929 1290 1884 1307 1840 1327 1797 1348 1755 1372 1714 1397 1675 1424 1636 1453 1599 1484 1564 
1516 1529 1549 1496 1584 1464 1620 1433 1658 1404 1697 1376 1736 1349 1777 1324 1819 1300 1861 1277 
1905 1256 1949 1236 1993 1217 2039 1200 2084 1184 2131 1170 2177 1156 2224 1145 2271 1134 2318 1125 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4230 3088 4114 3099 4000 3107 3891 3112 3784 3115 3680 3115 3580 3112 3483 3108 3389 3101 3297 3092 
3209 3080 3124 3067 3041 3053 2961 3036 2885 3018 2810 2999 2739 2977 2671 2955 2605 2931 2542 2906 
2482 2880 2424 2853 2369 2825 2317 2796 2267 2766 2220 2735 2175 2704 2134 2672 2094 2639 2057 2606 
2023 2573 1991 2539 1961 2504 1934 2470 1910 2435 1887 2400 1867 2365 1850 2330 1834 2295 1821 2260 
1810 2225 1801 2190 1794 2155 1789 2121 1786 2087 1786 2053 1787 2020 1790 1987 1795 1954 1802 1922 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[2026 1595 2044 1580 2062 1566 2080 1552 2100 1538 2120 1525 2140 1513 2161 1501 2183 1490 2205 1479 
2227 1469 2250 1460 2274 1451 2297 1443 2321 1435 2345 1428 2369 1422 2394 1416 2418 1411 2443 1406 
2468 1402 2493 1399 2518 1396 2543 1394 2568 1392 2593 1391 2618 1390 2642 1390 2667 1391 2691 1392 
2716 1393 2740 1395 2763 1398 2787 1401 2810 1405 2833 1409 2856 1414 2879 1419 2901 1424 2922 1430 
2943 1436 2964 1443 2985 1450 3005 1458 3024 1466 3043 1474 3062 1483 3080 1492 3097 1501 3114 1511 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4662 1670 4614 1726 4566 1779 4517 1829 4468 1877 4418 1923 4368 1966 4319 2006 4268 2045 4218 2081 
4168 2115 4118 2147 4068 2177 4018 2206 3968 2232 3918 2256 3869 2279 3820 2300 3771 2320 3722 2337 
3674 2353 3627 2368 3579 2381 3533 2393 3486 2403 3441 2412 3396 2420 3352 2426 3308 2431 3265 2434 
3223 2437 3181 2438 3141 2439 3101 2438 3062 2436 3024 2433 2987 2430 2951 2425 2916 2419 2882 2413 
2848 2405 2816 2397 2785 2389 2755 2379 2726 2369 2698 2358 2671 2346 2646 2334 2621 2322 2598 2308 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1921 3458 1838 3397 1760 3335 1687 3273 1620 3211 1557 3149 1500 3087 1447 3025 1398 2964 1354 2902 
1314 2841 1278 2780 1246 2719 1218 2659 1194 2600 1173 2540 1156 2482 1143 2424 1133 2367 1126 2310 
1122 2255 1121 2200 1124 2146 1129 2093 1137 2041 1148 1990 1161 1940 1177 1891 1195 1844 1216 1797 
1239 1752 1264 1708 1291 1665 1320 1623 1351 1583 1384 1544 1418 1506 1455 1470 1492 1435 1532 1401 
1572 1369 1614 1339 1657 1309 1701 1282 1747 1255 1793 1231 1840 1207 1888 1185 1937 1165 1986 1146 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4557 3533 4408 3542 4264 3548 4124 3551 3988 3550 3856 3547 3728 3540 3604 3531 3483 3518 3367 3504 
3255 3487 3146 3467 3041 3445 2939 3422 2841 3396 2747 3368 2656 3339 2569 3308 2485 3275 2405 3241 
2328 3206 2255 3169 2185 3131 2119 3092 2056 3052 1996 3011 1939 2970 1886 2927 1836 2884 1789 2840 
1746 2795 1705 2751 1668 2705 1634 2660 1603 2614 1574 2568 1549 2522 1527 2476 1507 2430 1491 2384 
1477 2338 1466 2293 1458 2248 1452 2203 1449 2158 1448 2114 1450 2070 1454 2028 1461 1985 1469 1943 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
5 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
5 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1678 1135 1713 1109 1750 1085 1788 1062 1826 1041 1865 1020 1905 1001 1946 984 1987 968 2028 953 
2070 939 2112 927 2154 916 2196 907 2239 899 2281 892 2323 886 2365 882 2407 879 2448 877 
2489 876 2530 877 2570 878 2609 881 2648 885 2686 890 2723 896 2760 903 2796 910 2831 919 
2865 929 2898 939 2930 950 2961 962 2991 975 3020 989 3048 1003 3075 1018 3100 1033 3124 1049 
3148 1065 3170 1082 3190 1099 3210 1117 3228 1135 3245 1153 3261 1172 3276 1190 3289 1209 3301 1228 
] dogrey 
5 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
5 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
5 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4365 1209 4364 1259 4360 1307 4354 1356 4345 1403 4333 1450 4319 1495 4302 1540 4284 1584 4263 1627 
4239 1668 4214 1709 4187 1748 4157 1786 4126 1823 4094 1858 4059 1892 4023 1925 3986 1956 3947 1986 
3908 2014 3867 2041 3825 2067 3782 2091 3738 2113 3693 2134 3648 2154 3603 2171 3556 2188 3510 2203 
3463 2216 3416 2228 3369 2239 3322 2248 3275 2255 3228 2261 3181 2266 3134 2269 3088 2271 3043 2272 
2997 2271 2953 2270 2909 2266 2866 2262 2823 2257 2782 2250 2741 2242 2701 2233 2662 2224 2624 2213 
] dogrey 
5 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
5 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
5 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1583 3022 1513 2971 1447 2919 1385 2865 1326 2811 1271 2755 1220 2698 1172 2641 1129 2583 1089 2525 
1053 2466 1021 2407 992 2347 967 2288 946 2228 929 2169 915 2110 904 2051 898 1993 894 1935 
894 1878 897 1821 903 1765 912 1710 924 1656 940 1603 958 1551 978 1500 1002 1450 1028 1402 
1056 1355 1087 1309 1119 1264 1154 1222 1191 1180 1230 1140 1271 1102 1313 1065 1357 1030 1403 997 
1450 965 1497 935 1547 907 1597 881 1648 856 1699 833 1752 811 1805 792 1859 774 1912 758 
] dogrey 
5 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
5 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
5 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4251 3088 4145 3112 4039 3132 3933 3150 3828 3164 3723 3175 3618 3182 3514 3187 3412 3189 3310 3188 
3210 3183 3111 3177 3014 3167 2919 3155 2825 3140 2733 3123 2644 3103 2556 3081 2471 3057 2388 3031 
2308 3003 2230 2973 2155 2941 2083 2907 2013 2872 1947 2835 1883 2796 1822 2757 1764 2716 1709 2674 
1657 2630 1608 2586 1563 2541 1520 2496 1480 2449 1444 2402 1411 2355 1380 2307 1353 2259 1329 2211 
1308 2163 1290 2114 1275 2066 1262 2018 1253 1970 1246 1923 1243 1875 1242 1829 1243 1782 1247 1737 
] dogrey 
5 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1559 1013 1619 999 1679 987 1738 976 1797 966 1854 958 1912 951 1968 945 2025 940 2080 937 
2135 934 2189 933 2242 933 2295 934 2346 936 2397 939 2448 943 2497 948 2545 954 2593 961 
2640 969 2686 978 2731 988 2775 998 2818 1009 2860 1021 2901 1034 2941 1047 2980 1062 3017 1076 
3054 1092 3090 1108 3124 1125 3158 1142 3190 1160 3222 1178 3252 1196 3280 1216 3308 1235 3335 1255 
3360 1275 3384 1296 3407 1317 3429 1338 3450 1360 3469 1381 3488 1403 3505 1425 3521 1447 3536 1469 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4273 1015 4269 1076 4262 1135 4254 1192 4245 1247 4234 1300 4221 1351 4207 1401 4192 1449 4175 1495 
4157 1539 4138 1582 4118 1624 4097 1664 4075 1702 4052 1740 4028 1775 4003 1809 3978 1842 3951 1874 
3925 1904 3897 1933 3869 1961 3841 1987 3812 2012 3782 2036 3753 2059 3722 2081 3692 2101 3661 2120 
3631 2138 3600 2155 3569 2171 3537 2186 3506 2200 3475 2213 3444 2224 3413 2235 3382 2245 3351 2254 
3320 2261 3290 2268 3260 2274 3230 2279 3201 2284 3172 2287 3143 2290 3115 2291 3087 2292 3059 2292 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1572 2929 1526 2870 1484 2811 1447 2753 1413 2696 1384 2639 1358 2582 1336 2527 1317 2472 1302 2418 
1290 2364 1281 2312 1275 2260 1272 2209 1272 2159 1275 2110 1280 2062 1288 2015 1298 1969 1311 1924 
1326 1880 1343 1837 1362 1795 1383 1754 1406 1715 1430 1676 1457 1639 1485 1603 1515 1568 1546 1535 
1579 1502 1613 1471 1649 1442 1685 1413 1723 1386 1762 1360 1801 1336 1842 1312 1883 1291 1925 1270 
1968 1251 2012 1233 2056 1216 2100 1201 2145 1187 2190 1174 2236 1162 2281 1152 2327 1143 2373 1136 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4267 2923 4158 2939 4051 2951 3948 2961 3847 2968 3750 2973 3655 2975 3563 2975 3474 2972 3388 2968 
3304 2961 3223 2953 3144 2943 3068 2931 2995 2918 2924 2903 2856 2886 2790 2869 2727 2849 2666 2829 
2608 2808 2552 2785 2499 2761 2448 2737 2399 2711 2353 2685 2309 2658 2267 2630 2228 2602 2191 2573 
2157 2544 2124 2514 2094 2484 2066 2453 2041 2422 2017 2391 1996 2359 1977 2328 1960 2296 1945 2265 
1932 2233 1921 2202 1912 2170 1905 2139 1899 2108 1896 2077 1894 2047 1895 2016 1897 1986 1900 1957 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1643 1162 1660 1147 1678 1132 1697 1118 1716 1104 1736 1091 1757 1079 1778 1067 1800 1056 1822 1046 
1844 1036 1867 1026 1890 1018 1914 1009 1938 1002 1962 995 1986 988 2010 983 2035 977 2060 973 
2085 969 2110 965 2135 962 2159 960 2184 958 2209 957 2234 957 2259 957 2284 957 2308 958 
2332 960 2356 962 2380 964 2404 968 2427 971 2450 975 2473 980 2495 985 2517 990 2539 996 
2560 1003 2581 1009 2601 1017 2621 1024 2641 1032 2660 1041 2678 1049 2696 1058 2714 1068 2731 1077 
] dogrey 
3 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4363 1159 4314 1215 4266 1268 4217 1318 4168 1366 4118 1412 4069 1455 4019 1495 3969 1534 3919 1570 
3869 1604 3818 1636 3768 1666 3718 1695 3668 1721 3619 1745 3569 1768 3520 1789 3471 1809 3423 1826 
3375 1842 3327 1857 3280 1870 3233 1882 3187 1892 3141 1901 3096 1909 3052 1915 3008 1920 2965 1923 
2923 1926 2882 1927 2841 1928 2801 1927 2762 1925 2724 1922 2687 1919 2651 1914 2616 1908 2582 1902 
2549 1894 2516 1886 2485 1878 2455 1868 2426 1858 2398 1847 2372 1835 2346 1823 2321 1811 2298 1797 
] dogrey 
3 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1657 3071 1574 3010 1496 2948 1423 2886 1356 2824 1294 2762 1236 2700 1183 2638 1134 2577 1090 2515 
1050 2454 1014 2393 982 2332 954 2272 930 2213 910 2153 893 2095 879 2037 869 1980 862 1923 
858 1868 858 1813 860 1759 865 1706 873 1654 884 1603 897 1553 913 1504 931 1457 952 1410 
975 1365 1000 1321 1027 1278 1056 1236 1087 1196 1120 1157 1155 1119 1191 1083 1228 1048 1268 1014 
1308 982 1350 952 1393 922 1438 895 1483 868 1529 844 1576 820 1624 798 1673 778 1722 759 
] dogrey 
3 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4357 3061 4208 3071 4063 3077 3923 3080 3787 3079 3655 3075 3527 3069 3403 3059 3283 3047 3167 3032 
3054 3015 2945 2996 2840 2974 2739 2950 2641 2925 2547 2897 2456 2868 2369 2837 2285 2804 2205 2770 
2128 2735 2055 2698 1985 2660 1918 2621 1855 2581 1796 2540 1739 2498 1686 2456 1636 2412 1589 2368 
1546 2324 1505 2279 1468 2234 1434 2188 1402 2143 1374 2097 1349 2051 1327 2005 1307 1959 1291 1913 
1277 1867 1266 1821 1257 1776 1251 1731 1248 1687 1248 1643 1249 1599 1254 1556 1260 1514 1269 1472 
] dogrey 
3 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1678 1135 1715 1110 1752 1086 1791 1064 1831 1042 1872 1022 1913 1003 1956 985 1999 969 2043 954 
2087 940 2132 927 2178 916 2223 906 2269 897 2316 889 2362 883 2409 878 2455 874 2502 871 
2548 870 2594 870 2640 871 2686 873 2732 876 2777 881 2821 886 2865 893 2909 901 2951 909 
2994 919 3035 930 3076 942 3115 955 3154 968 3193 983 3230 998 3266 1014 3301 1031 3335 1049 
3368 1068 3400 1087 3431 1107 3461 1127 3489 1148 3516 1170 3542 1192 3567 1215 3590 1238 3613 1262 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4363 1209 4362 1258 4359 1306 4353 1353 4346 1400 4336 1446 4325 1491 4312 1535 4297 1578 4280 1620 
4262 1661 4242 1701 4220 1740 4197 1778 4173 1814 4147 1850 4120 1885 4091 1918 4062 1950 4031 1981 
3999 2011 3967 2040 3933 2067 3899 2094 3863 2119 3827 2143 3791 2165 3754 2186 3716 2207 3678 2225 
3639 2243 3600 2259 3561 2274 3521 2288 3482 2301 3442 2313 3402 2323 3362 2332 3323 2340 3283 2347 
3244 2352 3205 2357 3166 2360 3127 2362 3089 2363 3052 2363 3015 2363 2978 2361 2942 2358 2907 2354 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1585 3021 1518 2970 1454 2917 1394 2864 1338 2810 1285 2754 1237 2699 1192 2642 1152 2585 1115 2527 
1082 2470 1052 2412 1027 2353 1005 2295 986 2237 971 2179 960 2121 952 2064 947 2007 946 1950 
948 1894 954 1838 962 1783 974 1729 988 1676 1006 1624 1026 1573 1049 1522 1075 1473 1103 1425 
1134 1378 1167 1332 1203 1288 1241 1245 1281 1204 1323 1163 1367 1125 1413 1088 1460 1052 1510 1018 
1561 986 1613 955 1667 926 1722 898 1778 873 1835 849 1893 827 1952 806 2012 787 2073 770 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4251 3087 4146 3109 4042 3128 3938 3145 3836 3158 3734 3168 3633 3176 3534 3181 3436 3183 3339 3182 
3244 3179 3150 3174 3058 3166 2968 3155 2880 3143 2794 3128 2710 3111 2628 3091 2548 3070 2470 3047 
2395 3022 2322 2996 2252 2968 2184 2938 2118 2906 2056 2873 1996 2839 1938 2803 1883 2767 1831 2729 
1782 2690 1736 2650 1692 2609 1651 2568 1613 2525 1578 2482 1546 2439 1516 2395 1489 2351 1466 2306 
1445 2261 1426 2216 1411 2170 1398 2125 1388 2080 1381 2035 1377 1990 1375 1945 1376 1900 1379 1856 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
3 Setcolor
5 Thickness
[] 0 setdash
3 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-0.25) 637 3874 0  0.00 [637 3774 227 99] Show
%Latex:\myput{637}{366}{5}{-0.25}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 750 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-0.20) 1087 3874 0  0.00 [1087 3774 227 99] Show
%Latex:\myput{1087}{366}{5}{-0.20}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[1200 3710 1200 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-0.15) 1537 3874 0  0.00 [1537 3774 227 99] Show
%Latex:\myput{1537}{366}{5}{-0.15}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[1650 3710 1650 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-0.10) 1987 3874 0  0.00 [1987 3774 227 99] Show
%Latex:\myput{1987}{366}{5}{-0.10}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[2100 3710 2100 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-0.05) 2437 3874 0  0.00 [2437 3774 227 99] Show
%Latex:\myput{2437}{366}{5}{-0.05}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[2550 3710 2550 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.00) 2903 3874 0  0.00 [2903 3774 194 99] Show
%Latex:\myput{2903}{366}{5}{0.00}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[3000 3710 3000 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.05) 3353 3874 0  0.00 [3353 3774 194 99] Show
%Latex:\myput{3353}{366}{5}{0.05}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[3450 3710 3450 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.10) 3803 3874 0  0.00 [3803 3774 194 99] Show
%Latex:\myput{3803}{366}{5}{0.10}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[3900 3710 3900 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.15) 4253 3874 0  0.00 [4253 3774 194 99] Show
%Latex:\myput{4253}{366}{5}{0.15}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[4350 3710 4350 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.20) 4703 3874 0  0.00 [4703 3774 194 99] Show
%Latex:\myput{4703}{366}{5}{0.20}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[4800 3710 4800 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.25) 5153 3874 0  0.00 [5153 3774 194 99] Show
%Latex:\myput{5153}{366}{5}{0.25}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[5250 3710 5250 3773 
] dogrey 
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 750 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[975 3710 975 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1200 3710 1200 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1425 3710 1425 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1650 3710 1650 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1875 3710 1875 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2100 3710 2100 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2325 3710 2325 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2550 3710 2550 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2775 3710 2775 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3000 3710 3000 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3225 3710 3225 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3450 3710 3450 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3675 3710 3675 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3900 3710 3900 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4125 3710 4125 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4350 3710 4350 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4575 3710 4575 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4800 3710 4800 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[5025 3710 5025 3757 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-0.25) 451 3749 0  0.00 [451 3649 227 99] Show
%Latex:\myput{451}{491}{5}{-0.25}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 690 3710 
] dogrey 
3 Setcolor
32 Setcolor
(-0.20) 451 3431 0  0.00 [451 3331 227 99] Show
%Latex:\myput{451}{809}{5}{-0.20}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3392 690 3392 
] dogrey 
3 Setcolor
32 Setcolor
(-0.15) 451 3113 0  0.00 [451 3013 227 99] Show
%Latex:\myput{451}{1127}{5}{-0.15}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3074 690 3074 
] dogrey 
3 Setcolor
32 Setcolor
(-0.10) 451 2795 0  0.00 [451 2695 227 99] Show
%Latex:\myput{451}{1445}{5}{-0.10}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 2756 690 2756 
] dogrey 
3 Setcolor
32 Setcolor
(-0.05) 451 2477 0  0.00 [451 2377 227 99] Show
%Latex:\myput{451}{1763}{5}{-0.05}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 2438 690 2438 
] dogrey 
3 Setcolor
32 Setcolor
(0.00) 484 2159 0  0.00 [484 2059 194 99] Show
%Latex:\myput{484}{2081}{5}{0.00}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 2120 690 2120 
] dogrey 
3 Setcolor
32 Setcolor
(0.05) 484 1841 0  0.00 [484 1741 194 99] Show
%Latex:\myput{484}{2399}{5}{0.05}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 1802 690 1802 
] dogrey 
3 Setcolor
32 Setcolor
(0.10) 484 1523 0  0.00 [484 1423 194 99] Show
%Latex:\myput{484}{2717}{5}{0.10}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 1484 690 1484 
] dogrey 
3 Setcolor
32 Setcolor
(0.15) 484 1205 0  0.00 [484 1105 194 99] Show
%Latex:\myput{484}{3035}{5}{0.15}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 1166 690 1166 
] dogrey 
3 Setcolor
32 Setcolor
(0.20) 484 887 0  0.00 [484 787 194 99] Show
%Latex:\myput{484}{3353}{5}{0.20}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 848 690 848 
] dogrey 
3 Setcolor
32 Setcolor
(0.25) 484 569 0  0.00 [484 469 194 99] Show
%Latex:\myput{484}{3671}{5}{0.25}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 530 690 530 
] dogrey 
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 705 3710 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3551 705 3551 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3392 705 3392 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3233 705 3233 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3074 705 3074 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2915 705 2915 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2756 705 2756 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2597 705 2597 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2438 705 2438 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2279 705 2279 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2120 705 2120 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1961 705 1961 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1802 705 1802 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1643 705 1643 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1484 705 1484 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1325 705 1325 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1166 705 1166 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1007 705 1007 
] dogrey 
 (drawsegs) 4 [ 3]
[750 848 705 848 
] dogrey 
 (drawsegs) 4 [ 3]
[750 689 705 689 
] dogrey 
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 5250 3710 
] dogrey 
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 750 530 
] dogrey 
3 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
3 Setcolor
[70 20 70 20 ] 0 setdash
3 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
3 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 

