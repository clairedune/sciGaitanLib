%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 220 581 621 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[1.889764 20 div 0 0 1.889764 20 div neg 141 10 div 6212 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
0 Setcolor
5 Thickness
750 530 4500 3180 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
0 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 530 750 3710 5250 3710 5250 530 750 530 
] dogrey 
33 Setcolor
/absolu true def
0 Setcolor
[] 0 setdash
0 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[750 3710 750 530 
] dogrey 
 (drawsegs) 4 [ 0]
[1200 3710 1200 530 
] dogrey 
 (drawsegs) 4 [ 0]
[1650 3710 1650 530 
] dogrey 
 (drawsegs) 4 [ 0]
[2100 3710 2100 530 
] dogrey 
 (drawsegs) 4 [ 0]
[2550 3710 2550 530 
] dogrey 
 (drawsegs) 4 [ 0]
[3000 3710 3000 530 
] dogrey 
 (drawsegs) 4 [ 0]
[3450 3710 3450 530 
] dogrey 
 (drawsegs) 4 [ 0]
[3900 3710 3900 530 
] dogrey 
 (drawsegs) 4 [ 0]
[4350 3710 4350 530 
] dogrey 
 (drawsegs) 4 [ 0]
[4800 3710 4800 530 
] dogrey 
 (drawsegs) 4 [ 0]
[5250 3710 5250 530 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[750 3710 5250 3710 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3392 5250 3392 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3074 5250 3074 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2756 5250 2756 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2438 5250 2438 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2120 5250 2120 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1802 5250 1802 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1484 5250 1484 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1166 5250 1166 
] dogrey 
 (drawsegs) 4 [ 0]
[750 848 5250 848 
] dogrey 
 (drawsegs) 4 [ 0]
[750 530 5250 530 
] dogrey 
[] 0 setdash
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[1605 1134 90 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4305 1134 90 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[1605 3042 90 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4305 3042 90 64 0 23040 
] dogrey 
0 Setcolor
4 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1700 1151 1749 1137 1798 1124 1847 1113 1896 1102 1945 1093 1993 1085 2041 1078 2088 1072 2135 1067 
2182 1063 2228 1060 2274 1059 2319 1058 2364 1058 2408 1059 2452 1060 2495 1063 2538 1067 2580 1071 
2621 1077 2662 1083 2702 1090 2741 1097 2779 1106 2817 1115 2854 1125 2890 1135 2925 1146 2959 1158 
2993 1171 3025 1184 3057 1197 3088 1211 3117 1226 3146 1241 3174 1256 3201 1272 3227 1289 3252 1306 
3276 1323 3299 1340 3321 1358 3342 1376 3362 1395 3381 1413 3399 1432 3416 1451 3431 1470 3446 1490 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4336 1225 4320 1283 4302 1338 4284 1391 4264 1442 4243 1491 4221 1538 4198 1583 4174 1627 4149 1669 
4123 1709 4096 1748 4068 1785 4040 1820 4011 1854 3982 1887 3952 1918 3922 1947 3891 1975 3859 2002 
3827 2028 3795 2052 3763 2075 3731 2096 3698 2117 3665 2136 3632 2154 3599 2171 3566 2186 3533 2201 
3500 2214 3467 2227 3434 2238 3401 2248 3369 2257 3337 2265 3305 2273 3274 2279 3242 2284 3211 2288 
3181 2292 3151 2295 3121 2296 3092 2297 3064 2297 3036 2297 3008 2296 2982 2293 2955 2291 2930 2287 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1594 3014 1543 2953 1496 2894 1454 2834 1416 2776 1382 2717 1352 2660 1326 2602 1303 2546 1284 2490 
1268 2435 1256 2380 1247 2327 1240 2274 1237 2222 1237 2171 1239 2120 1245 2071 1252 2023 1263 1975 
1275 1929 1290 1884 1307 1840 1327 1797 1348 1755 1372 1714 1397 1675 1424 1636 1453 1599 1484 1564 
1516 1529 1549 1496 1584 1464 1620 1433 1658 1404 1697 1376 1736 1349 1777 1324 1819 1300 1861 1277 
1905 1256 1949 1236 1993 1217 2039 1200 2084 1184 2131 1170 2177 1156 2224 1145 2271 1134 2318 1125 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4230 3088 4114 3099 4000 3107 3891 3112 3784 3115 3680 3115 3580 3112 3483 3108 3389 3101 3297 3092 
3209 3080 3124 3067 3041 3053 2961 3036 2885 3018 2810 2999 2739 2977 2671 2955 2605 2931 2542 2906 
2482 2880 2424 2853 2369 2825 2317 2796 2267 2766 2220 2735 2175 2704 2134 2672 2094 2639 2057 2606 
2023 2573 1991 2539 1961 2504 1934 2470 1910 2435 1887 2400 1867 2365 1850 2330 1834 2295 1821 2260 
1810 2225 1801 2190 1794 2155 1789 2121 1786 2087 1786 2053 1787 2020 1790 1987 1795 1954 1802 1922 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1683 1166 1732 1151 1781 1138 1829 1127 1877 1116 1925 1106 1973 1098 2020 1090 2067 1084 2114 1079 
2160 1074 2206 1071 2251 1069 2296 1067 2341 1067 2385 1067 2428 1069 2471 1071 2513 1074 2555 1078 
2596 1083 2636 1088 2676 1095 2715 1102 2753 1110 2791 1118 2827 1127 2863 1137 2899 1148 2933 1159 
2966 1171 2999 1183 3031 1196 3062 1210 3092 1224 3121 1239 3149 1254 3176 1269 3202 1285 3227 1301 
3252 1318 3275 1335 3297 1352 3319 1370 3339 1388 3358 1406 3377 1424 3394 1443 3410 1462 3426 1481 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4384 1167 4369 1228 4352 1286 4333 1342 4314 1395 4293 1447 4271 1497 4248 1545 4224 1591 4199 1635 
4173 1677 4146 1718 4119 1757 4090 1795 4061 1830 4031 1865 4001 1898 3970 1929 3938 1959 3907 1987 
3874 2015 3842 2040 3809 2065 3775 2088 3742 2109 3708 2130 3674 2149 3641 2167 3607 2184 3573 2200 
3539 2214 3505 2228 3471 2240 3438 2251 3404 2261 3371 2270 3338 2278 3306 2285 3273 2291 3241 2296 
3210 2301 3179 2304 3148 2306 3118 2308 3088 2309 3059 2309 3031 2308 3003 2306 2975 2304 2949 2301 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1681 3074 1624 3014 1572 2955 1525 2896 1482 2838 1443 2780 1408 2722 1377 2665 1350 2608 1327 2552 
1307 2497 1290 2442 1277 2388 1267 2335 1260 2282 1256 2231 1255 2180 1256 2130 1261 2081 1268 2033 
1277 1986 1289 1940 1303 1895 1320 1851 1338 1808 1359 1766 1381 1726 1406 1686 1432 1648 1460 1611 
1490 1575 1521 1541 1554 1508 1588 1476 1624 1445 1661 1415 1699 1387 1738 1361 1778 1335 1819 1311 
1861 1288 1904 1267 1947 1247 1991 1228 2036 1210 2081 1194 2127 1180 2173 1166 2219 1154 2265 1143 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4381 3076 4261 3091 4143 3102 4029 3111 3918 3117 3811 3120 3707 3121 3605 3119 3507 3115 3412 3108 
3320 3100 3231 3089 3144 3077 3061 3062 2980 3046 2903 3028 2828 3009 2755 2988 2686 2966 2619 2943 
2556 2918 2494 2892 2436 2865 2380 2837 2327 2808 2276 2778 2228 2748 2183 2716 2140 2684 2100 2652 
2062 2619 2027 2585 1995 2551 1964 2517 1937 2482 1911 2447 1888 2412 1867 2377 1849 2342 1833 2306 
1819 2271 1807 2236 1798 2201 1790 2166 1785 2131 1782 2097 1781 2063 1781 2029 1784 1996 1788 1963 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-0.25) 637 3874 0  0.00 [637 3774 227 99] Show
%Latex:\myput{637}{366}{5}{-0.25}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 750 3773 
] dogrey 
0 Setcolor
32 Setcolor
(-0.20) 1087 3874 0  0.00 [1087 3774 227 99] Show
%Latex:\myput{1087}{366}{5}{-0.20}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[1200 3710 1200 3773 
] dogrey 
0 Setcolor
32 Setcolor
(-0.15) 1537 3874 0  0.00 [1537 3774 227 99] Show
%Latex:\myput{1537}{366}{5}{-0.15}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[1650 3710 1650 3773 
] dogrey 
0 Setcolor
32 Setcolor
(-0.10) 1987 3874 0  0.00 [1987 3774 227 99] Show
%Latex:\myput{1987}{366}{5}{-0.10}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[2100 3710 2100 3773 
] dogrey 
0 Setcolor
32 Setcolor
(-0.05) 2437 3874 0  0.00 [2437 3774 227 99] Show
%Latex:\myput{2437}{366}{5}{-0.05}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[2550 3710 2550 3773 
] dogrey 
0 Setcolor
32 Setcolor
(0.00) 2903 3874 0  0.00 [2903 3774 194 99] Show
%Latex:\myput{2903}{366}{5}{0.00}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[3000 3710 3000 3773 
] dogrey 
0 Setcolor
32 Setcolor
(0.05) 3353 3874 0  0.00 [3353 3774 194 99] Show
%Latex:\myput{3353}{366}{5}{0.05}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[3450 3710 3450 3773 
] dogrey 
0 Setcolor
32 Setcolor
(0.10) 3803 3874 0  0.00 [3803 3774 194 99] Show
%Latex:\myput{3803}{366}{5}{0.10}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[3900 3710 3900 3773 
] dogrey 
0 Setcolor
32 Setcolor
(0.15) 4253 3874 0  0.00 [4253 3774 194 99] Show
%Latex:\myput{4253}{366}{5}{0.15}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[4350 3710 4350 3773 
] dogrey 
0 Setcolor
32 Setcolor
(0.20) 4703 3874 0  0.00 [4703 3774 194 99] Show
%Latex:\myput{4703}{366}{5}{0.20}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[4800 3710 4800 3773 
] dogrey 
0 Setcolor
32 Setcolor
(0.25) 5153 3874 0  0.00 [5153 3774 194 99] Show
%Latex:\myput{5153}{366}{5}{0.25}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[5250 3710 5250 3773 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 750 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[975 3710 975 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[1200 3710 1200 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[1425 3710 1425 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[1650 3710 1650 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[1875 3710 1875 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[2100 3710 2100 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[2325 3710 2325 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[2550 3710 2550 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[2775 3710 2775 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[3000 3710 3000 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[3225 3710 3225 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[3450 3710 3450 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[3675 3710 3675 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[3900 3710 3900 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[4125 3710 4125 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[4350 3710 4350 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[4575 3710 4575 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[4800 3710 4800 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[5025 3710 5025 3757 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-0.25) 451 3749 0  0.00 [451 3649 227 99] Show
%Latex:\myput{451}{491}{5}{-0.25}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 690 3710 
] dogrey 
0 Setcolor
32 Setcolor
(-0.20) 451 3431 0  0.00 [451 3331 227 99] Show
%Latex:\myput{451}{809}{5}{-0.20}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3392 690 3392 
] dogrey 
0 Setcolor
32 Setcolor
(-0.15) 451 3113 0  0.00 [451 3013 227 99] Show
%Latex:\myput{451}{1127}{5}{-0.15}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3074 690 3074 
] dogrey 
0 Setcolor
32 Setcolor
(-0.10) 451 2795 0  0.00 [451 2695 227 99] Show
%Latex:\myput{451}{1445}{5}{-0.10}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2756 690 2756 
] dogrey 
0 Setcolor
32 Setcolor
(-0.05) 451 2477 0  0.00 [451 2377 227 99] Show
%Latex:\myput{451}{1763}{5}{-0.05}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2438 690 2438 
] dogrey 
0 Setcolor
32 Setcolor
(0.00) 484 2159 0  0.00 [484 2059 194 99] Show
%Latex:\myput{484}{2081}{5}{0.00}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2120 690 2120 
] dogrey 
0 Setcolor
32 Setcolor
(0.05) 484 1841 0  0.00 [484 1741 194 99] Show
%Latex:\myput{484}{2399}{5}{0.05}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 1802 690 1802 
] dogrey 
0 Setcolor
32 Setcolor
(0.10) 484 1523 0  0.00 [484 1423 194 99] Show
%Latex:\myput{484}{2717}{5}{0.10}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 1484 690 1484 
] dogrey 
0 Setcolor
32 Setcolor
(0.15) 484 1205 0  0.00 [484 1105 194 99] Show
%Latex:\myput{484}{3035}{5}{0.15}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 1166 690 1166 
] dogrey 
0 Setcolor
32 Setcolor
(0.20) 484 887 0  0.00 [484 787 194 99] Show
%Latex:\myput{484}{3353}{5}{0.20}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 848 690 848 
] dogrey 
0 Setcolor
32 Setcolor
(0.25) 484 569 0  0.00 [484 469 194 99] Show
%Latex:\myput{484}{3671}{5}{0.25}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 530 690 530 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 705 3710 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3551 705 3551 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3392 705 3392 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3233 705 3233 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3074 705 3074 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2915 705 2915 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2756 705 2756 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2597 705 2597 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2438 705 2438 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2279 705 2279 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2120 705 2120 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1961 705 1961 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1802 705 1802 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1643 705 1643 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1484 705 1484 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1325 705 1325 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1166 705 1166 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1007 705 1007 
] dogrey 
 (drawsegs) 4 [ 0]
[750 848 705 848 
] dogrey 
 (drawsegs) 4 [ 0]
[750 689 705 689 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 5250 3710 
] dogrey 
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 750 530 
] dogrey 
0 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
0 Setcolor
[] 0 setdash
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 

