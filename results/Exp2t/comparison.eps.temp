%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 220 581 621 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[1.889764 20 div 0 0 1.889764 20 div neg 141 10 div 6212 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
3 Setcolor
5 Thickness
750 530 4500 3180 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
3 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 530 750 3710 5250 3710 5250 530 750 530 
] dogrey 
33 Setcolor
/absolu true def
3 Setcolor
[] 0 setdash
3 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3710 750 530 
] dogrey 
 (drawsegs) 4 [ 3]
[1200 3710 1200 530 
] dogrey 
 (drawsegs) 4 [ 3]
[1650 3710 1650 530 
] dogrey 
 (drawsegs) 4 [ 3]
[2100 3710 2100 530 
] dogrey 
 (drawsegs) 4 [ 3]
[2550 3710 2550 530 
] dogrey 
 (drawsegs) 4 [ 3]
[3000 3710 3000 530 
] dogrey 
 (drawsegs) 4 [ 3]
[3450 3710 3450 530 
] dogrey 
 (drawsegs) 4 [ 3]
[3900 3710 3900 530 
] dogrey 
 (drawsegs) 4 [ 3]
[4350 3710 4350 530 
] dogrey 
 (drawsegs) 4 [ 3]
[4800 3710 4800 530 
] dogrey 
 (drawsegs) 4 [ 3]
[5250 3710 5250 530 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3710 5250 3710 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3392 5250 3392 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3074 5250 3074 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2756 5250 2756 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2438 5250 2438 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2120 5250 2120 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1802 5250 1802 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1484 5250 1484 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1166 5250 1166 
] dogrey 
 (drawsegs) 4 [ 3]
[750 848 5250 848 
] dogrey 
 (drawsegs) 4 [ 3]
[750 530 5250 530 
] dogrey 
[] 0 setdash
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[1605 1134 90 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4305 1134 90 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[1605 3042 90 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4305 3042 90 64 0 23040 
] dogrey 
0 Setcolor
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1700 1151 1749 1137 1798 1124 1847 1113 1896 1102 1945 1093 1993 1085 2041 1078 2088 1072 2135 1067 
2182 1063 2228 1060 2274 1059 2319 1058 2364 1058 2408 1059 2452 1060 2495 1063 2538 1067 2580 1071 
2621 1077 2662 1083 2702 1090 2741 1097 2779 1106 2817 1115 2854 1125 2890 1135 2925 1146 2959 1158 
2993 1171 3025 1184 3057 1197 3088 1211 3117 1226 3146 1241 3174 1256 3201 1272 3227 1289 3252 1306 
3276 1323 3299 1340 3321 1358 3342 1376 3362 1395 3381 1413 3399 1432 3416 1451 3431 1470 3446 1490 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4336 1225 4320 1283 4302 1338 4284 1391 4264 1442 4243 1491 4221 1538 4198 1583 4174 1627 4149 1669 
4123 1709 4096 1748 4068 1785 4040 1820 4011 1854 3982 1887 3952 1918 3922 1947 3891 1975 3859 2002 
3827 2028 3795 2052 3763 2075 3731 2096 3698 2117 3665 2136 3632 2154 3599 2171 3566 2186 3533 2201 
3500 2214 3467 2227 3434 2238 3401 2248 3369 2257 3337 2265 3305 2273 3274 2279 3242 2284 3211 2288 
3181 2292 3151 2295 3121 2296 3092 2297 3064 2297 3036 2297 3008 2296 2982 2293 2955 2291 2930 2287 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1594 3014 1543 2953 1496 2894 1454 2834 1416 2776 1382 2717 1352 2660 1326 2602 1303 2546 1284 2490 
1268 2435 1256 2380 1247 2327 1240 2274 1237 2222 1237 2171 1239 2120 1245 2071 1252 2023 1263 1975 
1275 1929 1290 1884 1307 1840 1327 1797 1348 1755 1372 1714 1397 1675 1424 1636 1453 1599 1484 1564 
1516 1529 1549 1496 1584 1464 1620 1433 1658 1404 1697 1376 1736 1349 1777 1324 1819 1300 1861 1277 
1905 1256 1949 1236 1993 1217 2039 1200 2084 1184 2131 1170 2177 1156 2224 1145 2271 1134 2318 1125 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4230 3088 4114 3099 4000 3107 3891 3112 3784 3115 3680 3115 3580 3112 3483 3108 3389 3101 3297 3092 
3209 3080 3124 3067 3041 3053 2961 3036 2885 3018 2810 2999 2739 2977 2671 2955 2605 2931 2542 2906 
2482 2880 2424 2853 2369 2825 2317 2796 2267 2766 2220 2735 2175 2704 2134 2672 2094 2639 2057 2606 
2023 2573 1991 2539 1961 2504 1934 2470 1910 2435 1887 2400 1867 2365 1850 2330 1834 2295 1821 2260 
1810 2225 1801 2190 1794 2155 1789 2121 1786 2087 1786 2053 1787 2020 1790 1987 1795 1954 1802 1922 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[2026 1595 2044 1580 2062 1566 2080 1552 2100 1538 2120 1525 2140 1513 2161 1501 2183 1490 2205 1479 
2227 1469 2250 1460 2274 1451 2297 1443 2321 1435 2345 1428 2369 1422 2394 1416 2418 1411 2443 1406 
2468 1402 2493 1399 2518 1396 2543 1394 2568 1392 2593 1391 2618 1390 2642 1390 2667 1391 2691 1392 
2716 1393 2740 1395 2763 1398 2787 1401 2810 1405 2833 1409 2856 1414 2879 1419 2901 1424 2922 1430 
2943 1436 2964 1443 2985 1450 3005 1458 3024 1466 3043 1474 3062 1483 3080 1492 3097 1501 3114 1511 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4662 1670 4614 1726 4566 1779 4517 1829 4468 1877 4418 1923 4368 1966 4319 2006 4268 2045 4218 2081 
4168 2115 4118 2147 4068 2177 4018 2206 3968 2232 3918 2256 3869 2279 3820 2300 3771 2320 3722 2337 
3674 2353 3627 2368 3579 2381 3533 2393 3486 2403 3441 2412 3396 2420 3352 2426 3308 2431 3265 2434 
3223 2437 3181 2438 3141 2439 3101 2438 3062 2436 3024 2433 2987 2430 2951 2425 2916 2419 2882 2413 
2848 2405 2816 2397 2785 2389 2755 2379 2726 2369 2698 2358 2671 2346 2646 2334 2621 2322 2598 2308 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1921 3458 1838 3397 1760 3335 1687 3273 1620 3211 1557 3149 1500 3087 1447 3025 1398 2964 1354 2902 
1314 2841 1278 2780 1246 2719 1218 2659 1194 2600 1173 2540 1156 2482 1143 2424 1133 2367 1126 2310 
1122 2255 1121 2200 1124 2146 1129 2093 1137 2041 1148 1990 1161 1940 1177 1891 1195 1844 1216 1797 
1239 1752 1264 1708 1291 1665 1320 1623 1351 1583 1384 1544 1418 1506 1455 1470 1492 1435 1532 1401 
1572 1369 1614 1339 1657 1309 1701 1282 1747 1255 1793 1231 1840 1207 1888 1185 1937 1165 1986 1146 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4557 3533 4408 3542 4264 3548 4124 3551 3988 3550 3856 3547 3728 3540 3604 3531 3483 3518 3367 3504 
3255 3487 3146 3467 3041 3445 2939 3422 2841 3396 2747 3368 2656 3339 2569 3308 2485 3275 2405 3241 
2328 3206 2255 3169 2185 3131 2119 3092 2056 3052 1996 3011 1939 2970 1886 2927 1836 2884 1789 2840 
1746 2795 1705 2751 1668 2705 1634 2660 1603 2614 1574 2568 1549 2522 1527 2476 1507 2430 1491 2384 
1477 2338 1466 2293 1458 2248 1452 2203 1449 2158 1448 2114 1450 2070 1454 2028 1461 1985 1469 1943 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1732 1152 1781 1139 1829 1128 1877 1117 1925 1107 1973 1099 2020 1091 2067 1085 2113 1079 2160 1075 
2205 1072 2251 1069 2296 1068 2340 1067 2384 1068 2427 1069 2470 1071 2512 1074 2554 1078 2595 1083 
2635 1089 2675 1095 2714 1102 2752 1110 2790 1118 2827 1128 2863 1138 2898 1148 2932 1159 2966 1171 
2998 1184 3030 1196 3061 1210 3091 1224 3120 1239 3148 1254 3175 1269 3202 1285 3227 1301 3251 1318 
3274 1335 3297 1352 3318 1370 3338 1388 3358 1406 3376 1424 3394 1443 3410 1462 3425 1480 3440 1500 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4368 1227 4351 1285 4333 1341 4313 1395 4293 1446 4271 1496 4248 1544 4224 1590 4199 1634 4173 1677 
4146 1717 4119 1756 4090 1794 4061 1830 4031 1864 4001 1897 3970 1928 3939 1958 3907 1987 3875 2014 
3842 2040 3809 2064 3776 2087 3742 2109 3709 2129 3675 2149 3641 2167 3607 2184 3573 2199 3539 2214 
3505 2227 3472 2239 3438 2251 3405 2261 3372 2270 3339 2278 3306 2285 3274 2291 3242 2296 3211 2300 
3179 2304 3149 2306 3119 2308 3089 2309 3060 2308 3031 2308 3003 2306 2976 2304 2949 2301 2923 2297 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1627 3015 1575 2956 1527 2897 1484 2838 1445 2780 1410 2723 1379 2666 1352 2609 1328 2553 1308 2498 
1292 2443 1278 2389 1268 2336 1261 2284 1257 2232 1256 2181 1257 2131 1262 2082 1268 2034 1278 1987 
1290 1941 1304 1896 1320 1852 1339 1809 1359 1768 1382 1727 1406 1688 1432 1649 1460 1612 1490 1577 
1521 1542 1554 1509 1588 1477 1624 1446 1661 1416 1698 1388 1738 1361 1778 1336 1819 1312 1860 1289 
1903 1268 1947 1247 1991 1229 2035 1211 2080 1195 2126 1180 2172 1167 2218 1155 2265 1144 2311 1135 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4262 3090 4145 3101 4031 3110 3920 3116 3813 3120 3709 3120 3607 3118 3509 3114 3414 3108 3322 3099 
3233 3089 3146 3076 3063 3062 2982 3046 2904 3028 2829 3009 2757 2988 2688 2966 2621 2943 2557 2918 
2496 2892 2437 2865 2382 2837 2328 2808 2278 2779 2230 2748 2185 2717 2142 2685 2101 2652 2064 2619 
2029 2586 1996 2552 1966 2517 1938 2483 1912 2448 1889 2413 1868 2378 1850 2342 1834 2307 1820 2272 
1808 2237 1798 2202 1791 2167 1786 2132 1782 2098 1781 2064 1782 2030 1784 1997 1789 1964 1795 1932 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1700 1151 1717 1136 1735 1121 1754 1107 1773 1094 1793 1081 1813 1068 1835 1057 1856 1045 1878 1035 
1901 1025 1923 1015 1947 1007 1970 998 1994 991 2018 984 2042 977 2067 972 2091 966 2116 962 
2141 958 2166 954 2191 951 2216 949 2241 947 2266 946 2291 946 2315 946 2340 946 2364 947 
2389 949 2413 951 2437 954 2460 957 2484 960 2507 964 2529 969 2552 974 2574 980 2595 985 
2617 992 2637 999 2658 1006 2678 1013 2697 1021 2716 1030 2735 1038 2753 1047 2770 1057 2787 1066 
] dogrey 
3 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4336 1225 4287 1281 4239 1334 4190 1385 4141 1433 4091 1478 4042 1521 3992 1562 3942 1600 3892 1636 
3841 1671 3791 1703 3741 1733 3691 1761 3641 1787 3592 1812 3542 1835 3493 1856 3444 1875 3396 1893 
3347 1909 3300 1924 3253 1937 3206 1948 3160 1959 3114 1967 3069 1975 3025 1981 2981 1986 2938 1990 
2896 1992 2855 1994 2814 1994 2774 1993 2735 1992 2697 1989 2660 1985 2624 1980 2589 1975 2555 1968 
2522 1961 2489 1953 2458 1944 2428 1934 2399 1924 2371 1913 2345 1902 2319 1890 2294 1877 2271 1864 
] dogrey 
3 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1594 3014 1511 2952 1433 2891 1360 2829 1293 2767 1231 2705 1173 2643 1120 2581 1071 2519 1027 2458 
987 2396 951 2335 919 2275 891 2215 867 2155 846 2096 830 2037 816 1979 806 1922 799 1866 
795 1810 795 1756 797 1702 802 1649 810 1597 821 1546 834 1496 850 1447 868 1399 889 1353 
912 1307 937 1263 964 1220 993 1179 1024 1138 1057 1099 1092 1061 1128 1025 1165 990 1205 957 
1245 925 1287 894 1330 865 1375 837 1420 811 1466 786 1513 763 1561 741 1610 720 1659 702 
] dogrey 
3 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4230 3088 4081 3098 3937 3104 3797 3107 3661 3106 3529 3102 3401 3096 3277 3086 3157 3074 3040 3059 
2928 3042 2819 3023 2714 3001 2612 2977 2514 2951 2420 2924 2329 2894 2242 2863 2159 2831 2078 2797 
2002 2761 1928 2725 1858 2687 1792 2648 1729 2608 1669 2567 1613 2525 1559 2482 1509 2439 1463 2395 
1419 2351 1379 2306 1341 2261 1307 2215 1276 2170 1248 2124 1222 2078 1200 2031 1181 1985 1164 1939 
1150 1894 1139 1848 1131 1803 1125 1758 1122 1714 1121 1669 1123 1626 1127 1583 1134 1541 1143 1499 
] dogrey 
3 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1685 1140 1721 1115 1758 1091 1797 1069 1836 1047 1877 1027 1918 1008 1960 990 2003 974 2046 959 
2090 945 2135 932 2180 921 2225 911 2271 902 2317 895 2363 888 2409 883 2456 879 2502 877 
2548 875 2594 875 2640 876 2685 878 2730 881 2775 885 2819 891 2863 898 2906 905 2949 914 
2991 924 3032 934 3072 946 3112 958 3151 972 3189 986 3226 1002 3262 1018 3297 1035 3331 1052 
3363 1071 3395 1090 3426 1109 3455 1130 3484 1151 3511 1172 3537 1194 3561 1217 3585 1240 3607 1263 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4351 1215 4349 1264 4346 1312 4340 1359 4333 1405 4323 1450 4312 1495 4298 1538 4283 1581 4267 1622 
4248 1663 4228 1703 4207 1741 4184 1779 4160 1815 4134 1850 4107 1885 4079 1918 4049 1950 4019 1980 
3987 2010 3955 2038 3922 2065 3887 2091 3852 2116 3817 2140 3780 2162 3743 2183 3706 2203 3668 2221 
3630 2239 3591 2255 3552 2270 3513 2284 3474 2296 3435 2307 3395 2318 3356 2326 3316 2334 3277 2341 
3238 2346 3200 2351 3161 2354 3123 2356 3085 2357 3048 2357 3011 2356 2975 2354 2940 2351 2905 2347 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1578 3024 1510 2972 1446 2920 1386 2866 1330 2811 1278 2756 1229 2700 1185 2643 1144 2586 1107 2528 
1074 2470 1045 2412 1019 2353 997 2295 979 2237 964 2178 953 2120 945 2063 941 2005 940 1949 
942 1892 948 1837 956 1782 968 1727 983 1674 1000 1622 1021 1570 1044 1520 1070 1470 1098 1422 
1129 1375 1163 1329 1199 1285 1237 1242 1277 1200 1319 1160 1363 1121 1410 1084 1457 1049 1507 1015 
1558 982 1611 951 1665 922 1720 895 1776 869 1834 845 1892 823 1952 802 2012 784 2072 767 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4244 3099 4139 3121 4034 3140 3930 3156 3826 3169 3724 3179 3623 3186 3523 3191 3425 3192 3328 3191 
3232 3188 3138 3182 3046 3174 2956 3163 2868 3150 2781 3134 2697 3117 2615 3097 2535 3076 2457 3052 
2381 3027 2309 3000 2238 2971 2170 2941 2105 2909 2042 2876 1982 2841 1924 2805 1870 2768 1818 2730 
1769 2690 1722 2650 1679 2609 1638 2567 1600 2524 1565 2481 1533 2437 1504 2393 1477 2348 1454 2303 
1433 2258 1415 2212 1400 2167 1388 2121 1378 2076 1371 2030 1367 1985 1365 1940 1367 1895 1370 1851 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
3 Setcolor
5 Thickness
[] 0 setdash
3 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-0.25) 637 3874 0  0.00 [637 3774 227 99] Show
%Latex:\myput{637}{366}{5}{-0.25}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 750 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-0.20) 1087 3874 0  0.00 [1087 3774 227 99] Show
%Latex:\myput{1087}{366}{5}{-0.20}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[1200 3710 1200 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-0.15) 1537 3874 0  0.00 [1537 3774 227 99] Show
%Latex:\myput{1537}{366}{5}{-0.15}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[1650 3710 1650 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-0.10) 1987 3874 0  0.00 [1987 3774 227 99] Show
%Latex:\myput{1987}{366}{5}{-0.10}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[2100 3710 2100 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-0.05) 2437 3874 0  0.00 [2437 3774 227 99] Show
%Latex:\myput{2437}{366}{5}{-0.05}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[2550 3710 2550 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.00) 2903 3874 0  0.00 [2903 3774 194 99] Show
%Latex:\myput{2903}{366}{5}{0.00}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[3000 3710 3000 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.05) 3353 3874 0  0.00 [3353 3774 194 99] Show
%Latex:\myput{3353}{366}{5}{0.05}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[3450 3710 3450 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.10) 3803 3874 0  0.00 [3803 3774 194 99] Show
%Latex:\myput{3803}{366}{5}{0.10}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[3900 3710 3900 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.15) 4253 3874 0  0.00 [4253 3774 194 99] Show
%Latex:\myput{4253}{366}{5}{0.15}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[4350 3710 4350 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.20) 4703 3874 0  0.00 [4703 3774 194 99] Show
%Latex:\myput{4703}{366}{5}{0.20}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[4800 3710 4800 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.25) 5153 3874 0  0.00 [5153 3774 194 99] Show
%Latex:\myput{5153}{366}{5}{0.25}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[5250 3710 5250 3773 
] dogrey 
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 750 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[975 3710 975 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1200 3710 1200 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1425 3710 1425 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1650 3710 1650 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1875 3710 1875 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2100 3710 2100 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2325 3710 2325 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2550 3710 2550 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2775 3710 2775 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3000 3710 3000 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3225 3710 3225 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3450 3710 3450 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3675 3710 3675 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3900 3710 3900 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4125 3710 4125 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4350 3710 4350 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4575 3710 4575 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4800 3710 4800 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[5025 3710 5025 3757 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-0.25) 451 3749 0  0.00 [451 3649 227 99] Show
%Latex:\myput{451}{491}{5}{-0.25}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 690 3710 
] dogrey 
3 Setcolor
32 Setcolor
(-0.20) 451 3431 0  0.00 [451 3331 227 99] Show
%Latex:\myput{451}{809}{5}{-0.20}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3392 690 3392 
] dogrey 
3 Setcolor
32 Setcolor
(-0.15) 451 3113 0  0.00 [451 3013 227 99] Show
%Latex:\myput{451}{1127}{5}{-0.15}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3074 690 3074 
] dogrey 
3 Setcolor
32 Setcolor
(-0.10) 451 2795 0  0.00 [451 2695 227 99] Show
%Latex:\myput{451}{1445}{5}{-0.10}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 2756 690 2756 
] dogrey 
3 Setcolor
32 Setcolor
(-0.05) 451 2477 0  0.00 [451 2377 227 99] Show
%Latex:\myput{451}{1763}{5}{-0.05}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 2438 690 2438 
] dogrey 
3 Setcolor
32 Setcolor
(0.00) 484 2159 0  0.00 [484 2059 194 99] Show
%Latex:\myput{484}{2081}{5}{0.00}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 2120 690 2120 
] dogrey 
3 Setcolor
32 Setcolor
(0.05) 484 1841 0  0.00 [484 1741 194 99] Show
%Latex:\myput{484}{2399}{5}{0.05}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 1802 690 1802 
] dogrey 
3 Setcolor
32 Setcolor
(0.10) 484 1523 0  0.00 [484 1423 194 99] Show
%Latex:\myput{484}{2717}{5}{0.10}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 1484 690 1484 
] dogrey 
3 Setcolor
32 Setcolor
(0.15) 484 1205 0  0.00 [484 1105 194 99] Show
%Latex:\myput{484}{3035}{5}{0.15}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 1166 690 1166 
] dogrey 
3 Setcolor
32 Setcolor
(0.20) 484 887 0  0.00 [484 787 194 99] Show
%Latex:\myput{484}{3353}{5}{0.20}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 848 690 848 
] dogrey 
3 Setcolor
32 Setcolor
(0.25) 484 569 0  0.00 [484 469 194 99] Show
%Latex:\myput{484}{3671}{5}{0.25}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 530 690 530 
] dogrey 
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 705 3710 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3551 705 3551 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3392 705 3392 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3233 705 3233 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3074 705 3074 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2915 705 2915 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2756 705 2756 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2597 705 2597 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2438 705 2438 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2279 705 2279 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2120 705 2120 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1961 705 1961 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1802 705 1802 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1643 705 1643 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1484 705 1484 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1325 705 1325 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1166 705 1166 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1007 705 1007 
] dogrey 
 (drawsegs) 4 [ 3]
[750 848 705 848 
] dogrey 
 (drawsegs) 4 [ 3]
[750 689 705 689 
] dogrey 
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 5250 3710 
] dogrey 
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 750 530 
] dogrey 
3 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
3 Setcolor
[70 20 70 20 ] 0 setdash
3 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
3 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 

