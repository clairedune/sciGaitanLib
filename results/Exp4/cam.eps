%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 220 581 621 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[1.889764 20 div 0 0 1.889764 20 div neg 141 10 div 6212 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
33 Setcolor
 (drawpoly) 14 [ -34]
[5250 1208 4125 530 750 2563 750 3032 1875 3710 5250 1677 5250 1208 
] dogrey 
33 Setcolor
/absolu true def
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
 (drawsegs) 12 [ 3]
[4125 1000 750 3032 4125 1000 5250 1677 4125 1000 4125 530 
] dogrey 
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
[] 0 setdash
0 Setcolor
/closeflag false def
 (drawpoly) 14 [ 0]
[5250 1208 4125 530 750 2563 750 3032 1875 3710 5250 1677 5250 1208 
] dogrey 
0 Setcolor
/absolu true def
[] 0 setdash
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.20) 369 2978 0  0.00 [369 2878 227 99] Show
%Latex:\myput{369}{1262}{5}{-0.20}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3032 673 2986 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3032 711 3009 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2954 711 2931 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2876 711 2853 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2798 711 2775 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2719 711 2696 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2641 711 2618 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.50) 402 2509 0  0.00 [402 2409 194 99] Show
%Latex:\myput{402}{1731}{5}{0.50}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2563 673 2517 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Z) 300 2807 0 270.00 [300 2707 61 99] Show
%Latex:\myput{300}{1433}{5}{Z}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-2.5) 5404 1857 0  0.00 [5404 1757 172 99] Show
%Latex:\myput{5404}{2383}{5}{-2.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[5250 1677 5327 1723 
] dogrey 
 (drawsegs) 4 [ 0]
[5063 1790 5101 1813 
] dogrey 
 (drawsegs) 4 [ 0]
[4875 1903 4913 1926 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-2.0) 4842 2196 0  0.00 [4842 2096 172 99] Show
%Latex:\myput{4842}{2044}{5}{-2.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[4688 2016 4765 2062 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[4688 2016 3563 1338 
] dogrey 
 (drawsegs) 4 [ 0]
[3563 1338 3563 869 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[4500 2129 4538 2152 
] dogrey 
 (drawsegs) 4 [ 0]
[4313 2242 4351 2265 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.5) 4279 2535 0  0.00 [4279 2435 172 99] Show
%Latex:\myput{4279}{1705}{5}{-1.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[4125 2355 4202 2401 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[4125 2355 3000 1677 
] dogrey 
 (drawsegs) 4 [ 0]
[3000 1677 3000 1208 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[3938 2468 3976 2491 
] dogrey 
 (drawsegs) 4 [ 0]
[3750 2581 3788 2604 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.0) 3717 2874 0  0.00 [3717 2774 172 99] Show
%Latex:\myput{3717}{1366}{5}{-1.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[3563 2694 3640 2740 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[3563 2694 2438 2016 
] dogrey 
 (drawsegs) 4 [ 0]
[2438 2016 2438 1547 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[3375 2807 3413 2830 
] dogrey 
 (drawsegs) 4 [ 0]
[3188 2919 3226 2942 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.5) 3154 3212 0  0.00 [3154 3112 172 99] Show
%Latex:\myput{3154}{1028}{5}{-0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[3000 3032 3077 3078 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[3000 3032 1875 2354 
] dogrey 
 (drawsegs) 4 [ 0]
[1875 2354 1875 1885 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[2813 3145 2851 3168 
] dogrey 
 (drawsegs) 4 [ 0]
[2625 3258 2663 3281 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.0) 2592 3551 0  0.00 [2592 3451 139 99] Show
%Latex:\myput{2592}{689}{5}{0.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[2438 3371 2515 3417 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[2438 3371 1313 2693 
] dogrey 
 (drawsegs) 4 [ 0]
[1313 2693 1313 2224 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[2250 3484 2288 3507 
] dogrey 
 (drawsegs) 4 [ 0]
[2063 3597 2101 3620 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.5) 2029 3890 0  0.00 [2029 3790 139 99] Show
%Latex:\myput{2029}{350}{5}{0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[1875 3710 1952 3756 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(X) 4033 3341 0  0.00 [4033 3241 66 99] Show
%Latex:\myput{4033}{899}{5}{X}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.5) 424 3212 0  0.00 [424 3112 172 99] Show
%Latex:\myput{424}{1028}{5}{-0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3032 673 3078 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3032 711 3055 
] dogrey 
 (drawsegs) 4 [ 0]
[891 3117 852 3140 
] dogrey 
 (drawsegs) 4 [ 0]
[1031 3202 992 3225 
] dogrey 
 (drawsegs) 4 [ 0]
[1172 3287 1133 3310 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.0) 1020 3551 0  0.00 [1020 3451 139 99] Show
%Latex:\myput{1020}{689}{5}{0.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[1313 3371 1236 3417 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[1313 3371 4688 1338 
] dogrey 
 (drawsegs) 4 [ 0]
[4688 1338 4688 869 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[1313 3371 1274 3394 
] dogrey 
 (drawsegs) 4 [ 0]
[1453 3456 1414 3479 
] dogrey 
 (drawsegs) 4 [ 0]
[1594 3541 1555 3564 
] dogrey 
 (drawsegs) 4 [ 0]
[1734 3625 1695 3648 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.5) 1582 3890 0  0.00 [1582 3790 139 99] Show
%Latex:\myput{1582}{350}{5}{0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[1875 3710 1798 3756 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Y) 928 3792 0  0.00 [928 3692 66 99] Show
%Latex:\myput{928}{448}{5}{Y}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
0 Setcolor
[] 0 setdash
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[4309 1646 4253 1680 4309 1646 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[4309 1646 4364 1671 4309 1646 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[4359 1638 4303 1672 4359 1638 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[4309 1646 4296 1606 4309 1646 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[4359 1638 4414 1662 4359 1638 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[4359 1638 4344 1597 4359 1638 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[4156 1715 4100 1749 4156 1715 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[4156 1715 4213 1747 4156 1715 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[4205 1707 4149 1741 4205 1707 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[4205 1707 4261 1738 4205 1707 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[4156 1715 4154 1680 4156 1715 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[4205 1707 4201 1671 4205 1707 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[4438 1659 4382 1693 4438 1659 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[4438 1659 4492 1682 4438 1659 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[4438 1659 4423 1617 4438 1659 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[4003 1781 4059 1819 4003 1781 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[4050 1772 4106 1810 4050 1772 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[4003 1781 3947 1815 4003 1781 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[4050 1772 3994 1806 4050 1772 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[4003 1781 4013 1753 4003 1781 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[4050 1772 4058 1744 4050 1772 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[4284 1727 4227 1761 4284 1727 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[4284 1727 4340 1759 4284 1727 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[4284 1727 4280 1691 4284 1727 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3896 1836 3949 1879 3896 1836 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3850 1844 3903 1888 3850 1844 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3896 1836 3840 1870 3896 1836 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3850 1844 3795 1878 3850 1844 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3896 1836 3914 1815 3896 1836 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3850 1844 3871 1825 3850 1844 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[4129 1793 4185 1831 4129 1793 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[4129 1793 4073 1827 4129 1793 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[4129 1793 4136 1764 4129 1793 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3743 1898 3792 1944 3743 1898 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3700 1906 3748 1953 3700 1906 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3743 1898 3687 1932 3743 1898 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3700 1906 3644 1940 3700 1906 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3975 1856 4028 1899 3975 1856 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3743 1898 3772 1886 3743 1898 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3975 1856 3919 1890 3975 1856 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3700 1906 3731 1896 3700 1906 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3975 1856 3993 1836 3975 1856 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3593 1959 3635 2006 3593 1959 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3552 1967 3592 2015 3552 1967 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3822 1918 3871 1964 3822 1918 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3593 1959 3537 1992 3593 1959 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3552 1967 3496 2001 3552 1967 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3822 1918 3766 1952 3822 1918 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3593 1959 3631 1956 3593 1959 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3552 1967 3592 1966 3552 1967 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3822 1918 3851 1906 3822 1918 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3446 2019 3479 2066 3446 2019 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3407 2029 3439 2075 3407 2029 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3672 1979 3714 2027 3672 1979 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3446 2019 3389 2053 3446 2019 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3672 1979 3615 2013 3672 1979 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3407 2029 3351 2063 3407 2029 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3446 2019 3491 2026 3446 2019 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3407 2029 3454 2037 3407 2029 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3672 1979 3709 1977 3672 1979 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3302 2080 3326 2125 3302 2080 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3524 2040 3558 2087 3524 2040 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3266 2090 3288 2134 3266 2090 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3302 2080 3245 2114 3302 2080 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3524 2040 3468 2074 3524 2040 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3302 2080 3353 2097 3302 2080 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3266 2090 3210 2124 3266 2090 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3524 2040 3569 2047 3524 2040 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3266 2090 3318 2108 3266 2090 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3162 2143 3175 2184 3162 2143 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3380 2101 3404 2146 3380 2101 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3129 2153 3140 2193 3129 2153 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3162 2143 3106 2177 3162 2143 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3380 2101 3324 2135 3380 2101 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3162 2143 3217 2168 3162 2143 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3380 2101 3431 2117 3380 2101 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3129 2153 3073 2187 3129 2153 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3129 2153 3185 2179 3129 2153 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3027 2207 3029 2242 3027 2207 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3241 2164 3254 2204 3241 2164 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2996 2218 2996 2252 2996 2218 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3241 2164 3184 2197 3241 2164 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3027 2207 2970 2241 3027 2207 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3027 2207 3083 2240 3027 2207 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3241 2164 3295 2188 3241 2164 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2996 2218 3054 2252 2996 2218 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2996 2218 2941 2252 2996 2218 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3105 2228 3108 2263 3105 2228 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3105 2228 3049 2262 3105 2228 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3105 2228 3162 2261 3105 2228 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2044 3101 1706 2897 2044 3101 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[1706 2897 1706 2696 1706 2897 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2044 2899 2044 3101 2044 2899 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2044 2899 1706 2696 2044 2899 
] dogrey 
4 Setcolor
/absolu true def
0 Setcolor
5 Thickness
[] 0 setdash
[] 0 setdash
 (drawsegs) 12 [ 0]
[1875 3240 5250 1208 1875 3240 750 2563 1875 3240 1875 3710 
] dogrey 
[] 0 setdash
[] 0 setdash
15 Thickness
4 Setcolor
%Latex:\end{picture}
 showpage

 end saved restore 


