%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 19 581 822 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
90 rotate 0 neg 2261 neg 10 div translate
[2.674194 20 div 0 0 2.674194 20 div neg 198 10 div 2120 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
33 Setcolor
 (drawpoly) 14 [ -34]
[5250 1310 4023 530 750 2609 750 2930 1977 3710 5250 1631 5250 1310 
] dogrey 
33 Setcolor
/absolu true def
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
 (drawsegs) 12 [ 3]
[4023 852 750 2930 4023 852 5250 1631 4023 852 4023 530 
] dogrey 
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
[] 0 setdash
0 Setcolor
/closeflag false def
 (drawpoly) 14 [ 0]
[5250 1310 4023 530 750 2609 750 2930 1977 3710 5250 1631 5250 1310 
] dogrey 
0 Setcolor
/absolu true def
[] 0 setdash
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.20) 373 2872 0  0.00 [373 2772 227 99] Show
%Latex:\myput{373}{1368}{5}{-0.20}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2930 675 2882 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2930 712 2906 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2877 712 2853 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2823 712 2799 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2770 712 2746 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2716 712 2692 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2662 712 2638 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.05) 406 2551 0  0.00 [406 2451 194 99] Show
%Latex:\myput{406}{1689}{5}{0.05}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2609 675 2561 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Z) 300 2779 0 270.00 [300 2679 61 99] Show
%Latex:\myput{300}{1461}{5}{Z}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-2.4) 5400 1815 0  0.00 [5400 1715 172 99] Show
%Latex:\myput{5400}{2425}{5}{-2.4}
0 Setcolor
 (drawsegs) 4 [ 0]
[5250 1631 5325 1679 
] dogrey 
 (drawsegs) 4 [ 0]
[5045 1761 5082 1785 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-2.2) 4991 2075 0  0.00 [4991 1975 172 99] Show
%Latex:\myput{4991}{2165}{5}{-2.2}
0 Setcolor
 (drawsegs) 4 [ 0]
[4841 1891 4916 1939 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[4841 1891 3614 1111 
] dogrey 
 (drawsegs) 4 [ 0]
[3614 1111 3614 790 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[4636 2021 4673 2045 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-2.0) 4582 2335 0  0.00 [4582 2235 172 99] Show
%Latex:\myput{4582}{1905}{5}{-2.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[4432 2151 4507 2199 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[4432 2151 3205 1371 
] dogrey 
 (drawsegs) 4 [ 0]
[3205 1371 3205 1050 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[4227 2281 4264 2305 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.8) 4173 2595 0  0.00 [4173 2495 172 99] Show
%Latex:\myput{4173}{1645}{5}{-1.8}
0 Setcolor
 (drawsegs) 4 [ 0]
[4023 2411 4098 2459 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[4023 2411 2796 1631 
] dogrey 
 (drawsegs) 4 [ 0]
[2796 1631 2796 1310 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[3818 2541 3855 2565 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.6) 3764 2855 0  0.00 [3764 2755 172 99] Show
%Latex:\myput{3764}{1385}{5}{-1.6}
0 Setcolor
 (drawsegs) 4 [ 0]
[3614 2671 3689 2719 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[3614 2671 2387 1891 
] dogrey 
 (drawsegs) 4 [ 0]
[2387 1891 2387 1570 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[3409 2801 3446 2825 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.4) 3355 3114 0  0.00 [3355 3014 172 99] Show
%Latex:\myput{3355}{1126}{5}{-1.4}
0 Setcolor
 (drawsegs) 4 [ 0]
[3205 2930 3280 2978 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[3205 2930 1978 2150 
] dogrey 
 (drawsegs) 4 [ 0]
[1978 2150 1978 1829 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[3000 3060 3037 3084 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.2) 2945 3374 0  0.00 [2945 3274 172 99] Show
%Latex:\myput{2945}{866}{5}{-1.2}
0 Setcolor
 (drawsegs) 4 [ 0]
[2795 3190 2870 3238 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[2795 3190 1568 2410 
] dogrey 
 (drawsegs) 4 [ 0]
[1568 2410 1568 2089 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[2591 3320 2628 3344 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.0) 2536 3634 0  0.00 [2536 3534 172 99] Show
%Latex:\myput{2536}{606}{5}{-1.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[2386 3450 2461 3498 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[2386 3450 1159 2670 
] dogrey 
 (drawsegs) 4 [ 0]
[1159 2670 1159 2349 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[2182 3580 2219 3604 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.8) 2127 3894 0  0.00 [2127 3794 172 99] Show
%Latex:\myput{2127}{346}{5}{-0.8}
0 Setcolor
 (drawsegs) 4 [ 0]
[1977 3710 2052 3758 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(X) 4084 3325 0  0.00 [4084 3225 66 99] Show
%Latex:\myput{4084}{915}{5}{X}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.1) 428 3114 0  0.00 [428 3014 172 99] Show
%Latex:\myput{428}{1126}{5}{-0.1}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2930 675 2978 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2930 712 2954 
] dogrey 
 (drawsegs) 4 [ 0]
[852 2995 814 3019 
] dogrey 
 (drawsegs) 4 [ 0]
[955 3060 917 3084 
] dogrey 
 (drawsegs) 4 [ 0]
[1057 3125 1019 3149 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.1) 870 3374 0  0.00 [870 3274 139 99] Show
%Latex:\myput{870}{866}{5}{0.1}
0 Setcolor
 (drawsegs) 4 [ 0]
[1159 3190 1084 3238 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[1159 3190 4432 1111 
] dogrey 
 (drawsegs) 4 [ 0]
[4432 1111 4432 790 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[1159 3190 1121 3214 
] dogrey 
 (drawsegs) 4 [ 0]
[1261 3255 1223 3279 
] dogrey 
 (drawsegs) 4 [ 0]
[1364 3320 1326 3344 
] dogrey 
 (drawsegs) 4 [ 0]
[1466 3385 1428 3409 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.3) 1279 3634 0  0.00 [1279 3534 139 99] Show
%Latex:\myput{1279}{606}{5}{0.3}
0 Setcolor
 (drawsegs) 4 [ 0]
[1568 3450 1493 3498 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[1568 3450 4841 1371 
] dogrey 
 (drawsegs) 4 [ 0]
[4841 1371 4841 1050 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[1568 3450 1530 3474 
] dogrey 
 (drawsegs) 4 [ 0]
[1670 3515 1632 3539 
] dogrey 
 (drawsegs) 4 [ 0]
[1773 3580 1735 3604 
] dogrey 
 (drawsegs) 4 [ 0]
[1875 3645 1837 3669 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.5) 1688 3894 0  0.00 [1688 3794 139 99] Show
%Latex:\myput{1688}{346}{5}{0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[1977 3710 1902 3758 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Y) 946 3758 0  0.00 [946 3658 66 99] Show
%Latex:\myput{946}{482}{5}{Y}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
0 Setcolor
[] 0 setdash
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3743 1442 3642 1507 3743 1442 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3743 1442 3844 1490 3743 1442 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3835 1426 3733 1491 3835 1426 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3743 1442 3720 1364 3743 1442 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3835 1426 3934 1472 3835 1426 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3835 1426 3808 1347 3835 1426 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3465 1574 3364 1639 3465 1574 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3465 1574 3568 1636 3465 1574 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3555 1558 3452 1623 3555 1558 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3555 1558 3657 1618 3555 1558 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3465 1574 3462 1507 3465 1574 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3555 1558 3547 1489 3555 1558 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3978 1466 3876 1531 3978 1466 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3978 1466 4077 1511 3978 1466 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3978 1466 3951 1386 3978 1466 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3186 1700 3289 1774 3186 1700 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3273 1684 3375 1757 3273 1684 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3186 1700 3086 1765 3186 1700 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3273 1684 3171 1749 3273 1684 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3186 1700 3205 1646 3186 1700 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3273 1684 3287 1628 3273 1684 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3698 1597 3595 1662 3698 1597 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3698 1597 3800 1658 3698 1597 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3698 1597 3691 1529 3698 1597 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2993 1805 3090 1888 2993 1805 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2910 1822 3006 1905 2910 1822 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2993 1805 2891 1870 2993 1805 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2910 1822 2809 1887 2910 1822 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2993 1805 3026 1766 2993 1805 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2910 1822 2948 1784 2910 1822 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3416 1723 3518 1796 3416 1723 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3416 1723 3314 1788 3416 1723 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3416 1723 3430 1668 3416 1723 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2715 1924 2804 2012 2715 1924 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2636 1941 2723 2029 2636 1941 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2715 1924 2613 1989 2715 1924 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2636 1941 2535 2006 2636 1941 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3136 1845 3233 1927 3136 1845 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2715 1924 2767 1901 2715 1924 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3136 1845 3034 1910 3136 1845 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2636 1941 2693 1920 2636 1941 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3136 1845 3169 1805 3136 1845 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2442 2041 2518 2132 2442 2041 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2367 2058 2441 2149 2367 2058 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2858 1963 2947 2052 2858 1963 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2442 2041 2340 2106 2442 2041 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2367 2058 2266 2123 2367 2058 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2858 1963 2756 2028 2858 1963 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2442 2041 2510 2036 2442 2041 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2367 2058 2440 2055 2367 2058 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2858 1963 2910 1941 2858 1963 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2174 2157 2235 2247 2174 2157 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2103 2175 2161 2265 2103 2175 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2585 2080 2661 2171 2585 2080 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2174 2157 2071 2222 2174 2157 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2585 2080 2483 2145 2585 2080 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2103 2175 2003 2240 2103 2175 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2174 2157 2256 2171 2174 2157 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2103 2175 2189 2191 2103 2175 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2585 2080 2653 2076 2585 2080 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[1912 2274 1956 2360 1912 2274 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2317 2196 2378 2287 2317 2196 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[1847 2293 1887 2378 1847 2293 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[1912 2274 1810 2339 1912 2274 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2317 2196 2215 2261 2317 2196 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[1912 2274 2005 2306 1912 2274 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[1847 2293 1746 2358 1847 2293 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2317 2196 2399 2210 2317 2196 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[1847 2293 1943 2326 1847 2293 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[1658 2394 1682 2472 1658 2394 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2055 2314 2099 2400 2055 2314 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[1598 2414 1618 2491 1598 2414 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[1658 2394 1556 2459 1658 2394 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2055 2314 1953 2379 2055 2314 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[1658 2394 1757 2442 1658 2394 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2055 2314 2148 2345 2055 2314 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[1598 2414 1497 2479 1598 2414 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[1598 2414 1700 2464 1598 2414 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[1412 2518 1416 2585 1412 2518 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[1801 2434 1826 2512 1801 2434 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[1357 2539 1356 2604 1357 2539 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[1801 2434 1699 2499 1801 2434 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[1412 2518 1310 2583 1412 2518 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[1412 2518 1514 2580 1412 2518 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[1801 2434 1901 2481 1801 2434 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[1357 2539 1461 2603 1357 2539 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[1357 2539 1256 2604 1357 2539 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[1555 2557 1559 2624 1555 2557 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[1555 2557 1453 2622 1555 2557 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[1555 2557 1657 2620 1555 2557 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[-375 4230 -989 3841 -375 4230 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[-989 3841 -989 3455 -989 3841 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[-375 3844 -375 4230 -375 3844 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[-375 3844 -989 3455 -375 3844 
] dogrey 
4 Setcolor
/absolu true def
0 Setcolor
5 Thickness
[] 0 setdash
[] 0 setdash
 (drawsegs) 12 [ 0]
[1977 3388 5250 1310 1977 3388 750 2609 1977 3388 1977 3710 
] dogrey 
[] 0 setdash
[] 0 setdash
15 Thickness
4 Setcolor
%Latex:\end{picture}
 showpage

 end saved restore 


