%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 220 581 621 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[1.889764 20 div 0 0 1.889764 20 div neg 141 10 div 6212 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
0 Setcolor
5 Thickness
750 530 4500 3180 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
0 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 530 750 3710 5250 3710 5250 530 750 530 
] dogrey 
33 Setcolor
/absolu true def
0 Setcolor
[] 0 setdash
0 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[750 3710 750 530 
] dogrey 
 (drawsegs) 4 [ 0]
[1200 3710 1200 530 
] dogrey 
 (drawsegs) 4 [ 0]
[1650 3710 1650 530 
] dogrey 
 (drawsegs) 4 [ 0]
[2100 3710 2100 530 
] dogrey 
 (drawsegs) 4 [ 0]
[2550 3710 2550 530 
] dogrey 
 (drawsegs) 4 [ 0]
[3000 3710 3000 530 
] dogrey 
 (drawsegs) 4 [ 0]
[3450 3710 3450 530 
] dogrey 
 (drawsegs) 4 [ 0]
[3900 3710 3900 530 
] dogrey 
 (drawsegs) 4 [ 0]
[4350 3710 4350 530 
] dogrey 
 (drawsegs) 4 [ 0]
[4800 3710 4800 530 
] dogrey 
 (drawsegs) 4 [ 0]
[5250 3710 5250 530 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[750 3710 5250 3710 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3392 5250 3392 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3074 5250 3074 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2756 5250 2756 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2438 5250 2438 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2120 5250 2120 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1802 5250 1802 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1484 5250 1484 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1166 5250 1166 
] dogrey 
 (drawsegs) 4 [ 0]
[750 848 5250 848 
] dogrey 
 (drawsegs) 4 [ 0]
[750 530 5250 530 
] dogrey 
[] 0 setdash
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[2820 1993 90 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[3090 1993 90 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[2820 2184 90 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[3090 2184 90 64 0 23040 
] dogrey 
0 Setcolor
4 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[2838 2023 2813 2020 2789 2017 2767 2013 2746 2008 2726 2003 2707 1997 2690 1991 2673 1985 2658 1978 
2644 1971 2631 1964 2619 1956 2608 1948 2598 1940 2589 1932 2581 1923 2574 1915 2568 1906 2563 1897 
2558 1888 2555 1879 2552 1871 2550 1862 2549 1853 2548 1844 2548 1835 2549 1827 2551 1818 2553 1810 
2556 1802 2560 1793 2564 1785 2569 1778 2574 1770 2580 1763 2586 1755 2593 1748 2600 1742 2608 1735 
2616 1729 2625 1723 2634 1717 2643 1711 2653 1706 2663 1701 2673 1697 2684 1692 2695 1688 2706 1684 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[3102 2030 3070 2035 3040 2038 3010 2040 2982 2042 2956 2043 2930 2043 2905 2042 2882 2040 2859 2038 
2838 2036 2818 2032 2799 2029 2780 2024 2763 2019 2747 2014 2731 2009 2717 2003 2703 1997 2691 1990 
2679 1983 2668 1976 2658 1969 2649 1962 2641 1954 2633 1946 2626 1938 2620 1930 2615 1922 2611 1914 
2607 1906 2604 1898 2602 1889 2600 1881 2599 1873 2599 1865 2599 1857 2600 1849 2602 1841 2604 1833 
2607 1826 2610 1818 2614 1811 2618 1804 2623 1796 2629 1790 2634 1783 2641 1776 2647 1770 2654 1764 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[2828 2209 2792 2202 2759 2194 2727 2185 2698 2175 2669 2165 2643 2155 2618 2144 2595 2132 2573 2120 
2553 2108 2534 2096 2516 2083 2500 2070 2486 2056 2472 2043 2460 2029 2449 2015 2440 2001 2431 1987 
2424 1973 2418 1960 2413 1946 2409 1932 2406 1918 2404 1904 2403 1890 2403 1877 2404 1864 2406 1850 
2408 1837 2412 1825 2417 1812 2422 1800 2428 1788 2435 1776 2442 1765 2451 1753 2459 1743 2469 1732 
2479 1722 2490 1712 2501 1703 2513 1694 2525 1685 2538 1677 2551 1669 2565 1662 2579 1655 2593 1648 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[3091 2216 3050 2216 3009 2215 2971 2213 2934 2209 2899 2205 2866 2200 2834 2194 2803 2188 2774 2181 
2747 2173 2721 2164 2696 2155 2672 2146 2650 2136 2630 2126 2610 2115 2592 2104 2575 2092 2559 2081 
2544 2069 2531 2056 2519 2044 2508 2032 2497 2019 2489 2006 2481 1993 2474 1980 2468 1968 2463 1955 
2459 1942 2456 1929 2454 1916 2453 1903 2453 1891 2454 1878 2455 1866 2458 1854 2461 1842 2465 1830 
2470 1819 2475 1808 2481 1797 2488 1786 2495 1775 2503 1765 2512 1755 2521 1746 2531 1737 2542 1728 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[3165 2467 3108 2463 3053 2458 3000 2451 2949 2444 2901 2435 2855 2425 2810 2414 2768 2403 2728 2390 
2690 2377 2653 2363 2619 2349 2586 2333 2555 2318 2526 2301 2498 2285 2473 2268 2448 2250 2426 2232 
2405 2214 2386 2196 2368 2177 2352 2158 2337 2139 2324 2120 2312 2101 2302 2082 2293 2063 2285 2043 
2279 2024 2274 2005 2271 1986 2268 1968 2267 1949 2267 1931 2268 1912 2270 1894 2274 1877 2278 1859 
2284 1842 2290 1825 2297 1809 2306 1793 2315 1777 2325 1762 2336 1747 2348 1733 2361 1719 2374 1706 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[3429 2475 3365 2478 3303 2479 3244 2479 3186 2478 3131 2475 3077 2470 3026 2465 2977 2458 2929 2450 
2884 2442 2840 2432 2798 2421 2758 2410 2720 2397 2683 2384 2648 2370 2615 2356 2584 2341 2554 2325 
2526 2309 2499 2292 2474 2275 2451 2258 2429 2240 2409 2222 2390 2204 2373 2185 2357 2167 2343 2148 
2330 2129 2318 2110 2308 2090 2300 2071 2292 2052 2286 2033 2281 2014 2278 1995 2275 1976 2274 1958 
2274 1939 2275 1921 2278 1903 2281 1885 2285 1868 2291 1851 2297 1834 2305 1817 2313 1801 2322 1785 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[3155 2653 3087 2645 3022 2635 2961 2624 2901 2611 2845 2597 2791 2583 2739 2567 2690 2550 2643 2533 
2598 2514 2556 2495 2516 2475 2478 2455 2442 2434 2409 2413 2377 2391 2347 2368 2320 2346 2294 2323 
2271 2299 2249 2276 2229 2252 2211 2228 2194 2204 2180 2180 2167 2156 2155 2132 2146 2108 2138 2084 
2132 2060 2127 2037 2123 2013 2121 1990 2121 1967 2122 1944 2124 1922 2128 1900 2133 1878 2139 1856 
2146 1836 2155 1815 2165 1795 2176 1775 2187 1756 2200 1738 2214 1720 2229 1702 2245 1685 2261 1669 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[3418 2661 3344 2659 3273 2656 3204 2651 3138 2645 3075 2637 3013 2628 2955 2617 2898 2606 2844 2593 
2792 2579 2743 2564 2695 2548 2650 2531 2607 2514 2566 2495 2527 2476 2490 2457 2455 2436 2422 2416 
2391 2394 2362 2373 2335 2350 2310 2328 2286 2305 2264 2282 2245 2259 2226 2235 2210 2212 2195 2188 
2182 2165 2171 2141 2161 2117 2153 2093 2146 2070 2141 2046 2137 2023 2135 2000 2134 1977 2135 1955 
2137 1932 2140 1910 2145 1889 2151 1868 2158 1847 2166 1826 2175 1806 2186 1787 2197 1767 2210 1749 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
 (fillarc) 6 [ 0]
[1605 1134 90 64 0 23040 
] dogrey 
0 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
 (fillarc) 6 [ 0]
[4305 1134 90 64 0 23040 
] dogrey 
0 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
 (fillarc) 6 [ 0]
[1605 3042 90 64 0 23040 
] dogrey 
0 Setcolor
-1 -1 200000 200000 setclipzone
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
 (fillarc) 6 [ 0]
[4305 3042 90 64 0 23040 
] dogrey 
0 Setcolor
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1700 1151 1749 1137 1798 1124 1847 1113 1896 1102 1945 1093 1993 1085 2041 1078 2088 1072 2135 1067 
2182 1063 2228 1060 2274 1059 2319 1058 2364 1058 2408 1059 2452 1060 2495 1063 2538 1067 2580 1071 
2621 1077 2662 1083 2702 1090 2741 1097 2779 1106 2817 1115 2854 1125 2890 1135 2925 1146 2959 1158 
2993 1171 3025 1184 3057 1197 3088 1211 3117 1226 3146 1241 3174 1256 3201 1272 3227 1289 3252 1306 
3276 1323 3299 1340 3321 1358 3342 1376 3362 1395 3381 1413 3399 1432 3416 1451 3431 1470 3446 1490 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4336 1225 4320 1283 4302 1338 4284 1391 4264 1442 4243 1491 4221 1538 4198 1583 4174 1627 4149 1669 
4123 1709 4096 1748 4068 1785 4040 1820 4011 1854 3982 1887 3952 1918 3922 1947 3891 1975 3859 2002 
3827 2028 3795 2052 3763 2075 3731 2096 3698 2117 3665 2136 3632 2154 3599 2171 3566 2186 3533 2201 
3500 2214 3467 2227 3434 2238 3401 2248 3369 2257 3337 2265 3305 2273 3274 2279 3242 2284 3211 2288 
3181 2292 3151 2295 3121 2296 3092 2297 3064 2297 3036 2297 3008 2296 2982 2293 2955 2291 2930 2287 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1594 3014 1543 2953 1496 2894 1454 2834 1416 2776 1382 2717 1352 2660 1326 2602 1303 2546 1284 2490 
1268 2435 1256 2380 1247 2327 1240 2274 1237 2222 1237 2171 1239 2120 1245 2071 1252 2023 1263 1975 
1275 1929 1290 1884 1307 1840 1327 1797 1348 1755 1372 1714 1397 1675 1424 1636 1453 1599 1484 1564 
1516 1529 1549 1496 1584 1464 1620 1433 1658 1404 1697 1376 1736 1349 1777 1324 1819 1300 1861 1277 
1905 1256 1949 1236 1993 1217 2039 1200 2084 1184 2131 1170 2177 1156 2224 1145 2271 1134 2318 1125 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4230 3088 4114 3099 4000 3107 3891 3112 3784 3115 3680 3115 3580 3112 3483 3108 3389 3101 3297 3092 
3209 3080 3124 3067 3041 3053 2961 3036 2885 3018 2810 2999 2739 2977 2671 2955 2605 2931 2542 2906 
2482 2880 2424 2853 2369 2825 2317 2796 2267 2766 2220 2735 2175 2704 2134 2672 2094 2639 2057 2606 
2023 2573 1991 2539 1961 2504 1934 2470 1910 2435 1887 2400 1867 2365 1850 2330 1834 2295 1821 2260 
1810 2225 1801 2190 1794 2155 1789 2121 1786 2087 1786 2053 1787 2020 1790 1987 1795 1954 1802 1922 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[2026 1595 2044 1580 2062 1566 2080 1552 2100 1538 2120 1525 2140 1513 2161 1501 2183 1490 2205 1479 
2227 1469 2250 1460 2274 1451 2297 1443 2321 1435 2345 1428 2369 1422 2394 1416 2418 1411 2443 1406 
2468 1402 2493 1399 2518 1396 2543 1394 2568 1392 2593 1391 2618 1390 2642 1390 2667 1391 2691 1392 
2716 1393 2740 1395 2763 1398 2787 1401 2810 1405 2833 1409 2856 1414 2879 1419 2901 1424 2922 1430 
2943 1436 2964 1443 2985 1450 3005 1458 3024 1466 3043 1474 3062 1483 3080 1492 3097 1501 3114 1511 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4662 1670 4614 1726 4566 1779 4517 1829 4468 1877 4418 1923 4368 1966 4319 2006 4268 2045 4218 2081 
4168 2115 4118 2147 4068 2177 4018 2206 3968 2232 3918 2256 3869 2279 3820 2300 3771 2320 3722 2337 
3674 2353 3627 2368 3579 2381 3533 2393 3486 2403 3441 2412 3396 2420 3352 2426 3308 2431 3265 2434 
3223 2437 3181 2438 3141 2439 3101 2438 3062 2436 3024 2433 2987 2430 2951 2425 2916 2419 2882 2413 
2848 2405 2816 2397 2785 2389 2755 2379 2726 2369 2698 2358 2671 2346 2646 2334 2621 2322 2598 2308 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1921 3458 1838 3397 1760 3335 1687 3273 1620 3211 1557 3149 1500 3087 1447 3025 1398 2964 1354 2902 
1314 2841 1278 2780 1246 2719 1218 2659 1194 2600 1173 2540 1156 2482 1143 2424 1133 2367 1126 2310 
1122 2255 1121 2200 1124 2146 1129 2093 1137 2041 1148 1990 1161 1940 1177 1891 1195 1844 1216 1797 
1239 1752 1264 1708 1291 1665 1320 1623 1351 1583 1384 1544 1418 1506 1455 1470 1492 1435 1532 1401 
1572 1369 1614 1339 1657 1309 1701 1282 1747 1255 1793 1231 1840 1207 1888 1185 1937 1165 1986 1146 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4557 3533 4408 3542 4264 3548 4124 3551 3988 3550 3856 3547 3728 3540 3604 3531 3483 3518 3367 3504 
3255 3487 3146 3467 3041 3445 2939 3422 2841 3396 2747 3368 2656 3339 2569 3308 2485 3275 2405 3241 
2328 3206 2255 3169 2185 3131 2119 3092 2056 3052 1996 3011 1939 2970 1886 2927 1836 2884 1789 2840 
1746 2795 1705 2751 1668 2705 1634 2660 1603 2614 1574 2568 1549 2522 1527 2476 1507 2430 1491 2384 
1477 2338 1466 2293 1458 2248 1452 2203 1449 2158 1448 2114 1450 2070 1454 2028 1461 1985 1469 1943 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-0.25) 637 3874 0  0.00 [637 3774 227 99] Show
%Latex:\myput{637}{366}{5}{-0.25}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 750 3773 
] dogrey 
0 Setcolor
32 Setcolor
(-0.20) 1087 3874 0  0.00 [1087 3774 227 99] Show
%Latex:\myput{1087}{366}{5}{-0.20}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[1200 3710 1200 3773 
] dogrey 
0 Setcolor
32 Setcolor
(-0.15) 1537 3874 0  0.00 [1537 3774 227 99] Show
%Latex:\myput{1537}{366}{5}{-0.15}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[1650 3710 1650 3773 
] dogrey 
0 Setcolor
32 Setcolor
(-0.10) 1987 3874 0  0.00 [1987 3774 227 99] Show
%Latex:\myput{1987}{366}{5}{-0.10}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[2100 3710 2100 3773 
] dogrey 
0 Setcolor
32 Setcolor
(-0.05) 2437 3874 0  0.00 [2437 3774 227 99] Show
%Latex:\myput{2437}{366}{5}{-0.05}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[2550 3710 2550 3773 
] dogrey 
0 Setcolor
32 Setcolor
(0.00) 2903 3874 0  0.00 [2903 3774 194 99] Show
%Latex:\myput{2903}{366}{5}{0.00}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[3000 3710 3000 3773 
] dogrey 
0 Setcolor
32 Setcolor
(0.05) 3353 3874 0  0.00 [3353 3774 194 99] Show
%Latex:\myput{3353}{366}{5}{0.05}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[3450 3710 3450 3773 
] dogrey 
0 Setcolor
32 Setcolor
(0.10) 3803 3874 0  0.00 [3803 3774 194 99] Show
%Latex:\myput{3803}{366}{5}{0.10}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[3900 3710 3900 3773 
] dogrey 
0 Setcolor
32 Setcolor
(0.15) 4253 3874 0  0.00 [4253 3774 194 99] Show
%Latex:\myput{4253}{366}{5}{0.15}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[4350 3710 4350 3773 
] dogrey 
0 Setcolor
32 Setcolor
(0.20) 4703 3874 0  0.00 [4703 3774 194 99] Show
%Latex:\myput{4703}{366}{5}{0.20}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[4800 3710 4800 3773 
] dogrey 
0 Setcolor
32 Setcolor
(0.25) 5153 3874 0  0.00 [5153 3774 194 99] Show
%Latex:\myput{5153}{366}{5}{0.25}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[5250 3710 5250 3773 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 750 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[975 3710 975 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[1200 3710 1200 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[1425 3710 1425 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[1650 3710 1650 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[1875 3710 1875 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[2100 3710 2100 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[2325 3710 2325 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[2550 3710 2550 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[2775 3710 2775 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[3000 3710 3000 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[3225 3710 3225 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[3450 3710 3450 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[3675 3710 3675 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[3900 3710 3900 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[4125 3710 4125 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[4350 3710 4350 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[4575 3710 4575 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[4800 3710 4800 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[5025 3710 5025 3757 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-0.25) 451 3749 0  0.00 [451 3649 227 99] Show
%Latex:\myput{451}{491}{5}{-0.25}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 690 3710 
] dogrey 
0 Setcolor
32 Setcolor
(-0.20) 451 3431 0  0.00 [451 3331 227 99] Show
%Latex:\myput{451}{809}{5}{-0.20}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3392 690 3392 
] dogrey 
0 Setcolor
32 Setcolor
(-0.15) 451 3113 0  0.00 [451 3013 227 99] Show
%Latex:\myput{451}{1127}{5}{-0.15}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3074 690 3074 
] dogrey 
0 Setcolor
32 Setcolor
(-0.10) 451 2795 0  0.00 [451 2695 227 99] Show
%Latex:\myput{451}{1445}{5}{-0.10}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2756 690 2756 
] dogrey 
0 Setcolor
32 Setcolor
(-0.05) 451 2477 0  0.00 [451 2377 227 99] Show
%Latex:\myput{451}{1763}{5}{-0.05}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2438 690 2438 
] dogrey 
0 Setcolor
32 Setcolor
(0.00) 484 2159 0  0.00 [484 2059 194 99] Show
%Latex:\myput{484}{2081}{5}{0.00}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2120 690 2120 
] dogrey 
0 Setcolor
32 Setcolor
(0.05) 484 1841 0  0.00 [484 1741 194 99] Show
%Latex:\myput{484}{2399}{5}{0.05}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 1802 690 1802 
] dogrey 
0 Setcolor
32 Setcolor
(0.10) 484 1523 0  0.00 [484 1423 194 99] Show
%Latex:\myput{484}{2717}{5}{0.10}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 1484 690 1484 
] dogrey 
0 Setcolor
32 Setcolor
(0.15) 484 1205 0  0.00 [484 1105 194 99] Show
%Latex:\myput{484}{3035}{5}{0.15}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 1166 690 1166 
] dogrey 
0 Setcolor
32 Setcolor
(0.20) 484 887 0  0.00 [484 787 194 99] Show
%Latex:\myput{484}{3353}{5}{0.20}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 848 690 848 
] dogrey 
0 Setcolor
32 Setcolor
(0.25) 484 569 0  0.00 [484 469 194 99] Show
%Latex:\myput{484}{3671}{5}{0.25}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 530 690 530 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 705 3710 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3551 705 3551 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3392 705 3392 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3233 705 3233 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3074 705 3074 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2915 705 2915 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2756 705 2756 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2597 705 2597 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2438 705 2438 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2279 705 2279 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2120 705 2120 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1961 705 1961 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1802 705 1802 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1643 705 1643 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1484 705 1484 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1325 705 1325 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1166 705 1166 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1007 705 1007 
] dogrey 
 (drawsegs) 4 [ 0]
[750 848 705 848 
] dogrey 
 (drawsegs) 4 [ 0]
[750 689 705 689 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 5250 3710 
] dogrey 
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 750 530 
] dogrey 
0 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
0 Setcolor
[] 0 setdash
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 

