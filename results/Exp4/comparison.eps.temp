%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 220 581 621 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[1.889764 20 div 0 0 1.889764 20 div neg 141 10 div 6212 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
3 Setcolor
5 Thickness
750 530 4500 3180 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
3 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 530 750 3710 5250 3710 5250 530 750 530 
] dogrey 
33 Setcolor
/absolu true def
3 Setcolor
[] 0 setdash
3 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3710 750 530 
] dogrey 
 (drawsegs) 4 [ 3]
[1200 3710 1200 530 
] dogrey 
 (drawsegs) 4 [ 3]
[1650 3710 1650 530 
] dogrey 
 (drawsegs) 4 [ 3]
[2100 3710 2100 530 
] dogrey 
 (drawsegs) 4 [ 3]
[2550 3710 2550 530 
] dogrey 
 (drawsegs) 4 [ 3]
[3000 3710 3000 530 
] dogrey 
 (drawsegs) 4 [ 3]
[3450 3710 3450 530 
] dogrey 
 (drawsegs) 4 [ 3]
[3900 3710 3900 530 
] dogrey 
 (drawsegs) 4 [ 3]
[4350 3710 4350 530 
] dogrey 
 (drawsegs) 4 [ 3]
[4800 3710 4800 530 
] dogrey 
 (drawsegs) 4 [ 3]
[5250 3710 5250 530 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3710 5250 3710 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3392 5250 3392 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3074 5250 3074 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2756 5250 2756 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2438 5250 2438 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2120 5250 2120 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1802 5250 1802 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1484 5250 1484 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1166 5250 1166 
] dogrey 
 (drawsegs) 4 [ 3]
[750 848 5250 848 
] dogrey 
 (drawsegs) 4 [ 3]
[750 530 5250 530 
] dogrey 
[] 0 setdash
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[1605 1134 90 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4305 1134 90 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[1605 3042 90 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4305 3042 90 64 0 23040 
] dogrey 
0 Setcolor
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1700 1151 1749 1137 1798 1124 1847 1113 1896 1102 1945 1093 1993 1085 2041 1078 2088 1072 2135 1067 
2182 1063 2228 1060 2274 1059 2319 1058 2364 1058 2408 1059 2452 1060 2495 1063 2538 1067 2580 1071 
2621 1077 2662 1083 2702 1090 2741 1097 2779 1106 2817 1115 2854 1125 2890 1135 2925 1146 2959 1158 
2993 1171 3025 1184 3057 1197 3088 1211 3117 1226 3146 1241 3174 1256 3201 1272 3227 1289 3252 1306 
3276 1323 3299 1340 3321 1358 3342 1376 3362 1395 3381 1413 3399 1432 3416 1451 3431 1470 3446 1490 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4336 1225 4320 1283 4302 1338 4284 1391 4264 1442 4243 1491 4221 1538 4198 1583 4174 1627 4149 1669 
4123 1709 4096 1748 4068 1785 4040 1820 4011 1854 3982 1887 3952 1918 3922 1947 3891 1975 3859 2002 
3827 2028 3795 2052 3763 2075 3731 2096 3698 2117 3665 2136 3632 2154 3599 2171 3566 2186 3533 2201 
3500 2214 3467 2227 3434 2238 3401 2248 3369 2257 3337 2265 3305 2273 3274 2279 3242 2284 3211 2288 
3181 2292 3151 2295 3121 2296 3092 2297 3064 2297 3036 2297 3008 2296 2982 2293 2955 2291 2930 2287 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1594 3014 1543 2953 1496 2894 1454 2834 1416 2776 1382 2717 1352 2660 1326 2602 1303 2546 1284 2490 
1268 2435 1256 2380 1247 2327 1240 2274 1237 2222 1237 2171 1239 2120 1245 2071 1252 2023 1263 1975 
1275 1929 1290 1884 1307 1840 1327 1797 1348 1755 1372 1714 1397 1675 1424 1636 1453 1599 1484 1564 
1516 1529 1549 1496 1584 1464 1620 1433 1658 1404 1697 1376 1736 1349 1777 1324 1819 1300 1861 1277 
1905 1256 1949 1236 1993 1217 2039 1200 2084 1184 2131 1170 2177 1156 2224 1145 2271 1134 2318 1125 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4230 3088 4114 3099 4000 3107 3891 3112 3784 3115 3680 3115 3580 3112 3483 3108 3389 3101 3297 3092 
3209 3080 3124 3067 3041 3053 2961 3036 2885 3018 2810 2999 2739 2977 2671 2955 2605 2931 2542 2906 
2482 2880 2424 2853 2369 2825 2317 2796 2267 2766 2220 2735 2175 2704 2134 2672 2094 2639 2057 2606 
2023 2573 1991 2539 1961 2504 1934 2470 1910 2435 1887 2400 1867 2365 1850 2330 1834 2295 1821 2260 
1810 2225 1801 2190 1794 2155 1789 2121 1786 2087 1786 2053 1787 2020 1790 1987 1795 1954 1802 1922 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[2026 1595 2044 1580 2062 1566 2080 1552 2100 1538 2120 1525 2140 1513 2161 1501 2183 1490 2205 1479 
2227 1469 2250 1460 2274 1451 2297 1443 2321 1435 2345 1428 2369 1422 2394 1416 2418 1411 2443 1406 
2468 1402 2493 1399 2518 1396 2543 1394 2568 1392 2593 1391 2618 1390 2642 1390 2667 1391 2691 1392 
2716 1393 2740 1395 2763 1398 2787 1401 2810 1405 2833 1409 2856 1414 2879 1419 2901 1424 2922 1430 
2943 1436 2964 1443 2985 1450 3005 1458 3024 1466 3043 1474 3062 1483 3080 1492 3097 1501 3114 1511 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4662 1670 4614 1726 4566 1779 4517 1829 4468 1877 4418 1923 4368 1966 4319 2006 4268 2045 4218 2081 
4168 2115 4118 2147 4068 2177 4018 2206 3968 2232 3918 2256 3869 2279 3820 2300 3771 2320 3722 2337 
3674 2353 3627 2368 3579 2381 3533 2393 3486 2403 3441 2412 3396 2420 3352 2426 3308 2431 3265 2434 
3223 2437 3181 2438 3141 2439 3101 2438 3062 2436 3024 2433 2987 2430 2951 2425 2916 2419 2882 2413 
2848 2405 2816 2397 2785 2389 2755 2379 2726 2369 2698 2358 2671 2346 2646 2334 2621 2322 2598 2308 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1921 3458 1838 3397 1760 3335 1687 3273 1620 3211 1557 3149 1500 3087 1447 3025 1398 2964 1354 2902 
1314 2841 1278 2780 1246 2719 1218 2659 1194 2600 1173 2540 1156 2482 1143 2424 1133 2367 1126 2310 
1122 2255 1121 2200 1124 2146 1129 2093 1137 2041 1148 1990 1161 1940 1177 1891 1195 1844 1216 1797 
1239 1752 1264 1708 1291 1665 1320 1623 1351 1583 1384 1544 1418 1506 1455 1470 1492 1435 1532 1401 
1572 1369 1614 1339 1657 1309 1701 1282 1747 1255 1793 1231 1840 1207 1888 1185 1937 1165 1986 1146 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4557 3533 4408 3542 4264 3548 4124 3551 3988 3550 3856 3547 3728 3540 3604 3531 3483 3518 3367 3504 
3255 3487 3146 3467 3041 3445 2939 3422 2841 3396 2747 3368 2656 3339 2569 3308 2485 3275 2405 3241 
2328 3206 2255 3169 2185 3131 2119 3092 2056 3052 1996 3011 1939 2970 1886 2927 1836 2884 1789 2840 
1746 2795 1705 2751 1668 2705 1634 2660 1603 2614 1574 2568 1549 2522 1527 2476 1507 2430 1491 2384 
1477 2338 1466 2293 1458 2248 1452 2203 1449 2158 1448 2114 1450 2070 1454 2028 1461 1985 1469 1943 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
5 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
5 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1682 1132 1718 1107 1754 1083 1792 1060 1831 1038 1870 1018 1910 999 1950 982 1991 966 2033 951 
2075 938 2117 926 2159 915 2201 906 2244 898 2286 891 2328 886 2370 882 2412 879 2453 877 
2494 876 2534 877 2574 879 2614 882 2653 885 2691 890 2728 896 2765 903 2800 911 2835 920 
2869 930 2902 940 2934 952 2965 964 2995 977 3024 990 3051 1005 3078 1019 3103 1035 3128 1051 
3151 1067 3172 1084 3193 1101 3212 1119 3231 1137 3248 1155 3263 1174 3278 1193 3291 1212 3303 1231 
] dogrey 
5 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
5 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
5 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4352 1210 4351 1259 4348 1308 4341 1356 4332 1403 4321 1449 4307 1494 4290 1539 4272 1582 4251 1625 
4228 1666 4203 1706 4175 1745 4146 1783 4116 1819 4083 1855 4049 1888 4013 1921 3976 1952 3938 1982 
3899 2010 3858 2036 3816 2062 3774 2085 3730 2108 3686 2129 3641 2148 3596 2166 3550 2182 3504 2197 
3457 2210 3411 2222 3364 2232 3317 2241 3270 2249 3224 2255 3177 2260 3131 2263 3086 2265 3040 2266 
2995 2265 2951 2263 2908 2260 2865 2256 2823 2250 2781 2244 2741 2236 2701 2227 2663 2217 2625 2207 
] dogrey 
5 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
5 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
5 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1566 3011 1497 2960 1432 2907 1370 2853 1312 2798 1258 2743 1208 2686 1161 2628 1118 2570 1079 2512 
1044 2453 1013 2394 985 2334 961 2275 941 2215 925 2156 911 2097 902 2038 896 1980 893 1922 
893 1865 897 1808 904 1752 914 1698 927 1644 943 1591 962 1539 983 1488 1007 1439 1033 1391 
1062 1344 1093 1298 1127 1254 1162 1212 1200 1171 1239 1131 1280 1093 1323 1057 1367 1022 1413 989 
1460 958 1509 928 1558 900 1608 874 1660 850 1712 827 1764 806 1817 787 1871 770 1925 754 
] dogrey 
5 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
5 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
5 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4250 3097 4143 3120 4037 3140 3931 3158 3825 3171 3720 3182 3615 3190 3511 3194 3408 3196 3306 3194 
3206 3190 3107 3183 3009 3173 2913 3161 2819 3146 2728 3129 2638 3109 2550 3087 2465 3062 2382 3036 
2301 3008 2224 2977 2148 2945 2076 2911 2006 2875 1939 2838 1875 2800 1814 2760 1756 2718 1702 2676 
1650 2633 1601 2588 1555 2543 1512 2497 1473 2451 1437 2404 1403 2356 1373 2308 1346 2260 1322 2211 
1301 2163 1283 2114 1268 2066 1256 2017 1246 1969 1240 1922 1236 1874 1235 1827 1237 1781 1241 1735 
] dogrey 
5 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1779 1248 1821 1234 1863 1222 1905 1210 1947 1200 1989 1190 2031 1182 2072 1174 2113 1167 2154 1162 
2195 1157 2236 1153 2276 1150 2316 1147 2356 1146 2395 1145 2434 1145 2473 1146 2511 1148 2548 1151 
2585 1154 2622 1158 2658 1163 2693 1169 2728 1175 2763 1182 2796 1189 2829 1197 2862 1206 2893 1215 
2924 1225 2955 1236 2984 1247 3013 1258 3041 1270 3068 1283 3094 1296 3120 1309 3145 1323 3169 1337 
3192 1351 3214 1366 3235 1381 3256 1397 3275 1413 3294 1429 3312 1445 3329 1462 3345 1479 3360 1495 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4478 1251 4455 1312 4432 1370 4407 1426 4381 1480 4354 1532 4326 1582 4297 1629 4267 1675 4237 1719 
4205 1760 4173 1800 4140 1839 4107 1875 4073 1910 4039 1943 4004 1975 3968 2005 3933 2034 3897 2061 
3860 2086 3824 2110 3787 2133 3751 2155 3714 2175 3677 2193 3640 2211 3603 2227 3567 2242 3530 2255 
3494 2268 3457 2279 3421 2289 3386 2299 3350 2307 3316 2313 3281 2319 3247 2324 3213 2328 3180 2331 
3147 2333 3115 2334 3084 2335 3053 2334 3022 2333 2993 2330 2964 2327 2935 2324 2908 2319 2881 2314 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1765 3156 1702 3097 1644 3038 1590 2979 1541 2920 1496 2862 1456 2804 1420 2746 1387 2689 1358 2632 
1333 2576 1312 2521 1294 2466 1279 2412 1268 2358 1259 2305 1254 2253 1251 2202 1252 2152 1255 2102 
1261 2054 1269 2006 1280 1959 1293 1914 1309 1869 1326 1826 1346 1783 1368 1742 1392 1702 1418 1663 
1445 1625 1474 1589 1505 1554 1537 1520 1571 1487 1606 1455 1643 1425 1681 1396 1719 1369 1759 1343 
1800 1318 1842 1294 1885 1272 1928 1251 1972 1232 2017 1214 2062 1197 2108 1182 2154 1168 2201 1155 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4475 3165 4347 3180 4222 3192 4101 3201 3984 3207 3870 3210 3759 3210 3651 3208 3547 3203 3446 3196 
3348 3186 3254 3174 3162 3161 3073 3145 2988 3128 2905 3109 2826 3088 2749 3066 2676 3042 2605 3017 
2537 2990 2472 2963 2410 2934 2351 2904 2294 2873 2240 2842 2189 2809 2141 2776 2096 2742 2053 2707 
2013 2672 1976 2636 1941 2600 1909 2563 1879 2526 1852 2489 1827 2452 1805 2414 1785 2377 1768 2339 
1753 2302 1741 2264 1730 2227 1722 2190 1717 2153 1713 2117 1711 2081 1712 2045 1714 2009 1719 1975 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1647 1159 1664 1144 1682 1129 1701 1115 1721 1101 1741 1088 1761 1076 1782 1064 1804 1053 1826 1043 
1848 1033 1871 1023 1894 1015 1918 1006 1942 999 1966 992 1990 985 2014 980 2039 974 2064 970 
2089 966 2114 962 2139 959 2164 957 2188 955 2213 954 2238 954 2263 954 2288 954 2312 955 
2336 957 2360 959 2384 961 2408 965 2431 968 2454 972 2477 977 2499 982 2521 987 2543 993 
2564 1000 2585 1006 2605 1014 2625 1021 2645 1029 2664 1038 2682 1046 2700 1055 2718 1065 2735 1074 
] dogrey 
3 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4350 1160 4302 1216 4253 1269 4204 1320 4155 1368 4106 1413 4056 1456 4006 1497 3956 1535 3906 1571 
3856 1605 3806 1638 3756 1668 3706 1696 3656 1722 3606 1747 3557 1770 3508 1791 3459 1810 3410 1828 
3362 1844 3314 1858 3267 1872 3220 1883 3174 1894 3129 1902 3084 1910 3039 1916 2996 1921 2953 1925 
2910 1927 2869 1929 2828 1929 2789 1928 2750 1927 2712 1924 2675 1920 2639 1915 2603 1910 2569 1903 
2536 1896 2504 1888 2473 1879 2443 1869 2414 1859 2386 1848 2359 1837 2333 1825 2309 1812 2285 1799 
] dogrey 
3 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1639 3061 1556 2999 1478 2938 1405 2876 1338 2814 1275 2752 1218 2690 1165 2628 1116 2566 1072 2505 
1032 2443 996 2382 964 2322 936 2262 912 2202 891 2143 874 2084 861 2026 851 1969 844 1913 
840 1857 840 1803 842 1749 847 1696 855 1644 866 1593 879 1543 895 1494 913 1446 934 1400 
957 1354 982 1310 1009 1267 1038 1225 1069 1185 1102 1146 1136 1108 1173 1072 1210 1037 1250 1004 
1290 972 1332 941 1375 912 1419 884 1465 858 1511 833 1558 810 1606 788 1655 767 1704 749 
] dogrey 
3 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
3 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4356 3070 4207 3079 4063 3085 3923 3088 3787 3087 3655 3084 3527 3077 3403 3068 3282 3055 3166 3041 
3054 3024 2945 3004 2840 2982 2738 2959 2640 2933 2546 2905 2455 2876 2368 2845 2284 2812 2204 2778 
2127 2743 2054 2706 1984 2668 1918 2629 1855 2589 1795 2548 1738 2507 1685 2464 1635 2421 1588 2377 
1545 2332 1504 2288 1467 2242 1433 2197 1402 2151 1373 2105 1348 2059 1326 2013 1306 1967 1290 1921 
1276 1875 1265 1830 1257 1784 1251 1740 1248 1695 1247 1651 1249 1607 1253 1564 1259 1522 1268 1480 
] dogrey 
3 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1683 1133 1719 1108 1757 1084 1796 1061 1836 1040 1876 1020 1918 1001 1961 984 2004 967 2048 952 
2092 938 2137 926 2183 915 2228 905 2274 896 2321 889 2367 882 2414 877 2460 874 2507 871 
2553 870 2599 870 2645 871 2691 873 2736 877 2781 881 2826 887 2870 894 2913 902 2956 911 
2998 920 3039 931 3080 943 3119 956 3158 970 3196 984 3233 1000 3269 1016 3304 1033 3338 1051 
3371 1070 3403 1089 3434 1109 3463 1130 3492 1151 3519 1172 3544 1195 3569 1217 3592 1241 3614 1264 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4351 1210 4350 1258 4346 1306 4341 1353 4334 1400 4324 1445 4313 1490 4300 1533 4285 1576 4268 1618 
4250 1659 4230 1698 4209 1737 4186 1775 4162 1811 4136 1847 4110 1881 4081 1914 4052 1946 4022 1977 
3990 2007 3958 2035 3925 2062 3891 2088 3856 2113 3820 2137 3784 2159 3747 2181 3710 2201 3672 2219 
3633 2237 3595 2253 3556 2268 3517 2282 3478 2295 3438 2306 3399 2316 3360 2325 3320 2333 3281 2340 
3242 2345 3203 2350 3165 2353 3127 2356 3089 2357 3052 2357 3015 2356 2979 2354 2943 2351 2908 2347 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[1568 3010 1501 2959 1438 2906 1379 2852 1324 2798 1272 2742 1225 2686 1181 2629 1141 2572 1105 2514 
1073 2457 1044 2398 1020 2340 998 2282 981 2224 967 2166 956 2108 949 2050 945 1993 945 1937 
948 1881 954 1825 963 1771 975 1717 991 1664 1009 1612 1030 1560 1053 1510 1080 1461 1109 1414 
1140 1367 1174 1322 1210 1278 1249 1235 1289 1194 1332 1154 1376 1115 1422 1079 1471 1043 1520 1010 
1572 978 1624 947 1678 919 1734 892 1790 866 1848 843 1906 821 1966 801 2026 783 2086 766 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4250 3095 4145 3117 4040 3136 3936 3152 3833 3166 3731 3176 3630 3183 3530 3188 3432 3190 3335 3189 
3239 3186 3145 3180 3053 3172 2963 3161 2875 3148 2788 3133 2704 3116 2621 3097 2541 3075 2464 3052 
2388 3027 2315 3000 2245 2972 2177 2942 2111 2910 2048 2877 1988 2842 1930 2806 1876 2769 1823 2731 
1774 2692 1728 2652 1684 2611 1643 2569 1605 2527 1570 2484 1538 2440 1508 2396 1482 2351 1458 2306 
1437 2261 1419 2215 1403 2170 1391 2124 1381 2079 1374 2033 1370 1988 1368 1943 1369 1899 1372 1854 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
3 Setcolor
5 Thickness
[] 0 setdash
3 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-0.25) 637 3874 0  0.00 [637 3774 227 99] Show
%Latex:\myput{637}{366}{5}{-0.25}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 750 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-0.20) 1087 3874 0  0.00 [1087 3774 227 99] Show
%Latex:\myput{1087}{366}{5}{-0.20}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[1200 3710 1200 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-0.15) 1537 3874 0  0.00 [1537 3774 227 99] Show
%Latex:\myput{1537}{366}{5}{-0.15}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[1650 3710 1650 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-0.10) 1987 3874 0  0.00 [1987 3774 227 99] Show
%Latex:\myput{1987}{366}{5}{-0.10}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[2100 3710 2100 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-0.05) 2437 3874 0  0.00 [2437 3774 227 99] Show
%Latex:\myput{2437}{366}{5}{-0.05}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[2550 3710 2550 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.00) 2903 3874 0  0.00 [2903 3774 194 99] Show
%Latex:\myput{2903}{366}{5}{0.00}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[3000 3710 3000 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.05) 3353 3874 0  0.00 [3353 3774 194 99] Show
%Latex:\myput{3353}{366}{5}{0.05}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[3450 3710 3450 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.10) 3803 3874 0  0.00 [3803 3774 194 99] Show
%Latex:\myput{3803}{366}{5}{0.10}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[3900 3710 3900 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.15) 4253 3874 0  0.00 [4253 3774 194 99] Show
%Latex:\myput{4253}{366}{5}{0.15}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[4350 3710 4350 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.20) 4703 3874 0  0.00 [4703 3774 194 99] Show
%Latex:\myput{4703}{366}{5}{0.20}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[4800 3710 4800 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.25) 5153 3874 0  0.00 [5153 3774 194 99] Show
%Latex:\myput{5153}{366}{5}{0.25}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[5250 3710 5250 3773 
] dogrey 
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 750 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[975 3710 975 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1200 3710 1200 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1425 3710 1425 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1650 3710 1650 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1875 3710 1875 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2100 3710 2100 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2325 3710 2325 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2550 3710 2550 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2775 3710 2775 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3000 3710 3000 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3225 3710 3225 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3450 3710 3450 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3675 3710 3675 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3900 3710 3900 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4125 3710 4125 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4350 3710 4350 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4575 3710 4575 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4800 3710 4800 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[5025 3710 5025 3757 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-0.25) 451 3749 0  0.00 [451 3649 227 99] Show
%Latex:\myput{451}{491}{5}{-0.25}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 690 3710 
] dogrey 
3 Setcolor
32 Setcolor
(-0.20) 451 3431 0  0.00 [451 3331 227 99] Show
%Latex:\myput{451}{809}{5}{-0.20}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3392 690 3392 
] dogrey 
3 Setcolor
32 Setcolor
(-0.15) 451 3113 0  0.00 [451 3013 227 99] Show
%Latex:\myput{451}{1127}{5}{-0.15}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3074 690 3074 
] dogrey 
3 Setcolor
32 Setcolor
(-0.10) 451 2795 0  0.00 [451 2695 227 99] Show
%Latex:\myput{451}{1445}{5}{-0.10}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 2756 690 2756 
] dogrey 
3 Setcolor
32 Setcolor
(-0.05) 451 2477 0  0.00 [451 2377 227 99] Show
%Latex:\myput{451}{1763}{5}{-0.05}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 2438 690 2438 
] dogrey 
3 Setcolor
32 Setcolor
(0.00) 484 2159 0  0.00 [484 2059 194 99] Show
%Latex:\myput{484}{2081}{5}{0.00}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 2120 690 2120 
] dogrey 
3 Setcolor
32 Setcolor
(0.05) 484 1841 0  0.00 [484 1741 194 99] Show
%Latex:\myput{484}{2399}{5}{0.05}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 1802 690 1802 
] dogrey 
3 Setcolor
32 Setcolor
(0.10) 484 1523 0  0.00 [484 1423 194 99] Show
%Latex:\myput{484}{2717}{5}{0.10}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 1484 690 1484 
] dogrey 
3 Setcolor
32 Setcolor
(0.15) 484 1205 0  0.00 [484 1105 194 99] Show
%Latex:\myput{484}{3035}{5}{0.15}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 1166 690 1166 
] dogrey 
3 Setcolor
32 Setcolor
(0.20) 484 887 0  0.00 [484 787 194 99] Show
%Latex:\myput{484}{3353}{5}{0.20}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 848 690 848 
] dogrey 
3 Setcolor
32 Setcolor
(0.25) 484 569 0  0.00 [484 469 194 99] Show
%Latex:\myput{484}{3671}{5}{0.25}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 530 690 530 
] dogrey 
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 705 3710 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3551 705 3551 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3392 705 3392 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3233 705 3233 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3074 705 3074 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2915 705 2915 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2756 705 2756 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2597 705 2597 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2438 705 2438 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2279 705 2279 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2120 705 2120 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1961 705 1961 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1802 705 1802 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1643 705 1643 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1484 705 1484 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1325 705 1325 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1166 705 1166 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1007 705 1007 
] dogrey 
 (drawsegs) 4 [ 3]
[750 848 705 848 
] dogrey 
 (drawsegs) 4 [ 3]
[750 689 705 689 
] dogrey 
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 5250 3710 
] dogrey 
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 750 530 
] dogrey 
3 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
3 Setcolor
[70 20 70 20 ] 0 setdash
3 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
3 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 

