%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 220 581 621 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[1.889764 20 div 0 0 1.889764 20 div neg 141 10 div 6212 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
33 Setcolor
 (drawpoly) 14 [ -34]
[5250 1871 3000 530 750 1871 750 2369 3000 3710 5250 2369 5250 1871 
] dogrey 
33 Setcolor
/absolu true def
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
 (drawsegs) 12 [ 3]
[3000 1028 750 2369 3000 1028 5250 2369 3000 1028 3000 530 
] dogrey 
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
[] 0 setdash
0 Setcolor
/closeflag false def
 (drawpoly) 14 [ 0]
[5250 1871 3000 530 750 1871 750 2369 3000 3710 5250 2369 5250 1871 
] dogrey 
0 Setcolor
/absolu true def
[] 0 setdash
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.5) 424 2315 0  0.00 [424 2215 172 99] Show
%Latex:\myput{424}{1925}{5}{-0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2369 673 2323 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2369 711 2346 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2327 711 2304 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2286 711 2263 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2244 711 2221 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.0) 457 2149 0  0.00 [457 2049 139 99] Show
%Latex:\myput{457}{2091}{5}{0.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2203 673 2157 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[750 2203 3000 862 
] dogrey 
 (drawsegs) 4 [ 0]
[3000 862 5250 2203 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[750 2203 711 2180 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2161 711 2138 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2120 711 2097 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2079 711 2056 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.5) 457 1983 0  0.00 [457 1883 139 99] Show
%Latex:\myput{457}{2257}{5}{0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2037 673 1991 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[750 2037 3000 696 
] dogrey 
 (drawsegs) 4 [ 0]
[3000 696 5250 2037 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[750 2037 711 2014 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1996 711 1973 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1954 711 1931 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1913 711 1890 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(1.0) 457 1817 0  0.00 [457 1717 139 99] Show
%Latex:\myput{457}{2423}{5}{1.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 1871 673 1825 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Z) 300 2130 0 270.00 [300 2030 61 99] Show
%Latex:\myput{300}{2110}{5}{Z}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-2.0) 5404 2549 0  0.00 [5404 2449 172 99] Show
%Latex:\myput{5404}{1691}{5}{-2.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[5250 2369 5327 2415 
] dogrey 
 (drawsegs) 4 [ 0]
[5109 2453 5147 2476 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.5) 5123 2717 0  0.00 [5123 2617 172 99] Show
%Latex:\myput{5123}{1523}{5}{-1.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[4969 2537 5046 2583 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[4969 2537 2719 1196 
] dogrey 
 (drawsegs) 4 [ 0]
[2719 1196 2719 698 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[4828 2620 4866 2643 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.0) 4842 2884 0  0.00 [4842 2784 172 99] Show
%Latex:\myput{4842}{1356}{5}{-1.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[4688 2704 4765 2750 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[4688 2704 2438 1363 
] dogrey 
 (drawsegs) 4 [ 0]
[2438 1363 2438 865 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[4547 2788 4585 2811 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.5) 4560 3052 0  0.00 [4560 2952 172 99] Show
%Latex:\myput{4560}{1188}{5}{-0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[4406 2872 4483 2918 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[4406 2872 2156 1531 
] dogrey 
 (drawsegs) 4 [ 0]
[2156 1531 2156 1033 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[4266 2956 4304 2979 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.0) 4279 3219 0  0.00 [4279 3119 139 99] Show
%Latex:\myput{4279}{1021}{5}{0.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[4125 3039 4202 3085 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[4125 3039 1875 1698 
] dogrey 
 (drawsegs) 4 [ 0]
[1875 1698 1875 1200 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[3984 3123 4022 3146 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.5) 3998 3387 0  0.00 [3998 3287 139 99] Show
%Latex:\myput{3998}{853}{5}{0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[3844 3207 3921 3253 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[3844 3207 1594 1866 
] dogrey 
 (drawsegs) 4 [ 0]
[1594 1866 1594 1368 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[3703 3291 3741 3314 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(1.0) 3717 3555 0  0.00 [3717 3455 139 99] Show
%Latex:\myput{3717}{685}{5}{1.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[3563 3375 3640 3421 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[3563 3375 1313 2034 
] dogrey 
 (drawsegs) 4 [ 0]
[1313 2034 1313 1536 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[3422 3459 3460 3482 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(1.5) 3435 3722 0  0.00 [3435 3622 139 99] Show
%Latex:\myput{3435}{518}{5}{1.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[3281 3542 3358 3588 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[3281 3542 1031 2201 
] dogrey 
 (drawsegs) 4 [ 0]
[1031 2201 1031 1703 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[3141 3626 3179 3649 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(2.0) 3154 3890 0  0.00 [3154 3790 139 99] Show
%Latex:\myput{3154}{350}{5}{2.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[3000 3710 3077 3756 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(X) 4514 3571 0  0.00 [4514 3471 66 99] Show
%Latex:\myput{4514}{669}{5}{X}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-2.0) 424 2549 0  0.00 [424 2449 172 99] Show
%Latex:\myput{424}{1691}{5}{-2.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2369 673 2415 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2369 711 2392 
] dogrey 
 (drawsegs) 4 [ 0]
[891 2453 852 2476 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.5) 705 2717 0  0.00 [705 2617 172 99] Show
%Latex:\myput{705}{1523}{5}{-1.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[1031 2537 954 2583 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[1031 2537 3281 1196 
] dogrey 
 (drawsegs) 4 [ 0]
[3281 1196 3281 698 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[1031 2537 992 2560 
] dogrey 
 (drawsegs) 4 [ 0]
[1172 2620 1133 2643 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.0) 987 2884 0  0.00 [987 2784 172 99] Show
%Latex:\myput{987}{1356}{5}{-1.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[1313 2704 1236 2750 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[1313 2704 3563 1363 
] dogrey 
 (drawsegs) 4 [ 0]
[3563 1363 3563 865 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[1313 2704 1274 2727 
] dogrey 
 (drawsegs) 4 [ 0]
[1453 2788 1414 2811 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.5) 1268 3052 0  0.00 [1268 2952 172 99] Show
%Latex:\myput{1268}{1188}{5}{-0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[1594 2872 1517 2918 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[1594 2872 3844 1531 
] dogrey 
 (drawsegs) 4 [ 0]
[3844 1531 3844 1033 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[1594 2872 1555 2895 
] dogrey 
 (drawsegs) 4 [ 0]
[1734 2956 1695 2979 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.0) 1582 3219 0  0.00 [1582 3119 139 99] Show
%Latex:\myput{1582}{1021}{5}{0.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[1875 3039 1798 3085 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[1875 3039 4125 1698 
] dogrey 
 (drawsegs) 4 [ 0]
[4125 1698 4125 1200 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[1875 3039 1836 3062 
] dogrey 
 (drawsegs) 4 [ 0]
[2016 3123 1977 3146 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.5) 1863 3387 0  0.00 [1863 3287 139 99] Show
%Latex:\myput{1863}{853}{5}{0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[2156 3207 2079 3253 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[2156 3207 4406 1866 
] dogrey 
 (drawsegs) 4 [ 0]
[4406 1866 4406 1368 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[2156 3207 2117 3230 
] dogrey 
 (drawsegs) 4 [ 0]
[2297 3291 2258 3314 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(1.0) 2145 3555 0  0.00 [2145 3455 139 99] Show
%Latex:\myput{2145}{685}{5}{1.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[2438 3375 2361 3421 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[2438 3375 4688 2034 
] dogrey 
 (drawsegs) 4 [ 0]
[4688 2034 4688 1536 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[2438 3375 2399 3398 
] dogrey 
 (drawsegs) 4 [ 0]
[2578 3459 2539 3482 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(1.5) 2426 3722 0  0.00 [2426 3622 139 99] Show
%Latex:\myput{2426}{518}{5}{1.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[2719 3542 2642 3588 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[2719 3542 4969 2201 
] dogrey 
 (drawsegs) 4 [ 0]
[4969 2201 4969 1703 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[2719 3542 2680 3565 
] dogrey 
 (drawsegs) 4 [ 0]
[2859 3626 2820 3649 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(2.0) 2707 3890 0  0.00 [2707 3790 139 99] Show
%Latex:\myput{2707}{350}{5}{2.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[3000 3710 2923 3756 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Y) 1490 3571 0  0.00 [1490 3471 66 99] Show
%Latex:\myput{1490}{669}{5}{Y}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
0 Setcolor
[] 0 setdash
25 Thickness
[] 0 setdash
1 Setcolor
 (drawpoly) 6 [ 2]
[4640 2385 4409 2349 4640 2385 
] dogrey 
1 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[4640 2385 4578 2523 4640 2385 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[4640 2385 4640 2286 4640 2385 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2944 2270 3056 2203 2944 2270 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3056 2136 3056 2203 3056 2136 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2944 2203 2944 2270 2944 2203 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3056 2136 2944 2203 3056 2136 
] dogrey 
4 Setcolor
/absolu true def
25 Thickness
[] 0 setdash
1 Setcolor
 (drawpoly) 6 [ 2]
[3563 2538 3394 2438 3563 2538 
] dogrey 
1 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3563 2538 3394 2639 3563 2538 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3563 2538 3563 2439 3563 2538 
] dogrey 
2 Setcolor
/absolu true def
0 Setcolor
5 Thickness
[] 0 setdash
[] 0 setdash
 (drawsegs) 12 [ 0]
[3000 3212 5250 1871 3000 3212 750 1871 3000 3212 3000 3710 
] dogrey 
[] 0 setdash
[] 0 setdash
15 Thickness
2 Setcolor
%Latex:\end{picture}
 showpage

 end saved restore 


