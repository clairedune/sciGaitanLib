%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 19 581 822 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
90 rotate 0 neg 2261 neg 10 div translate
[2.674194 20 div 0 0 2.674194 20 div neg 198 10 div 2120 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
33 Setcolor
 (drawpoly) 14 [ -34]
[5250 1015 2651 530 750 2021 750 3225 3349 3710 5250 2219 5250 1015 
] dogrey 
33 Setcolor
/absolu true def
0 Setcolor
5 Thickness
[70 20 70 20 ] 0 setdash
 (drawsegs) 12 [ 3]
[2651 1734 750 3225 2651 1734 5250 2219 2651 1734 2651 530 
] dogrey 
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
[] 0 setdash
0 Setcolor
/closeflag false def
 (drawpoly) 14 [ 0]
[5250 1015 2651 530 750 2021 750 3225 3349 3710 5250 2219 5250 1015 
] dogrey 
0 Setcolor
/absolu true def
[] 0 setdash
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.6) 402 3231 0  0.00 [402 3131 172 99] Show
%Latex:\myput{402}{1009}{5}{-0.6}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3225 662 3209 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3225 706 3217 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3139 706 3131 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.5) 402 3059 0  0.00 [402 2959 172 99] Show
%Latex:\myput{402}{1181}{5}{-0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3053 662 3037 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[750 3053 2651 1562 
] dogrey 
 (drawsegs) 4 [ 0]
[2651 1562 5250 2047 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[750 3053 706 3045 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2967 706 2959 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.4) 402 2887 0  0.00 [402 2787 172 99] Show
%Latex:\myput{402}{1353}{5}{-0.4}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2881 662 2865 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[750 2881 2651 1390 
] dogrey 
 (drawsegs) 4 [ 0]
[2651 1390 5250 1875 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[750 2881 706 2873 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2795 706 2787 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.3) 402 2715 0  0.00 [402 2615 172 99] Show
%Latex:\myput{402}{1525}{5}{-0.3}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2709 662 2693 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[750 2709 2651 1218 
] dogrey 
 (drawsegs) 4 [ 0]
[2651 1218 5250 1703 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[750 2709 706 2701 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2623 706 2615 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.2) 402 2543 0  0.00 [402 2443 172 99] Show
%Latex:\myput{402}{1697}{5}{-0.2}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2537 662 2521 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[750 2537 2651 1046 
] dogrey 
 (drawsegs) 4 [ 0]
[2651 1046 5250 1531 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[750 2537 706 2529 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2451 706 2443 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.1) 402 2371 0  0.00 [402 2271 172 99] Show
%Latex:\myput{402}{1869}{5}{-0.1}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2365 662 2349 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[750 2365 2651 874 
] dogrey 
 (drawsegs) 4 [ 0]
[2651 874 5250 1359 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[750 2365 706 2357 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2279 706 2271 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.0) 435 2199 0  0.00 [435 2099 139 99] Show
%Latex:\myput{435}{2041}{5}{0.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2193 662 2177 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[750 2193 2651 702 
] dogrey 
 (drawsegs) 4 [ 0]
[2651 702 5250 1187 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[750 2193 706 2185 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2107 706 2099 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.1) 435 2027 0  0.00 [435 1927 139 99] Show
%Latex:\myput{435}{2213}{5}{0.1}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2021 662 2005 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Z) 300 2633 0 270.00 [300 2533 61 99] Show
%Latex:\myput{300}{1607}{5}{Z}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.0) 5426 2339 0  0.00 [5426 2239 172 99] Show
%Latex:\myput{5426}{1901}{5}{-1.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[5250 2219 5338 2235 
] dogrey 
 (drawsegs) 4 [ 0]
[5144 2301 5188 2309 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.9) 5215 2504 0  0.00 [5215 2404 172 99] Show
%Latex:\myput{5215}{1736}{5}{-0.9}
0 Setcolor
 (drawsegs) 4 [ 0]
[5039 2384 5127 2400 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[5039 2384 2440 1899 
] dogrey 
 (drawsegs) 4 [ 0]
[2440 1899 2440 695 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[4933 2467 4977 2475 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.8) 5004 2670 0  0.00 [5004 2570 172 99] Show
%Latex:\myput{5004}{1570}{5}{-0.8}
0 Setcolor
 (drawsegs) 4 [ 0]
[4828 2550 4916 2566 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[4828 2550 2229 2065 
] dogrey 
 (drawsegs) 4 [ 0]
[2229 2065 2229 861 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[4722 2633 4766 2641 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.7) 4792 2836 0  0.00 [4792 2736 172 99] Show
%Latex:\myput{4792}{1404}{5}{-0.7}
0 Setcolor
 (drawsegs) 4 [ 0]
[4616 2716 4704 2732 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[4616 2716 2017 2231 
] dogrey 
 (drawsegs) 4 [ 0]
[2017 2231 2017 1027 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[4511 2799 4555 2807 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.6) 4581 3001 0  0.00 [4581 2901 172 99] Show
%Latex:\myput{4581}{1239}{5}{-0.6}
0 Setcolor
 (drawsegs) 4 [ 0]
[4405 2881 4493 2897 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[4405 2881 1806 2396 
] dogrey 
 (drawsegs) 4 [ 0]
[1806 2396 1806 1192 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[4299 2964 4343 2972 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.5) 4370 3167 0  0.00 [4370 3067 172 99] Show
%Latex:\myput{4370}{1073}{5}{-0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[4194 3047 4282 3063 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[4194 3047 1595 2562 
] dogrey 
 (drawsegs) 4 [ 0]
[1595 2562 1595 1358 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[4088 3130 4132 3138 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.4) 4159 3333 0  0.00 [4159 3233 172 99] Show
%Latex:\myput{4159}{907}{5}{-0.4}
0 Setcolor
 (drawsegs) 4 [ 0]
[3983 3213 4071 3229 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[3983 3213 1384 2728 
] dogrey 
 (drawsegs) 4 [ 0]
[1384 2728 1384 1524 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[3877 3296 3921 3304 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.3) 3947 3499 0  0.00 [3947 3399 172 99] Show
%Latex:\myput{3947}{741}{5}{-0.3}
0 Setcolor
 (drawsegs) 4 [ 0]
[3771 3379 3859 3395 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[3771 3379 1172 2894 
] dogrey 
 (drawsegs) 4 [ 0]
[1172 2894 1172 1690 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[3666 3461 3710 3469 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.2) 3736 3664 0  0.00 [3736 3564 172 99] Show
%Latex:\myput{3736}{576}{5}{-0.2}
0 Setcolor
 (drawsegs) 4 [ 0]
[3560 3544 3648 3560 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[3560 3544 961 3059 
] dogrey 
 (drawsegs) 4 [ 0]
[961 3059 961 1855 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[3454 3627 3498 3635 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.1) 3525 3830 0  0.00 [3525 3730 172 99] Show
%Latex:\myput{3525}{410}{5}{-0.1}
0 Setcolor
 (drawsegs) 4 [ 0]
[3349 3710 3437 3726 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(X) 4688 3521 0  0.00 [4688 3421 66 99] Show
%Latex:\myput{4688}{719}{5}{X}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.0) 471 3423 0  0.00 [471 3323 139 99] Show
%Latex:\myput{471}{817}{5}{0.0}
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3225 680 3280 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3225 715 3252 
] dogrey 
 (drawsegs) 4 [ 0]
[894 3252 859 3279 
] dogrey 
 (drawsegs) 4 [ 0]
[1039 3279 1004 3306 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.1) 904 3504 0  0.00 [904 3404 139 99] Show
%Latex:\myput{904}{736}{5}{0.1}
0 Setcolor
 (drawsegs) 4 [ 0]
[1183 3306 1113 3361 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[1183 3306 3084 1815 
] dogrey 
 (drawsegs) 4 [ 0]
[3084 1815 3084 611 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[1183 3306 1148 3333 
] dogrey 
 (drawsegs) 4 [ 0]
[1328 3333 1293 3360 
] dogrey 
 (drawsegs) 4 [ 0]
[1472 3360 1437 3387 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.2) 1337 3585 0  0.00 [1337 3485 139 99] Show
%Latex:\myput{1337}{655}{5}{0.2}
0 Setcolor
 (drawsegs) 4 [ 0]
[1616 3387 1546 3442 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[1616 3387 3517 1896 
] dogrey 
 (drawsegs) 4 [ 0]
[3517 1896 3517 692 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[1616 3387 1581 3414 
] dogrey 
 (drawsegs) 4 [ 0]
[1761 3414 1726 3441 
] dogrey 
 (drawsegs) 4 [ 0]
[1905 3441 1870 3468 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.3) 1770 3666 0  0.00 [1770 3566 139 99] Show
%Latex:\myput{1770}{574}{5}{0.3}
0 Setcolor
 (drawsegs) 4 [ 0]
[2049 3468 1979 3523 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[2049 3468 3950 1977 
] dogrey 
 (drawsegs) 4 [ 0]
[3950 1977 3950 773 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[2049 3468 2014 3495 
] dogrey 
 (drawsegs) 4 [ 0]
[2194 3494 2159 3521 
] dogrey 
 (drawsegs) 4 [ 0]
[2338 3521 2303 3548 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.4) 2204 3746 0  0.00 [2204 3646 139 99] Show
%Latex:\myput{2204}{494}{5}{0.4}
0 Setcolor
 (drawsegs) 4 [ 0]
[2483 3548 2413 3603 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[2483 3548 4384 2057 
] dogrey 
 (drawsegs) 4 [ 0]
[4384 2057 4384 853 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[2483 3548 2448 3575 
] dogrey 
 (drawsegs) 4 [ 0]
[2627 3575 2592 3602 
] dogrey 
 (drawsegs) 4 [ 0]
[2771 3602 2736 3629 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.5) 2637 3827 0  0.00 [2637 3727 139 99] Show
%Latex:\myput{2637}{413}{5}{0.5}
0 Setcolor
 (drawsegs) 4 [ 0]
[2916 3629 2846 3684 
] dogrey 
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[2916 3629 4817 2138 
] dogrey 
 (drawsegs) 4 [ 0]
[4817 2138 4817 934 
] dogrey 
[] 0 setdash
 (drawsegs) 4 [ 0]
[2916 3629 2881 3656 
] dogrey 
 (drawsegs) 4 [ 0]
[3060 3656 3025 3683 
] dogrey 
 (drawsegs) 4 [ 0]
[3204 3683 3169 3710 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.6) 3070 3908 0  0.00 [3070 3808 139 99] Show
%Latex:\myput{3070}{332}{5}{0.6}
0 Setcolor
 (drawsegs) 4 [ 0]
[3349 3710 3279 3765 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Y) 1632 3857 0  0.00 [1632 3757 66 99] Show
%Latex:\myput{1632}{383}{5}{Y}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
0 Setcolor
0 Setcolor
[] 0 setdash
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2567 1038 2592 1128 2567 1038 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2579 1046 2605 1136 2579 1046 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2623 751 2628 838 2623 751 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2636 759 2640 846 2636 759 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2543 1326 2590 1418 2543 1326 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2556 1333 2603 1426 2556 1333 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2551 1613 2620 1707 2551 1613 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2564 1621 2632 1715 2564 1621 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2623 751 2840 790 2623 751 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2636 759 2852 798 2636 759 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2567 1038 2782 1068 2567 1038 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2579 1046 2794 1075 2579 1046 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2590 1898 2678 1993 2590 1898 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2603 1906 2691 2001 2603 1906 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2543 1326 2754 1346 2543 1326 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2556 1333 2767 1354 2556 1333 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2567 1038 2461 1121 2567 1038 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2579 1046 2473 1128 2579 1046 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2623 751 2518 834 2623 751 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2636 759 2530 842 2636 759 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2543 1326 2437 1408 2543 1326 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2556 1333 2450 1416 2556 1333 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2551 1613 2757 1624 2551 1613 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2564 1621 2770 1632 2564 1621 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2551 1613 2446 1696 2551 1613 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2564 1621 2459 1704 2564 1621 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2657 2180 2764 2275 2657 2180 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2670 2188 2777 2283 2670 2188 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2590 1898 2788 1900 2590 1898 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2603 1906 2801 1908 2603 1906 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2590 1898 2484 1981 2590 1898 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2603 1906 2497 1989 2603 1906 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2841 1067 2867 1157 2841 1067 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2897 780 2901 867 2897 780 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2818 1354 2865 1447 2818 1354 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2826 1642 2895 1736 2826 1642 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2749 2457 2875 2551 2749 2457 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2762 2465 2888 2559 2762 2465 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2657 2180 2551 2263 2657 2180 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2670 2188 2564 2271 2670 2188 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2657 2180 2845 2173 2657 2180 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2670 2188 2858 2181 2670 2188 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2897 780 3113 819 2897 780 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2841 1067 3055 1096 2841 1067 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2865 1927 2954 2022 2865 1927 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2818 1354 3029 1375 2818 1354 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2841 1067 2735 1150 2841 1067 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2897 780 2791 863 2897 780 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2818 1354 2712 1437 2818 1354 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2749 2457 2643 2540 2749 2457 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2762 2465 2657 2548 2762 2465 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2749 2457 2925 2440 2749 2457 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2762 2465 2938 2448 2762 2465 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2826 1642 3032 1653 2826 1642 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2826 1642 2721 1725 2826 1642 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2865 2728 3007 2819 2865 2728 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2878 2736 3021 2827 2878 2736 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2932 2209 3040 2304 2932 2209 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2865 1927 3063 1929 2865 1927 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2865 1927 2760 2010 2865 1927 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2865 2728 2759 2811 2865 2728 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2878 2736 2772 2818 2878 2736 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[2865 2728 3027 2702 2865 2728 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[2878 2736 3041 2709 2878 2736 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3025 2486 3151 2580 3025 2486 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2932 2209 2827 2292 2932 2209 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[2932 2209 3120 2202 2932 2209 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3000 2990 3159 3079 3000 2990 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3014 2998 3172 3086 3014 2998 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3025 2486 2920 2569 3025 2486 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3025 2486 3201 2469 3025 2486 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3141 2757 3284 2848 3141 2757 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3000 2990 2895 3073 3000 2990 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3014 2998 2908 3081 3014 2998 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3000 2990 3148 2955 3000 2990 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3014 2998 3162 2963 3014 2998 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3154 3244 3326 3328 3154 3244 
] dogrey 
2 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3167 3252 3339 3336 3167 3252 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3141 2757 3035 2840 3141 2757 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3141 2757 3304 2731 3141 2757 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3277 3020 3436 3108 3277 3020 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3154 3244 3048 3327 3154 3244 
] dogrey 
2 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3167 3252 3061 3335 3167 3252 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
2 Setcolor
 (drawpoly) 6 [ 2]
[3154 3244 3285 3200 3154 3244 
] dogrey 
2 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 6 [ 2]
[3167 3252 3298 3208 3167 3252 
] dogrey 
0 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3277 3020 3172 3103 3277 3020 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3277 3020 3425 2984 3277 3020 
] dogrey 
4 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3431 3273 3603 3357 3431 3273 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3431 3273 3325 3356 3431 3273 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[3431 3273 3562 3229 3431 3273 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[1188 2738 -111 2496 1188 2738 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[-111 2496 -111 1980 -111 2496 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[1188 2222 1188 2738 1188 2222 
] dogrey 
4 Setcolor
/absolu true def
15 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 6 [ 2]
[1188 2222 -111 1980 1188 2222 
] dogrey 
4 Setcolor
/absolu true def
0 Setcolor
5 Thickness
[] 0 setdash
[] 0 setdash
 (drawsegs) 12 [ 0]
[3349 2506 5250 1015 3349 2506 750 2021 3349 2506 3349 3710 
] dogrey 
[] 0 setdash
[] 0 setdash
15 Thickness
4 Setcolor
%Latex:\end{picture}
 showpage

 end saved restore 


