%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 19 581 822 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
90 rotate 0 neg 2261 neg 10 div translate
[2.674194 20 div 0 0 2.674194 20 div neg 198 10 div 2120 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
0 Setcolor
5 Thickness
750 530 4500 3180 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
0 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 530 750 3710 5250 3710 5250 530 750 530 
] dogrey 
33 Setcolor
/absolu true def
0 Setcolor
[] 0 setdash
0 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[750 3710 750 530 
] dogrey 
 (drawsegs) 4 [ 0]
[1393 3710 1393 530 
] dogrey 
 (drawsegs) 4 [ 0]
[2036 3710 2036 530 
] dogrey 
 (drawsegs) 4 [ 0]
[2679 3710 2679 530 
] dogrey 
 (drawsegs) 4 [ 0]
[3321 3710 3321 530 
] dogrey 
 (drawsegs) 4 [ 0]
[3964 3710 3964 530 
] dogrey 
 (drawsegs) 4 [ 0]
[4607 3710 4607 530 
] dogrey 
 (drawsegs) 4 [ 0]
[5250 3710 5250 530 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 0]
[750 3710 5250 3710 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3074 5250 3074 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2438 5250 2438 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1802 5250 1802 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1166 5250 1166 
] dogrey 
 (drawsegs) 4 [ 0]
[750 530 5250 530 
] dogrey 
[] 0 setdash
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4508 2877 6 13 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4700 2877 6 13 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4508 3258 6 13 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4700 3258 6 13 0 23040 
] dogrey 
0 Setcolor
4 Setcolor
5 Thickness
[70 20 20 20 ] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[70 20 20 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4501 2881 4490 2879 4480 2876 4468 2873 4457 2869 4445 2865 4433 2860 4420 2855 4407 2849 4393 2843 
4379 2836 4364 2828 4349 2819 4333 2810 4317 2800 4300 2789 4282 2777 4263 2764 4244 2750 4224 2735 
4203 2719 4181 2702 4158 2683 4134 2663 4109 2641 4083 2618 4055 2592 4026 2565 3996 2535 3963 2504 
3929 2469 3893 2432 3854 2392 3813 2349 3770 2301 3723 2250 3673 2194 3620 2133 3562 2067 3499 1993 
3432 1913 3358 1824 3277 1726 3188 1616 3089 1494 2980 1356 2858 1201 2720 1024 2563 822 2382 587 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[70 20 20 20 ] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[70 20 20 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4697 2889 4689 2895 4682 2900 4674 2905 4665 2911 4657 2915 4648 2920 4638 2925 4628 2929 4618 2933 
4607 2936 4596 2940 4584 2943 4571 2946 4558 2948 4545 2950 4531 2951 4516 2952 4500 2953 4484 2953 
4467 2952 4449 2951 4430 2950 4410 2947 4390 2944 4368 2940 4344 2935 4320 2929 4294 2922 4266 2914 
4237 2905 4206 2894 4173 2882 4138 2869 4101 2853 4060 2836 4017 2816 3971 2794 3920 2769 3866 2741 
3807 2709 3742 2673 3671 2633 3593 2587 3507 2535 3411 2475 3303 2407 3181 2328 3042 2237 2883 2131 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[70 20 20 20 ] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[70 20 20 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4497 3269 4482 3273 4467 3276 4452 3279 4436 3282 4420 3284 4402 3285 4385 3286 4367 3287 4348 3287 
4328 3287 4308 3285 4287 3284 4265 3281 4242 3278 4218 3274 4194 3269 4168 3264 4142 3257 4114 3250 
4085 3241 4055 3232 4024 3221 3991 3209 3956 3195 3920 3181 3882 3164 3842 3146 3800 3126 3756 3104 
3709 3080 3659 3053 3606 3024 3551 2992 3491 2956 3427 2918 3359 2875 3286 2828 3207 2776 3122 2719 
3029 2656 2929 2585 2818 2506 2697 2419 2564 2320 2415 2208 2248 2082 2061 1937 1847 1771 1602 1578 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[70 20 20 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[70 20 20 20 ] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4693 3277 4681 3288 4670 3300 4657 3312 4644 3323 4631 3334 4617 3345 4603 3356 4588 3367 4572 3377 
4556 3387 4539 3397 4521 3407 4503 3417 4484 3426 4464 3435 4443 3444 4421 3452 4398 3460 4374 3467 
4349 3475 4323 3481 4296 3487 4267 3493 4236 3498 4205 3503 4171 3507 4136 3510 4098 3513 4059 3514 
4017 3515 3973 3515 3926 3514 3875 3512 3822 3508 3765 3503 3703 3497 3637 3488 3566 3478 3488 3466 
3405 3451 3313 3434 3213 3413 3103 3389 2981 3361 2845 3327 2693 3288 2522 3241 2327 3187 2103 3122 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4501 2881 4489 2881 4478 2881 4466 2880 4453 2879 4441 2877 4427 2875 4413 2873 4399 2869 4384 2866 
4369 2861 4353 2856 4336 2851 4318 2844 4300 2837 4282 2829 4262 2820 4242 2811 4220 2800 4198 2788 
4175 2775 4150 2761 4125 2746 4098 2729 4070 2710 4040 2691 4009 2669 3976 2645 3942 2620 3905 2592 
3866 2561 3825 2528 3781 2492 3734 2452 3684 2409 3630 2362 3572 2310 3510 2253 3442 2190 3369 2121 
3289 2044 3201 1959 3104 1863 2997 1756 2878 1635 2744 1498 2593 1341 2420 1160 2222 951 1991 704 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4697 2889 4689 2897 4680 2905 4672 2913 4662 2921 4653 2929 4643 2936 4632 2944 4622 2951 4610 2958 
4598 2965 4586 2971 4573 2977 4559 2983 4545 2989 4530 2994 4514 2999 4497 3004 4480 3008 4462 3012 
4443 3015 4423 3018 4402 3021 4379 3022 4356 3024 4331 3024 4305 3024 4277 3023 4248 3021 4217 3018 
4184 3015 4148 3010 4111 3004 4070 2996 4027 2987 3981 2976 3931 2964 3877 2949 3818 2932 3754 2912 
3684 2889 3608 2862 3523 2832 3430 2796 3325 2755 3208 2707 3075 2651 2924 2586 2750 2508 2546 2416 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4497 3269 4481 3275 4466 3281 4449 3287 4432 3292 4415 3297 4396 3302 4377 3306 4358 3310 4337 3313 
4316 3315 4295 3318 4272 3319 4248 3320 4224 3320 4198 3320 4172 3318 4144 3316 4115 3314 4085 3310 
4053 3305 4020 3300 3986 3293 3950 3285 3912 3276 3872 3265 3830 3253 3785 3240 3739 3224 3689 3207 
3637 3188 3581 3167 3522 3143 3459 3116 3392 3087 3320 3054 3242 3017 3158 2977 3068 2931 2970 2880 
2862 2824 2745 2760 2615 2688 2472 2607 2313 2515 2134 2410 1932 2289 1701 2149 1436 1986 1127 1793 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4693 3277 4681 3291 4668 3306 4655 3320 4641 3335 4627 3349 4612 3363 4597 3377 4580 3391 4564 3405 
4546 3419 4528 3432 4509 3445 4489 3459 4468 3472 4446 3485 4423 3497 4400 3510 4375 3522 4349 3534 
4321 3545 4293 3557 4263 3568 4231 3578 4198 3589 4163 3599 4126 3608 4086 3617 4045 3626 4001 3634 
3955 3641 3905 3648 3852 3654 3796 3659 3736 3664 3671 3667 3601 3670 3526 3671 3444 3671 3355 3670 
3258 3667 3152 3662 3035 3655 2905 3645 2761 3633 2599 3617 2415 3597 2206 3572 1966 3540 1686 3501 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-6) 706 3874 0  0.00 [706 3774 88 99] Show
%Latex:\myput{706}{366}{5}{-6}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 750 3773 
] dogrey 
0 Setcolor
32 Setcolor
(-5) 1349 3874 0  0.00 [1349 3774 88 99] Show
%Latex:\myput{1349}{366}{5}{-5}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[1393 3710 1393 3773 
] dogrey 
0 Setcolor
32 Setcolor
(-4) 1992 3874 0  0.00 [1992 3774 88 99] Show
%Latex:\myput{1992}{366}{5}{-4}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[2036 3710 2036 3773 
] dogrey 
0 Setcolor
32 Setcolor
(-3) 2635 3874 0  0.00 [2635 3774 88 99] Show
%Latex:\myput{2635}{366}{5}{-3}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[2679 3710 2679 3773 
] dogrey 
0 Setcolor
32 Setcolor
(-2) 3277 3874 0  0.00 [3277 3774 88 99] Show
%Latex:\myput{3277}{366}{5}{-2}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[3321 3710 3321 3773 
] dogrey 
0 Setcolor
32 Setcolor
(-1) 3920 3874 0  0.00 [3920 3774 88 99] Show
%Latex:\myput{3920}{366}{5}{-1}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[3964 3710 3964 3773 
] dogrey 
0 Setcolor
32 Setcolor
(0) 4580 3874 0  0.00 [4580 3774 55 99] Show
%Latex:\myput{4580}{366}{5}{0}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[4607 3710 4607 3773 
] dogrey 
0 Setcolor
32 Setcolor
(1) 5223 3874 0  0.00 [5223 3774 55 99] Show
%Latex:\myput{5223}{366}{5}{1}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[5250 3710 5250 3773 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 750 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[964 3710 964 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[1179 3710 1179 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[1393 3710 1393 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[1607 3710 1607 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[1821 3710 1821 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[2036 3710 2036 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[2250 3710 2250 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[2464 3710 2464 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[2679 3710 2679 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[2893 3710 2893 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[3107 3710 3107 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[3321 3710 3321 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[3536 3710 3536 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[3750 3710 3750 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[3964 3710 3964 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[4179 3710 4179 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[4393 3710 4393 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[4607 3710 4607 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[4821 3710 4821 3757 
] dogrey 
 (drawsegs) 4 [ 0]
[5036 3710 5036 3757 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-0.5) 506 3749 0  0.00 [506 3649 172 99] Show
%Latex:\myput{506}{491}{5}{-0.5}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 690 3710 
] dogrey 
0 Setcolor
32 Setcolor
(0.0) 539 3113 0  0.00 [539 3013 139 99] Show
%Latex:\myput{539}{1127}{5}{0.0}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3074 690 3074 
] dogrey 
0 Setcolor
32 Setcolor
(0.5) 539 2477 0  0.00 [539 2377 139 99] Show
%Latex:\myput{539}{1763}{5}{0.5}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2438 690 2438 
] dogrey 
0 Setcolor
32 Setcolor
(1.0) 539 1841 0  0.00 [539 1741 139 99] Show
%Latex:\myput{539}{2399}{5}{1.0}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 1802 690 1802 
] dogrey 
0 Setcolor
32 Setcolor
(1.5) 539 1205 0  0.00 [539 1105 139 99] Show
%Latex:\myput{539}{3035}{5}{1.5}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 1166 690 1166 
] dogrey 
0 Setcolor
32 Setcolor
(2.0) 539 569 0  0.00 [539 469 139 99] Show
%Latex:\myput{539}{3671}{5}{2.0}
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 530 690 530 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 705 3710 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3551 705 3551 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3392 705 3392 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3233 705 3233 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3074 705 3074 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2915 705 2915 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2756 705 2756 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2597 705 2597 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2438 705 2438 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2279 705 2279 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2120 705 2120 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1961 705 1961 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1802 705 1802 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1643 705 1643 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1484 705 1484 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1325 705 1325 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1166 705 1166 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1007 705 1007 
] dogrey 
 (drawsegs) 4 [ 0]
[750 848 705 848 
] dogrey 
 (drawsegs) 4 [ 0]
[750 689 705 689 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 5250 3710 
] dogrey 
0 Setcolor
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3710 750 530 
] dogrey 
0 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
0 Setcolor
[] 0 setdash
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
0 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 


