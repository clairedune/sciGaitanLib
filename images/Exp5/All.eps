%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 19 581 822 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
90 rotate 0 neg 2261 neg 10 div translate
[2.674194 20 div 0 0 2.674194 20 div neg 198 10 div 2120 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
3 Setcolor
5 Thickness
750 530 4500 3180 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
3 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 530 750 3710 5250 3710 5250 530 750 530 
] dogrey 
33 Setcolor
/absolu true def
3 Setcolor
[] 0 setdash
3 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3710 750 530 
] dogrey 
 (drawsegs) 4 [ 3]
[1393 3710 1393 530 
] dogrey 
 (drawsegs) 4 [ 3]
[2036 3710 2036 530 
] dogrey 
 (drawsegs) 4 [ 3]
[2679 3710 2679 530 
] dogrey 
 (drawsegs) 4 [ 3]
[3321 3710 3321 530 
] dogrey 
 (drawsegs) 4 [ 3]
[3964 3710 3964 530 
] dogrey 
 (drawsegs) 4 [ 3]
[4607 3710 4607 530 
] dogrey 
 (drawsegs) 4 [ 3]
[5250 3710 5250 530 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3710 5250 3710 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3180 5250 3180 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2650 5250 2650 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2120 5250 2120 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1590 5250 1590 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1060 5250 1060 
] dogrey 
 (drawsegs) 4 [ 3]
[750 530 5250 530 
] dogrey 
[] 0 setdash
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4508 2486 6 11 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4700 2486 6 11 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4508 2804 6 11 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4700 2804 6 11 0 23040 
] dogrey 
0 Setcolor
0 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4501 2489 4490 2487 4480 2485 4468 2482 4457 2479 4445 2476 4433 2472 4420 2468 4407 2463 4393 2457 
4379 2451 4364 2445 4349 2438 4333 2430 4317 2422 4300 2413 4282 2403 4263 2392 4244 2380 4224 2368 
4203 2354 4181 2340 4158 2324 4134 2307 4109 2289 4083 2270 4055 2249 4026 2226 3996 2201 3963 2175 
3929 2146 3893 2115 3854 2082 3813 2046 3770 2006 3723 1963 3673 1917 3620 1866 3562 1811 3499 1750 
3432 1682 3358 1608 3277 1526 3188 1435 3089 1333 2980 1219 2858 1089 2720 942 2563 773 2382 578 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4697 2496 4689 2501 4682 2505 4674 2510 4665 2514 4657 2518 4648 2522 4638 2526 4628 2529 4618 2532 
4607 2535 4596 2538 4584 2541 4571 2543 4558 2545 4545 2546 4531 2548 4516 2549 4500 2549 4484 2549 
4467 2549 4449 2548 4430 2546 4410 2544 4390 2542 4368 2538 4344 2534 4320 2529 4294 2524 4266 2517 
4237 2509 4206 2500 4173 2490 4138 2479 4101 2466 4060 2451 4017 2435 3971 2416 3920 2396 3866 2372 
3807 2346 3742 2316 3671 2282 3593 2244 3507 2201 3411 2151 3303 2094 3181 2029 3042 1953 2883 1864 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4497 2812 4482 2816 4467 2818 4452 2821 4436 2823 4420 2825 4402 2826 4385 2827 4367 2828 4348 2828 
4328 2827 4308 2826 4287 2825 4265 2823 4242 2820 4218 2817 4194 2813 4168 2808 4142 2803 4114 2797 
4085 2789 4055 2781 4024 2772 3991 2762 3956 2751 3920 2739 3882 2725 3842 2710 3800 2693 3756 2675 
3709 2655 3659 2632 3606 2608 3551 2581 3491 2552 3427 2520 3359 2484 3286 2445 3207 2402 3122 2354 
3029 2301 2929 2243 2818 2177 2697 2104 2564 2021 2415 1929 2248 1823 2061 1703 1847 1564 1602 1403 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4693 2819 4681 2829 4670 2838 4657 2848 4644 2857 4631 2867 4617 2876 4603 2885 4588 2894 4572 2903 
4556 2911 4539 2920 4521 2928 4503 2936 4484 2943 4464 2951 4443 2958 4421 2965 4398 2972 4374 2978 
4349 2984 4323 2989 4296 2995 4267 2999 4236 3004 4205 3007 4171 3011 4136 3013 4098 3016 4059 3017 
4017 3018 3973 3018 3926 3017 3875 3015 3822 3012 3765 3008 3703 3002 3637 2995 3566 2987 3488 2977 
3405 2964 3313 2950 3213 2933 3103 2913 2981 2889 2845 2861 2693 2828 2522 2790 2327 2744 2103 2690 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4523 2564 4512 2564 4500 2563 4488 2563 4476 2562 4463 2560 4450 2559 4436 2556 4421 2554 4406 2551 
4391 2547 4375 2543 4358 2538 4341 2533 4323 2527 4304 2520 4284 2513 4264 2505 4243 2496 4220 2486 
4197 2475 4173 2463 4147 2451 4120 2437 4092 2421 4063 2405 4032 2387 3999 2367 3964 2345 3927 2322 
3889 2297 3847 2269 3803 2239 3756 2206 3706 2170 3653 2131 3595 2088 3532 2040 3465 1988 3391 1930 
3311 1866 3223 1795 3127 1715 3020 1626 2900 1525 2767 1411 2615 1280 2443 1130 2244 955 2013 749 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4723 2570 4715 2577 4707 2584 4698 2591 4689 2597 4679 2604 4669 2610 4659 2616 4648 2622 4637 2628 
4625 2633 4612 2639 4599 2644 4585 2649 4571 2654 4556 2658 4540 2662 4524 2666 4506 2670 4488 2673 
4469 2676 4449 2678 4428 2680 4406 2682 4382 2683 4358 2683 4331 2683 4304 2682 4274 2681 4243 2678 
4210 2675 4175 2671 4137 2666 4097 2660 4054 2652 4007 2643 3957 2632 3903 2620 3844 2606 3780 2589 
3711 2570 3634 2548 3550 2522 3456 2493 3352 2459 3234 2419 3102 2372 2950 2318 2776 2253 2573 2176 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4519 2893 4504 2899 4488 2904 4471 2909 4454 2913 4437 2917 4419 2921 4400 2924 4380 2927 4360 2930 
4339 2932 4317 2934 4294 2935 4270 2936 4246 2936 4220 2936 4194 2935 4166 2933 4137 2931 4107 2928 
4075 2924 4042 2919 4008 2913 3972 2907 3934 2899 3894 2890 3852 2880 3808 2869 3761 2856 3712 2842 
3659 2826 3604 2808 3545 2788 3482 2766 3414 2742 3342 2714 3264 2684 3181 2650 3090 2612 2992 2570 
2884 2522 2767 2469 2638 2409 2494 2342 2335 2265 2156 2177 1954 2077 1724 1960 1458 1824 1150 1664 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4719 2900 4707 2912 4694 2924 4681 2936 4667 2948 4653 2960 4638 2972 4623 2984 4607 2995 4590 3007 
4572 3018 4554 3030 4535 3041 4515 3052 4494 3063 4472 3073 4450 3084 4426 3094 4401 3104 4375 3114 
4348 3124 4319 3133 4289 3143 4257 3151 4224 3160 4189 3168 4152 3176 4113 3184 4071 3191 4027 3198 
3981 3204 3931 3209 3879 3215 3822 3219 3762 3223 3697 3226 3627 3228 3552 3229 3470 3229 3381 3228 
3285 3225 3178 3221 3061 3215 2932 3207 2787 3197 2625 3184 2442 3167 2233 3146 1992 3120 1712 3087 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4502 2486 4492 2484 4481 2482 4470 2479 4459 2476 4447 2473 4435 2469 4422 2464 4409 2459 4396 2454 
4381 2448 4367 2442 4352 2435 4336 2427 4320 2418 4303 2409 4285 2400 4267 2389 4248 2377 4228 2365 
4207 2352 4185 2337 4163 2321 4139 2305 4114 2287 4088 2267 4060 2246 4031 2223 4001 2199 3969 2173 
3935 2144 3899 2113 3861 2080 3820 2044 3777 2005 3731 1963 3681 1916 3628 1866 3571 1810 3509 1750 
3442 1683 3369 1610 3289 1528 3201 1438 3103 1337 2995 1223 2874 1095 2738 948 2583 781 2405 587 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4698 2492 4691 2497 4683 2502 4675 2506 4667 2510 4658 2514 4649 2518 4640 2522 4630 2526 4620 2529 
4609 2532 4598 2535 4586 2537 4574 2539 4561 2541 4548 2543 4534 2544 4519 2545 4504 2546 4487 2546 
4470 2545 4453 2544 4434 2543 4414 2541 4394 2538 4372 2535 4349 2531 4325 2526 4299 2521 4272 2514 
4243 2506 4212 2498 4179 2488 4145 2476 4107 2464 4067 2449 4025 2433 3979 2414 3929 2394 3875 2371 
3816 2344 3752 2315 3682 2281 3605 2244 3519 2201 3424 2152 3318 2095 3197 2031 3060 1955 2903 1867 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4498 2809 4484 2812 4469 2815 4454 2817 4438 2819 4422 2821 4405 2822 4387 2823 4369 2824 4350 2824 
4331 2824 4310 2823 4290 2821 4268 2819 4245 2816 4222 2813 4197 2809 4172 2805 4146 2799 4118 2793 
4089 2786 4059 2778 4028 2769 3995 2759 3961 2748 3925 2736 3887 2722 3848 2707 3806 2690 3762 2672 
3715 2652 3666 2630 3614 2606 3558 2579 3499 2550 3436 2518 3368 2482 3295 2444 3217 2401 3133 2353 
3041 2301 2941 2242 2832 2177 2712 2104 2579 2023 2432 1931 2267 1826 2082 1707 1871 1569 1628 1410 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4694 2815 4683 2825 4671 2835 4659 2844 4646 2854 4633 2863 4619 2872 4605 2881 4590 2890 4575 2899 
4558 2907 4541 2916 4524 2924 4506 2932 4487 2939 4467 2947 4446 2954 4424 2961 4401 2968 4378 2974 
4353 2980 4327 2986 4300 2991 4271 2995 4241 3000 4209 3004 4176 3007 4141 3010 4104 3012 4065 3013 
4023 3014 3979 3014 3932 3013 3882 3011 3829 3008 3772 3004 3711 2999 3646 2992 3575 2984 3498 2974 
3415 2962 3325 2947 3225 2930 3116 2910 2995 2887 2861 2859 2711 2827 2541 2789 2348 2744 2127 2690 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4501 2489 4489 2489 4478 2489 4466 2489 4453 2488 4441 2486 4427 2484 4413 2482 4399 2480 4384 2476 
4369 2473 4353 2469 4336 2464 4318 2459 4300 2453 4282 2446 4262 2439 4242 2430 4220 2422 4198 2412 
4175 2401 4150 2389 4125 2376 4098 2362 4070 2347 4040 2330 4009 2312 3976 2293 3942 2271 3905 2248 
3866 2223 3825 2195 3781 2165 3734 2132 3684 2096 3630 2057 3572 2013 3510 1966 3442 1914 3369 1856 
3289 1792 3201 1720 3104 1641 2997 1552 2878 1451 2744 1336 2593 1206 2420 1055 2222 881 1991 675 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4697 2496 4689 2503 4680 2509 4672 2516 4662 2523 4653 2529 4643 2535 4632 2541 4622 2547 4610 2553 
4598 2559 4586 2564 4573 2569 4559 2574 4545 2579 4530 2584 4514 2588 4497 2592 4480 2595 4462 2598 
4443 2601 4423 2604 4402 2606 4379 2607 4356 2608 4331 2609 4305 2608 4277 2608 4248 2606 4217 2604 
4184 2601 4148 2596 4111 2591 4070 2585 4027 2577 3981 2569 3931 2558 3877 2546 3818 2531 3754 2515 
3684 2496 3608 2473 3523 2448 3430 2418 3325 2384 3208 2344 3075 2298 2924 2243 2750 2178 2546 2101 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4497 2812 4481 2818 4466 2823 4449 2828 4432 2832 4415 2836 4396 2840 4377 2843 4358 2846 4337 2849 
4316 2851 4295 2853 4272 2854 4248 2855 4224 2855 4198 2855 4172 2854 4144 2852 4115 2850 4085 2847 
4053 2843 4020 2838 3986 2832 3950 2826 3912 2818 3872 2809 3830 2799 3785 2788 3739 2775 3689 2761 
3637 2745 3581 2727 3522 2707 3459 2685 3392 2661 3320 2633 3242 2603 3158 2569 3068 2531 2970 2489 
2862 2441 2745 2388 2615 2328 2472 2261 2313 2184 2134 2096 1932 1996 1701 1879 1436 1743 1127 1583 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4693 2819 4681 2831 4668 2843 4655 2855 4641 2867 4627 2879 4612 2891 4597 2903 4580 2914 4564 2926 
4546 2937 4528 2948 4509 2960 4489 2971 4468 2981 4446 2992 4423 3003 4400 3013 4375 3023 4349 3033 
4321 3043 4293 3052 4263 3061 4231 3070 4198 3079 4163 3087 4126 3095 4086 3103 4045 3110 4001 3116 
3955 3123 3905 3128 3852 3133 3796 3138 3736 3142 3671 3145 3601 3147 3526 3148 3444 3148 3355 3147 
3258 3144 3152 3140 3035 3134 2905 3126 2761 3116 2599 3102 2415 3086 2206 3065 1966 3039 1686 3006 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
3 Setcolor
5 Thickness
[] 0 setdash
3 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-6) 706 3874 0  0.00 [706 3774 88 99] Show
%Latex:\myput{706}{366}{5}{-6}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 750 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-5) 1349 3874 0  0.00 [1349 3774 88 99] Show
%Latex:\myput{1349}{366}{5}{-5}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[1393 3710 1393 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-4) 1992 3874 0  0.00 [1992 3774 88 99] Show
%Latex:\myput{1992}{366}{5}{-4}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[2036 3710 2036 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-3) 2635 3874 0  0.00 [2635 3774 88 99] Show
%Latex:\myput{2635}{366}{5}{-3}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[2679 3710 2679 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-2) 3277 3874 0  0.00 [3277 3774 88 99] Show
%Latex:\myput{3277}{366}{5}{-2}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[3321 3710 3321 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-1) 3920 3874 0  0.00 [3920 3774 88 99] Show
%Latex:\myput{3920}{366}{5}{-1}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[3964 3710 3964 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0) 4580 3874 0  0.00 [4580 3774 55 99] Show
%Latex:\myput{4580}{366}{5}{0}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[4607 3710 4607 3773 
] dogrey 
3 Setcolor
32 Setcolor
(1) 5223 3874 0  0.00 [5223 3774 55 99] Show
%Latex:\myput{5223}{366}{5}{1}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[5250 3710 5250 3773 
] dogrey 
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 750 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[964 3710 964 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1179 3710 1179 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1393 3710 1393 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1607 3710 1607 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1821 3710 1821 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2036 3710 2036 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2250 3710 2250 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2464 3710 2464 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2679 3710 2679 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2893 3710 2893 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3107 3710 3107 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3321 3710 3321 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3536 3710 3536 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3750 3710 3750 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3964 3710 3964 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4179 3710 4179 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4393 3710 4393 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4607 3710 4607 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4821 3710 4821 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[5036 3710 5036 3757 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-1.0) 506 3749 0  0.00 [506 3649 172 99] Show
%Latex:\myput{506}{491}{5}{-1.0}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 690 3710 
] dogrey 
3 Setcolor
32 Setcolor
(-0.5) 506 3219 0  0.00 [506 3119 172 99] Show
%Latex:\myput{506}{1021}{5}{-0.5}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3180 690 3180 
] dogrey 
3 Setcolor
32 Setcolor
(0.0) 539 2689 0  0.00 [539 2589 139 99] Show
%Latex:\myput{539}{1551}{5}{0.0}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 2650 690 2650 
] dogrey 
3 Setcolor
32 Setcolor
(0.5) 539 2159 0  0.00 [539 2059 139 99] Show
%Latex:\myput{539}{2081}{5}{0.5}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 2120 690 2120 
] dogrey 
3 Setcolor
32 Setcolor
(1.0) 539 1629 0  0.00 [539 1529 139 99] Show
%Latex:\myput{539}{2611}{5}{1.0}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 1590 690 1590 
] dogrey 
3 Setcolor
32 Setcolor
(1.5) 539 1099 0  0.00 [539 999 139 99] Show
%Latex:\myput{539}{3141}{5}{1.5}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 1060 690 1060 
] dogrey 
3 Setcolor
32 Setcolor
(2.0) 539 569 0  0.00 [539 469 139 99] Show
%Latex:\myput{539}{3671}{5}{2.0}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 530 690 530 
] dogrey 
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 705 3710 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3578 705 3578 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3445 705 3445 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3313 705 3313 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3180 705 3180 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3048 705 3048 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2915 705 2915 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2783 705 2783 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2650 705 2650 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2518 705 2518 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2385 705 2385 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2253 705 2253 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2120 705 2120 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1988 705 1988 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1855 705 1855 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1723 705 1723 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1590 705 1590 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1458 705 1458 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1325 705 1325 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1193 705 1193 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1060 705 1060 
] dogrey 
 (drawsegs) 4 [ 3]
[750 928 705 928 
] dogrey 
 (drawsegs) 4 [ 3]
[750 795 705 795 
] dogrey 
 (drawsegs) 4 [ 3]
[750 663 705 663 
] dogrey 
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 5250 3710 
] dogrey 
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 750 530 
] dogrey 
3 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
3 Setcolor
[] 0 setdash
3 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
3 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 


