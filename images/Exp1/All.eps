%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 220 581 621 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[1.889764 20 div 0 0 1.889764 20 div neg 141 10 div 6212 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
3 Setcolor
5 Thickness
750 530 4500 3180 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
3 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 530 750 3710 5250 3710 5250 530 750 530 
] dogrey 
33 Setcolor
/absolu true def
3 Setcolor
[] 0 setdash
3 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3710 750 530 
] dogrey 
 (drawsegs) 4 [ 3]
[1393 3710 1393 530 
] dogrey 
 (drawsegs) 4 [ 3]
[2036 3710 2036 530 
] dogrey 
 (drawsegs) 4 [ 3]
[2679 3710 2679 530 
] dogrey 
 (drawsegs) 4 [ 3]
[3321 3710 3321 530 
] dogrey 
 (drawsegs) 4 [ 3]
[3964 3710 3964 530 
] dogrey 
 (drawsegs) 4 [ 3]
[4607 3710 4607 530 
] dogrey 
 (drawsegs) 4 [ 3]
[5250 3710 5250 530 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3710 5250 3710 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3392 5250 3392 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3074 5250 3074 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2756 5250 2756 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2438 5250 2438 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2120 5250 2120 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1802 5250 1802 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1484 5250 1484 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1166 5250 1166 
] dogrey 
 (drawsegs) 4 [ 3]
[750 848 5250 848 
] dogrey 
 (drawsegs) 4 [ 3]
[750 530 5250 530 
] dogrey 
[] 0 setdash
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[2325 1134 64 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4254 1134 64 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[2325 3042 64 64 0 23040 
] dogrey 
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (fillarc) 6 [ 0]
[4254 3042 64 64 0 23040 
] dogrey 
0 Setcolor
0 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[2331 1166 2306 1166 2280 1166 2254 1166 2229 1166 2203 1166 2177 1166 2151 1166 2126 1166 2100 1166 
2074 1166 2049 1166 2023 1166 1997 1166 1971 1166 1946 1166 1920 1166 1894 1166 1869 1166 1843 1166 
1817 1166 1791 1166 1766 1166 1740 1166 1714 1166 1689 1166 1663 1166 1637 1166 1611 1166 1586 1166 
1560 1166 1534 1166 1509 1166 1483 1166 1457 1166 1431 1166 1406 1166 1380 1166 1354 1166 1329 1166 
1303 1166 1277 1166 1251 1166 1226 1166 1200 1166 1174 1166 1149 1166 1123 1166 1097 1166 1071 1166 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4260 1166 4234 1166 4209 1166 4183 1166 4157 1166 4131 1166 4106 1166 4080 1166 4054 1166 4029 1166 
4003 1166 3977 1166 3951 1166 3926 1166 3900 1166 3874 1166 3849 1166 3823 1166 3797 1166 3771 1166 
3746 1166 3720 1166 3694 1166 3669 1166 3643 1166 3617 1166 3591 1166 3566 1166 3540 1166 3514 1166 
3489 1166 3463 1166 3437 1166 3411 1166 3386 1166 3360 1166 3334 1166 3309 1166 3283 1166 3257 1166 
3231 1166 3206 1166 3180 1166 3154 1166 3129 1166 3103 1166 3077 1166 3051 1166 3026 1166 3000 1166 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[2331 3074 2306 3074 2280 3074 2254 3074 2229 3074 2203 3074 2177 3074 2151 3074 2126 3074 2100 3074 
2074 3074 2049 3074 2023 3074 1997 3074 1971 3074 1946 3074 1920 3074 1894 3074 1869 3074 1843 3074 
1817 3074 1791 3074 1766 3074 1740 3074 1714 3074 1689 3074 1663 3074 1637 3074 1611 3074 1586 3074 
1560 3074 1534 3074 1509 3074 1483 3074 1457 3074 1431 3074 1406 3074 1380 3074 1354 3074 1329 3074 
1303 3074 1277 3074 1251 3074 1226 3074 1200 3074 1174 3074 1149 3074 1123 3074 1097 3074 1071 3074 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4260 3074 4234 3074 4209 3074 4183 3074 4157 3074 4131 3074 4106 3074 4080 3074 4054 3074 4029 3074 
4003 3074 3977 3074 3951 3074 3926 3074 3900 3074 3874 3074 3849 3074 3823 3074 3797 3074 3771 3074 
3746 3074 3720 3074 3694 3074 3669 3074 3643 3074 3617 3074 3591 3074 3566 3074 3540 3074 3514 3074 
3489 3074 3463 3074 3437 3074 3411 3074 3386 3074 3360 3074 3334 3074 3309 3074 3283 3074 3257 3074 
3231 3074 3206 3074 3180 3074 3154 3074 3129 3074 3103 3074 3077 3074 3051 3074 3026 3074 3000 3074 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[2589 1611 2563 1611 2537 1611 2511 1611 2486 1611 2460 1611 2434 1611 2409 1611 2383 1611 2357 1611 
2331 1611 2306 1611 2280 1611 2254 1611 2229 1611 2203 1611 2177 1611 2151 1611 2126 1611 2100 1611 
2074 1611 2049 1611 2023 1611 1997 1611 1971 1611 1946 1611 1920 1611 1894 1611 1869 1611 1843 1611 
1817 1611 1791 1611 1766 1611 1740 1611 1714 1611 1689 1611 1663 1611 1637 1611 1611 1611 1586 1611 
1560 1611 1534 1611 1509 1611 1483 1611 1457 1611 1431 1611 1406 1611 1380 1611 1354 1611 1329 1611 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4517 1611 4491 1611 4466 1611 4440 1611 4414 1611 4389 1611 4363 1611 4337 1611 4311 1611 4286 1611 
4260 1611 4234 1611 4209 1611 4183 1611 4157 1611 4131 1611 4106 1611 4080 1611 4054 1611 4029 1611 
4003 1611 3977 1611 3951 1611 3926 1611 3900 1611 3874 1611 3849 1611 3823 1611 3797 1611 3771 1611 
3746 1611 3720 1611 3694 1611 3669 1611 3643 1611 3617 1611 3591 1611 3566 1611 3540 1611 3514 1611 
3489 1611 3463 1611 3437 1611 3411 1611 3386 1611 3360 1611 3334 1611 3309 1611 3283 1611 3257 1611 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[2589 3519 2563 3519 2537 3519 2511 3519 2486 3519 2460 3519 2434 3519 2409 3519 2383 3519 2357 3519 
2331 3519 2306 3519 2280 3519 2254 3519 2229 3519 2203 3519 2177 3519 2151 3519 2126 3519 2100 3519 
2074 3519 2049 3519 2023 3519 1997 3519 1971 3519 1946 3519 1920 3519 1894 3519 1869 3519 1843 3519 
1817 3519 1791 3519 1766 3519 1740 3519 1714 3519 1689 3519 1663 3519 1637 3519 1611 3519 1586 3519 
1560 3519 1534 3519 1509 3519 1483 3519 1457 3519 1431 3519 1406 3519 1380 3519 1354 3519 1329 3519 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4517 3519 4491 3519 4466 3519 4440 3519 4414 3519 4389 3519 4363 3519 4337 3519 4311 3519 4286 3519 
4260 3519 4234 3519 4209 3519 4183 3519 4157 3519 4131 3519 4106 3519 4080 3519 4054 3519 4029 3519 
4003 3519 3977 3519 3951 3519 3926 3519 3900 3519 3874 3519 3849 3519 3823 3519 3797 3519 3771 3519 
3746 3519 3720 3519 3694 3519 3669 3519 3643 3519 3617 3519 3591 3519 3566 3519 3540 3519 3514 3519 
3489 3519 3463 3519 3437 3519 3411 3519 3386 3519 3360 3519 3334 3519 3309 3519 3283 3519 3257 3519 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[2331 1166 2306 1166 2280 1166 2254 1166 2229 1166 2203 1166 2177 1166 2151 1166 2126 1166 2100 1166 
2074 1166 2049 1166 2023 1166 1997 1166 1971 1166 1946 1166 1920 1166 1894 1166 1869 1166 1843 1166 
1817 1166 1791 1166 1766 1166 1740 1166 1714 1166 1689 1166 1663 1166 1637 1166 1611 1166 1586 1166 
1560 1166 1534 1166 1509 1166 1483 1166 1457 1166 1431 1166 1406 1166 1380 1166 1354 1166 1329 1166 
1303 1166 1277 1166 1251 1166 1226 1166 1200 1166 1174 1166 1149 1166 1123 1166 1097 1166 1071 1166 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4260 1166 4234 1166 4209 1166 4183 1166 4157 1166 4131 1166 4106 1166 4080 1166 4054 1166 4029 1166 
4003 1166 3977 1166 3951 1166 3926 1166 3900 1166 3874 1166 3849 1166 3823 1166 3797 1166 3771 1166 
3746 1166 3720 1166 3694 1166 3669 1166 3643 1166 3617 1166 3591 1166 3566 1166 3540 1166 3514 1166 
3489 1166 3463 1166 3437 1166 3411 1166 3386 1166 3360 1166 3334 1166 3309 1166 3283 1166 3257 1166 
3231 1166 3206 1166 3180 1166 3154 1166 3129 1166 3103 1166 3077 1166 3051 1166 3026 1166 3000 1166 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[2331 3074 2306 3074 2280 3074 2254 3074 2229 3074 2203 3074 2177 3074 2151 3074 2126 3074 2100 3074 
2074 3074 2049 3074 2023 3074 1997 3074 1971 3074 1946 3074 1920 3074 1894 3074 1869 3074 1843 3074 
1817 3074 1791 3074 1766 3074 1740 3074 1714 3074 1689 3074 1663 3074 1637 3074 1611 3074 1586 3074 
1560 3074 1534 3074 1509 3074 1483 3074 1457 3074 1431 3074 1406 3074 1380 3074 1354 3074 1329 3074 
1303 3074 1277 3074 1251 3074 1226 3074 1200 3074 1174 3074 1149 3074 1123 3074 1097 3074 1071 3074 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4260 3074 4234 3074 4209 3074 4183 3074 4157 3074 4131 3074 4106 3074 4080 3074 4054 3074 4029 3074 
4003 3074 3977 3074 3951 3074 3926 3074 3900 3074 3874 3074 3849 3074 3823 3074 3797 3074 3771 3074 
3746 3074 3720 3074 3694 3074 3669 3074 3643 3074 3617 3074 3591 3074 3566 3074 3540 3074 3514 3074 
3489 3074 3463 3074 3437 3074 3411 3074 3386 3074 3360 3074 3334 3074 3309 3074 3283 3074 3257 3074 
3231 3074 3206 3074 3180 3074 3154 3074 3129 3074 3103 3074 3077 3074 3051 3074 3026 3074 3000 3074 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[2331 1166 2306 1166 2280 1166 2254 1166 2229 1166 2203 1166 2177 1166 2151 1166 2126 1166 2100 1166 
2074 1166 2049 1166 2023 1166 1997 1166 1971 1166 1946 1166 1920 1166 1894 1166 1869 1166 1843 1166 
1817 1166 1791 1166 1766 1166 1740 1166 1714 1166 1689 1166 1663 1166 1637 1166 1611 1166 1586 1166 
1560 1166 1534 1166 1509 1166 1483 1166 1457 1166 1431 1166 1406 1166 1380 1166 1354 1166 1329 1166 
1303 1166 1277 1166 1251 1166 1226 1166 1200 1166 1174 1166 1149 1166 1123 1166 1097 1166 1071 1166 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4260 1166 4234 1166 4209 1166 4183 1166 4157 1166 4131 1166 4106 1166 4080 1166 4054 1166 4029 1166 
4003 1166 3977 1166 3951 1166 3926 1166 3900 1166 3874 1166 3849 1166 3823 1166 3797 1166 3771 1166 
3746 1166 3720 1166 3694 1166 3669 1166 3643 1166 3617 1166 3591 1166 3566 1166 3540 1166 3514 1166 
3489 1166 3463 1166 3437 1166 3411 1166 3386 1166 3360 1166 3334 1166 3309 1166 3283 1166 3257 1166 
3231 1166 3206 1166 3180 1166 3154 1166 3129 1166 3103 1166 3077 1166 3051 1166 3026 1166 3000 1166 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[2331 3074 2306 3074 2280 3074 2254 3074 2229 3074 2203 3074 2177 3074 2151 3074 2126 3074 2100 3074 
2074 3074 2049 3074 2023 3074 1997 3074 1971 3074 1946 3074 1920 3074 1894 3074 1869 3074 1843 3074 
1817 3074 1791 3074 1766 3074 1740 3074 1714 3074 1689 3074 1663 3074 1637 3074 1611 3074 1586 3074 
1560 3074 1534 3074 1509 3074 1483 3074 1457 3074 1431 3074 1406 3074 1380 3074 1354 3074 1329 3074 
1303 3074 1277 3074 1251 3074 1226 3074 1200 3074 1174 3074 1149 3074 1123 3074 1097 3074 1071 3074 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 100 [ 0]
[4260 3074 4234 3074 4209 3074 4183 3074 4157 3074 4131 3074 4106 3074 4080 3074 4054 3074 4029 3074 
4003 3074 3977 3074 3951 3074 3926 3074 3900 3074 3874 3074 3849 3074 3823 3074 3797 3074 3771 3074 
3746 3074 3720 3074 3694 3074 3669 3074 3643 3074 3617 3074 3591 3074 3566 3074 3540 3074 3514 3074 
3489 3074 3463 3074 3437 3074 3411 3074 3386 3074 3360 3074 3334 3074 3309 3074 3283 3074 3257 3074 
3231 3074 3206 3074 3180 3074 3154 3074 3129 3074 3103 3074 3077 3074 3051 3074 3026 3074 3000 3074 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
3 Setcolor
5 Thickness
[] 0 setdash
3 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-0.4) 664 3874 0  0.00 [664 3774 172 99] Show
%Latex:\myput{664}{366}{5}{-0.4}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 750 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-0.3) 1307 3874 0  0.00 [1307 3774 172 99] Show
%Latex:\myput{1307}{366}{5}{-0.3}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[1393 3710 1393 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-0.2) 1950 3874 0  0.00 [1950 3774 172 99] Show
%Latex:\myput{1950}{366}{5}{-0.2}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[2036 3710 2036 3773 
] dogrey 
3 Setcolor
32 Setcolor
(-0.1) 2593 3874 0  0.00 [2593 3774 172 99] Show
%Latex:\myput{2593}{366}{5}{-0.1}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[2679 3710 2679 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.0) 3252 3874 0  0.00 [3252 3774 139 99] Show
%Latex:\myput{3252}{366}{5}{0.0}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[3321 3710 3321 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.1) 3895 3874 0  0.00 [3895 3774 139 99] Show
%Latex:\myput{3895}{366}{5}{0.1}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[3964 3710 3964 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.2) 4538 3874 0  0.00 [4538 3774 139 99] Show
%Latex:\myput{4538}{366}{5}{0.2}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[4607 3710 4607 3773 
] dogrey 
3 Setcolor
32 Setcolor
(0.3) 5181 3874 0  0.00 [5181 3774 139 99] Show
%Latex:\myput{5181}{366}{5}{0.3}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[5250 3710 5250 3773 
] dogrey 
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 750 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[964 3710 964 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1179 3710 1179 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1393 3710 1393 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1607 3710 1607 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[1821 3710 1821 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2036 3710 2036 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2250 3710 2250 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2464 3710 2464 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2679 3710 2679 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[2893 3710 2893 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3107 3710 3107 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3321 3710 3321 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3536 3710 3536 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3750 3710 3750 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[3964 3710 3964 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4179 3710 4179 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4393 3710 4393 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4607 3710 4607 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[4821 3710 4821 3757 
] dogrey 
 (drawsegs) 4 [ 3]
[5036 3710 5036 3757 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-0.25) 451 3749 0  0.00 [451 3649 227 99] Show
%Latex:\myput{451}{491}{5}{-0.25}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 690 3710 
] dogrey 
3 Setcolor
32 Setcolor
(-0.20) 451 3431 0  0.00 [451 3331 227 99] Show
%Latex:\myput{451}{809}{5}{-0.20}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3392 690 3392 
] dogrey 
3 Setcolor
32 Setcolor
(-0.15) 451 3113 0  0.00 [451 3013 227 99] Show
%Latex:\myput{451}{1127}{5}{-0.15}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3074 690 3074 
] dogrey 
3 Setcolor
32 Setcolor
(-0.10) 451 2795 0  0.00 [451 2695 227 99] Show
%Latex:\myput{451}{1445}{5}{-0.10}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 2756 690 2756 
] dogrey 
3 Setcolor
32 Setcolor
(-0.05) 451 2477 0  0.00 [451 2377 227 99] Show
%Latex:\myput{451}{1763}{5}{-0.05}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 2438 690 2438 
] dogrey 
3 Setcolor
32 Setcolor
(0.00) 484 2159 0  0.00 [484 2059 194 99] Show
%Latex:\myput{484}{2081}{5}{0.00}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 2120 690 2120 
] dogrey 
3 Setcolor
32 Setcolor
(0.05) 484 1841 0  0.00 [484 1741 194 99] Show
%Latex:\myput{484}{2399}{5}{0.05}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 1802 690 1802 
] dogrey 
3 Setcolor
32 Setcolor
(0.10) 484 1523 0  0.00 [484 1423 194 99] Show
%Latex:\myput{484}{2717}{5}{0.10}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 1484 690 1484 
] dogrey 
3 Setcolor
32 Setcolor
(0.15) 484 1205 0  0.00 [484 1105 194 99] Show
%Latex:\myput{484}{3035}{5}{0.15}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 1166 690 1166 
] dogrey 
3 Setcolor
32 Setcolor
(0.20) 484 887 0  0.00 [484 787 194 99] Show
%Latex:\myput{484}{3353}{5}{0.20}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 848 690 848 
] dogrey 
3 Setcolor
32 Setcolor
(0.25) 484 569 0  0.00 [484 469 194 99] Show
%Latex:\myput{484}{3671}{5}{0.25}
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 530 690 530 
] dogrey 
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 705 3710 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3551 705 3551 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3392 705 3392 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3233 705 3233 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3074 705 3074 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2915 705 2915 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2756 705 2756 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2597 705 2597 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2438 705 2438 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2279 705 2279 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2120 705 2120 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1961 705 1961 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1802 705 1802 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1643 705 1643 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1484 705 1484 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1325 705 1325 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1166 705 1166 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1007 705 1007 
] dogrey 
 (drawsegs) 4 [ 3]
[750 848 705 848 
] dogrey 
 (drawsegs) 4 [ 3]
[750 689 705 689 
] dogrey 
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 5250 3710 
] dogrey 
3 Setcolor
3 Setcolor
 (drawsegs) 4 [ 3]
[750 3710 750 530 
] dogrey 
3 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
3 Setcolor
[] 0 setdash
3 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
3 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 


